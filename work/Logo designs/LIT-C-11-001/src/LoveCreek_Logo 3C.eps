%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: LoveCreek_Logo 3C.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Frank Bilotto
%%CreationDate: 12/7/09
%%BoundingBox: 0 0 395 98
%%HiResBoundingBox: 0 0 394.3335 97.0171
%%CropBox: 0 0 394.3335 97.0171
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 5777 C)
%%+ (PANTONE 5435 C)
%%+ (PANTONE 4655 C)
%%+ (PANTONE 4635 C)
%%CMYKCustomColor: 0.1000 0 0.4900 0.2800 (PANTONE 5777 C)
%%+ 0.1300 0.0300 0 0.1700 (PANTONE 5435 C)
%%+ 0 0.2600 0.4500 0.1800 (PANTONE 4655 C)
%%+ 0 0.4800 0.9600 0.4400 (PANTONE 4635 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">LVC-C-09-001 Logo Development Final</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-12-07T11:25:33-05:00</xap:CreateDate>
         <xap:ModifyDate>2009-12-07T11:25:33-05:00</xap:ModifyDate>
         <xap:MetadataDate>2009-12-07T11:25:33-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>64</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAQAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7DY2mhJoWlXraVa3NxqF&#xA;stxcXEqVkd33LOwNWJrvXMbS6bHOAkRuW7UZ5xmQCvP6EpT9CWP/ACL/ALcyPyePuaPzeTvaI0Mq&#xA;VOh2JVhQgx1BH0nH8nj7l/N5O9ZHB5ejBEeg2CA9QsVP1HEaLEOgSdXk73G38umT1f0BYep/P6Xx&#xA;eHWuD8li7gv5zJ3qqtoiqFXQ9PAHQeiMl+Tx9wR+ayd7uejdtFsRtQ0jpUe9Dvj+Tx9y/mp96Igt&#xA;tKeKC7t9Pt7O6gvrJI5LdODcZJ1DgkeK1B9sozYIQogb2PvbsOaUrBPQ/czPUbqe0spLiC1kvZUA&#xA;K20JQO1SAac2RduvXLZyIFgWwiLNXTBbz869Dtb5tPk0nU0v1cRNbSRRI/I9BT1WNTUU8cwJdpQB&#xA;rhlf483LjoZEXYpnljcTXFpHNNbPaSuKtbSlGdDXoTGzr9xzPiSRZFOHIUedq+SQ7FXYq7FXYq7F&#xA;XYq7FXYqkHmHztouiXEVjJ6t5qtxT6vplonqzvXvx2Cj/WOY+XUxga5y7hzbseCUxfId6X3HnPzP&#xA;axm5ufKF4LMCpeGeCaUDx9FCWys6iY3MDXvH3MxggdhMX8UXoP5ieU9cltrexvP9Nui6pZSKyzKY&#xA;0LsGG42Uda0yeLV450Adz0Y5NNOFkjZkmZLQ7FXYq7FXYq7FWFee/wAzLfyq/wBXfTLm4nkWsExA&#xA;jtnNASBLUkla7gLmFqtYMW1H9DlafSnJvY/SyfQNQl1LQtO1GVVSW8tYbiRFrxDSxq5ArU0qcycU&#xA;+KAPeGjJHhkR3FHZYwedJEsPlzQIlbmsdkiK/SoXauDRCsY9y6s3kKhmU4rsVdirsVdirsVTTTi4&#xA;08lCQfr9gDTwNwoP4Zi6rkPePvcrTcz7j9zOMKvCPzGVR+cGnkAAmWxJ9zzUZotZ/jA+DuNN/cH4&#xA;vd83rp3Yqhb7VtK08A395BaBvsmeVI6/LmRkJZIx5kBlGBlyFqlve2dzD69tPHPBv+9jdXTbr8Sk&#xA;jJCQIsFBiRsVH9M6PSv163p4+qn9cj4ke8J4JdyrNqFhAqNNcxRLIKxs7qoYeK1O/XCZgcyoiT0b&#xA;W8tHtzcLPG1uoJaYOpQAdatWm2HiFWjhN0o2OtaPqDulhfW928f21glSQr8whNMjHJGXIgplCQ5i&#xA;kZk2KVeatcj0Ly9f6s4DfVYiyIejSMQsan5uwGVZ8vBAy7mzFj45CPewP8k9Oe9h1LzVqLG41S9u&#xA;GhWeTdgigM5U9uTNTbsuYHZsOIHId5EuZrpVUByD1HNo69g+reSktvP2jeaNLtwC0skWqRoKCksL&#xA;qJ6beNG8TT3zByaassckR7/lzcuGe8Zgfgy+/wBT0/T41lvbmO2R2CIZGC8mY0CrXqT4DMyUxHma&#xA;caMTLkuW/sWvGsluIjeIod7YOplCHoxSvKnvTHiF1e6OE1fR17qFhYw+te3MVrD09WZ1jX/gmIGM&#xA;piIsmkxiTyDdnfWV7CJ7O4iuYTsJYXWRf+CUkYxkJCwbRKJHNdcXFvbwtNcSpDCgq8kjBVA9yaDC&#xA;SBuVAJ5KNhq2lairNp95BeKv2mglSUD58CcjHJGXIgplAx5innH/ADkAB/hvTj3+udf+eT5ru1fo&#xA;Hvc7s76z7ma+UJoYvJugmWRYw2n2iqWIWp9BTQV+WZunIGOP9Ufc4uYXkl7ym8d3aySGKOaN5AOR&#xA;RWBbjWlaA9MuEgWogvPvrVhBoGgrctJQ2alWiAfb/ZMmYuLVDHCII6MtRC5lqGby/L11F4ie0kDf&#xA;rRny6OvgXH8JMbbQ7e72s9Rt52/lBo3/AAO5y+OojLkV8Mr5PKeqr9n03/1W/wCagMs4wjwyg5tE&#xA;1WEVe2eg6lRzH/C1yQkGJiUEQQaHYjqMLF2Kp3oRAtXJXkBd2op85KA/QTXMfUdPe5GDqzHAyeE/&#xA;mP8A+Tf07/jJY/8AJwZotZ/jA+Dt9N/cH4vds3rqEk86+YT5e8sX2rIoeaBAIEboZJGCJX2Bap9s&#xA;o1OXw4GTbgx8cxFjH5VaPaal5bOvavGmo6nqskrT3FyqysERzGIxyB4r8FaDMbQ4xKHHLeUnI1cz&#xA;GfDHYBifmaOX8u/zAtLzSSYdG1Pi9xZ1/d8efGZADt8NQyntXwzEzD8vmBj9Mujk4v3+IiX1BA+f&#xA;9CsfKP5g2OqCzSTRbqRbn6qVBjqrATxhSKbV5AdNxleqxDFmEq9J/BZ6fIcmIi/UHpP5h29hq+g2&#xA;Oj20cU1zrM0UWnScQ3pRCkss6dwqRL28Rmy1YE4CI5y5fr+TgaYmMjI/w82E+a7+xg85aT5Kgs5p&#xA;fLml+mbjTLVS0lxKyesOSgj1Oqk/7I5hZ5AZI4gPRHoOrl4Yk4zkv1HqiPO2l3d9Jp2o+UfLd9pm&#xA;rWklTcLAlqPTC0AKq256AbdKjJamBlUscDGQ8qY4JgWJyBB+L1fSpr2fS7Sa+h+r3skMbXUGx4Sl&#xA;QXXYno2bWBJiCebrpgAmuTEfznilfyBeGP7McsDSD/J9UD9ZGYnaI/cn4OToT+8CW/kNqMU/lS5s&#xA;qj1rO6YsvfhKoZT9LBvuyvsud4yO4tnaEamD3h6VmycB2KvBfzd0eKy8+ae1i7Ry3yxzEyM0oWZp&#xA;2HMcy23T4emaHX4+HKK6/rdxo53jN9GY2v5PNaebbLXo9Znn9KX6xeGb+/kkAqaSLQcXOzAj7O2+&#xA;Zkez6yCfEXFOtuBjTHPK3me18xebtV1nVtLutYWAKmlW0EAuI7eJmbcoxAViFXenWuY2DMMmSUpA&#xA;y7trpvy4jCAjEiPf5php+m+YbD8xINQ8uaJd6doF60Ueo20ypFFxJpI/phmC8B8Q71r40yyEJxzX&#xA;CJEDzYSlE4qnIGQ5IfW/MketfmidO1CzuNS0bSDIsWmW8fq+pOi0aSSMkBqMT17AeJrHJm48/CQT&#xA;GPRljxcOGwalLq35p0/WTr+na75M8u3unXcXP67yhSBJRVeKtGrb1+LnUb7Yc8JcYniiQevRcUo8&#xA;JjkkCEx/PtmbyvpjOvBzdgslQaEwvUVHhlnan92Pe19n/WfclT+btB1/R/LvkZJI0E9taQ32pSoH&#xA;EMiQr+6hDD+9Zhw5/s1+6o6iGSMcXkLPw6ebZ4MoSlk8zs9N8t+TvLvl2ER6XaLFIV4yXLfFM478&#xA;pDvQkVoNvbNnh08MY9IcDLnlPmXn1zT/AAv5Yp0/R0dPuGayf0Q/qstR/eS96DtLO5vJ1t7aMyzP&#xA;9lF/z2yqMTI0GlmWkfl8ysk2oz0IofRhO4Pu/wDT78z8ei6yK2zOSSOGMvIwSNBuzHYD3JzPAQkd&#xA;75ts46raoZ37MfhT+pywY2s5Axe8u5ru4e4mp6j9eIoNthlgFNRNqOFCe+X4vUtZVrxpc2rfPjJy&#xA;p+GY+cXXvcjAebLyQBU7AdTgZPnTzx5jsNR/MlNV0/ld2VlJbfvIgTzEBVnK7dK1AOc7qcwlm4hu&#xA;BTvMGIxxcJ2Jt6pc/nN+X8MJeO+kuHA/uY4Jg59v3ixr/wANm0l2jhA5/Y64aLKejHFk8x/mVY61&#xA;MsTWGi/VhDpFu5oJblJUl9Rj0J/dcCeihqDucx7nqRI8o1t72/0YDHrK91n5R+bINFhufKvmF/0b&#xA;d28rSW31r90KP9qMlqAHl8Q8a4NBnEAcc9iO9dZhM6nHcIzzfYp56846PZaWRcaXpBeTU9Sj3hBd&#xA;kJhWQbM9Ix9npX2OT1EfHyREfpjzLHDLwYEnnLkGRfmn5Y/T/lK4SJOV7Zf6VaUFSSgPNB/rJX6a&#xA;Zka7D4mM943aNJl4J+RSP8mtL1WfS4db1aRpBDD9R0aN/wDddsG5Ow/1mooPXivhTKez4SMeKXuH&#xA;ubtbMA8MfefekH5qaZrHl/zvbec7GIyWzGJ5JNyqyxKIyj0+yrxqBX55j66EseUZRybtJKM8Zxlm&#xA;Gn/nD5Y1C2iFnFdXGqyiiaXFCzSl/DnT0+Nf2uXTMyHaEJDa+LucaWinE71XezSykupLOGS7iWC6&#xA;dFaeFW5qjkfEoag5UPfMyJNb83ElV7Keq6Za6pptzp12vK2uo2ilA60YUqPcdRgnASiYnkUwkYkE&#xA;dHgSWvmz8rvMpuzAbnT3/dtMARBcRE1ALCvBx4HcHxHXQ8OTSzvmPvdzcNRCuv3PR7f87/JEtqss&#xA;jXEU5G9qYSz18AykofvzYjtLER1cE6DJfRH6HfeZPM2pQanNbzaN5ftSZLa1kPG4u3IorSgfZjUG&#xA;vHufEZZilPLISI4YD5lhkjDGK+qR+x5z+cOsWM3nuwNu/r/ouOMXnp/FwZJmdl+ajrmu7QyA5RX8&#xA;PNztFAjGb6va9J1nS9XslvdNuUurZjT1IzWjUBKsOqsK9Dvm6x5IzFxNh1M4GJoh4bo17fflh52u&#xA;oNRt5H0m6qnNBXnCGrFKlSAWXoRXxzR45HTZSJD0l284jUYwRzepab+Ymma5dxWvl2CbUXLKbqdk&#xA;eCCCOvxF5HX7VPsqAan23zaQ1cZmoC/0OvlpjAXLZ5x5vh1fyP8AmT/iaOFptNvJTLzH2WEopNEx&#xA;7NUkr9BzXagSwZuPofwXOwmOXFwdQz21/NjQdTjSHQre51LVZV/d2CxshU/8Wyt+7RR3YE5nx10J&#xA;bQBMu5wzo5R+qgO9jX5+6jbfojS9PeRPr5m+sPAp5FUCMnLsaFjQEjffMbtSY4QOrf2fE8RPRJNV&#xA;8taT5m8kaZqnlpkfW9Gs4YtSsYqLKwRaMxQb8w4Zgf2h70yieGOXEJQ+qI3DbDLLHkIn9MjszD8s&#xA;fzMttXsoNK1iX0tZjIhikeoW5oNqNSnqfzKevUe2ZotaJjhl9X3uNqtKYnij9P3JVcinlfyv/wBs&#xA;6P8AEDMef0Q/qtGo/vJe9rQ9auNIvfrMKiQMvCSNtuSkg0r26YMWUwNhpZ5p/njRLoBZXNrKf2ZR&#xA;8Nf9cbffTNjDVwPPZCdBrS8gIVkuIHFDQh1P3VzIjIHcKl83lbSJCSqNFX+Rj/xtyyzjLDgCGbyd&#xA;ZH7M8g+fE/wGHxCjwwt/wbbf8tD/AHDHxF8Ne2ipp9sixO0vqXVqxqBsFlU9spzSuveG3FGr9yeS&#xA;yxRRtJK6xxqKs7EAAe5OEmkAIRdY0VQFW+tgo6ASxgfryPiR7wz4Jdxak1bQpF4yXlq69aNJGR+J&#xA;wHJDvC8Eu4tjWdGAoL62AHQeqn9cPiR7wvBLuKhdXXle74/WprG44/Z9VoXpvXblXvkZSgedJAmO&#xA;VqsWq6FFGscV5axxqKKiyRgAewBwicB1CDCXcV/6a0b/AJb7f/kan9cPiR7wjgl3NLrGiIoVb22V&#xA;VFAoljAA+/HxI94TwS7i0+r6I6lHvbZkYUZTLGQQfEE4+JHvC8Eu4qNrdeV7QsbWaxty/wBsxNCl&#xA;fnxpXIxlAcqSRM87RH6a0b/lvt/+Rqf1yXiR7wx4Jdzv01o3/Lfb/wDI1P64+JHvC8Eu5ptY0R1K&#xA;te2zKwoVMsZBH34+JHvCeCXcULC/lGCX1oG0+KWtfUQwq1enUb5AHGNxw/YyPGe9F/prRv8Alvt/&#xA;+Rqf1yfiR7ww4Jdzv01o3/Lfb/8AI1P64+JHvC8Eu5oaxoorS+thU1NJY+v34+JHvCeCXcVO5v8A&#xA;y7dR+lc3NnPH/JI8Tr9zE4DOB5kKIyHK24NS8v28YigurSGMdEjkjVRX2BxE4DkQpjI8wW5dV0Ga&#xA;No5by1kjbZkaSNlPzBOJnA9QohIdCp2t55ZtFKWk9lbqxqyxPEgJ9wpGCMoDlSTGZ52rfpjReXL6&#xA;9bcqU5erHWn35LxI94RwS7i0NX0QMzC9tgzfaIljqadK74+JHvC8Eu4q0Go6fcP6dvdRTSUrwjkV&#xA;jQd6AnCJg8igxI5h5dfqy+XPLasQWWwRSV6bUG2ajJ9EP6rZn+s+9LMpanYqvinmhfnDI0b/AMyE&#xA;qfvGEEjkqZ2/mvzDBTheuw/4spJ/xMNlo1Ex1VGJ5919RRmif3ZP+aSMsGsmqt/ysTW/9823/Ayf&#xA;814fzs+4LSdeXtfvdXgka7CAxTwCPgCPtMSa1J8MyMGYzG/eEhkt0Lo28gtWRLkqfRaVS6Bu3JVZ&#xA;CR8jmXK625oFXukfkPWtX1vy7Dqmp/V1muHlVIrZHRVEUjRGpd5ORJQntlGlySnDilTdqIRhKgyH&#xA;MhodiqTebtaudI0Oe4sovrGpSfubC3A5c5mBI27hVUufYZTqMhhGxz6NuGAlKjy6ony9rEOtaHZa&#xA;pDThdxLIVG/F6UdP9iwIyWLIJxEh1Y5IcMiO5MMsYKF+t+1nKLB4o7zj+4adWeLl/lqjI1D7H+mR&#xA;ldbc0xq9+TH/ACN51t/M2nPzVbfVrWi3tpvQE/ZkSu5R+33e+Y+m1IyjukObfqMBxnyRmg3uuz6l&#xA;q1rqUls8VjLHFbtbxSRMweJZeT85Zf56UGTxSmZSEq2/HewyRiACL3TvL2pLvMV1f2eiXt5YNEtz&#xA;awvOgnRpI29NSxUhHjO9KVrt75XmkREkcwzxgGQBSXRr3zpqfl+z1iC5sGnu4EnFi9vKkfxCvASi&#xA;Z2X5lT8soxyyygJAx36V+1unHHGRjR28/wBiZ+VvMkOvWEk/ota3ltK9tf2TmrQzxmjLXao7g5bg&#xA;zDIL5EbENeXFwHvCcZc1Me8+a1q2h+WrrVtN9BpbTizxXKO6urOEIBR4ypHKvfMfVZJQgZRrZv08&#xA;IzmInqnloLoW0Qu2RrniPWaJSicu/FSzkD/ZHL43W/NpNXsq4UMT80ebrzy1rVi1+sUnl++5RvNH&#xA;G/r28i8fjkbmytGeXZQR798TPqDjkL+g/Y5OLCMkTX1D7Ud5s1XVrLRRqWjy2rBWi5CeN5ldJpEQ&#xA;MjRyR0pz5d6+2WZ5yjHijTDDCJlUrT1A4RQ5Beg5ECgJ70BJp9+XtLeKpHda3e3OuSaJpCxia1jS&#xA;XUL2YF44fV/u4xGrIXkcAt9oADffplEshMuGPTmW4YwI8UuvJSvbvzbpk9s7Jb6rp808UNw0UbwT&#xA;wLLIE9XjymWRV5bgBTglLJEjlIfIhMRCQPQsGvY2j8t+Wo2+0mnopp4igzXZB6If1UZ/rPvS3KWp&#xA;2KuxV2KuxV2Ks4/LgKYb0Hf44yPmAxzYaHkVZpmehiH5XTwr5CspWkURo92XckBVH1qU1J7bb5ia&#xA;Ijwh8fvLk6sfvD8PuZXbXNvdW8dzbyCWCZQ8Uq7qysKhge4I6ZlRkCLDjkEGiqYUMTvIdW1rzM82&#xA;mXsNrBoQNuHmgNyr3U6BpSAJYaGOIqta/tMMxJCU53E1w+V7/NyYmMIbi+L7kF5AFxomsav5SvJl&#xA;lkhYajYSInpK8Fx/eBI6vxWOXalT1yGluEpYz7x8WWoqcRMe4s5zOcR2KvN9P8t3d35V0XzBoDrD&#xA;5isIW9BtvTuYebcreXsQ37J7Hw6jWwwk44zh9Y+3yc6WUCZjL6T9nmnnkLXI9cfWNQWF7Z3uYkmt&#xA;pQQ8csdvGkiGtOjKcv0uXj4jy3/Q1ajHwUPL9LLMy3GS3zP/AMo1q3/MHcf8mmyrN9EvcWzF9Y96&#xA;A8hSIvkbRXLAItlEWYnYUTep9shpT+6j7meo/vD70N5KtzJf+YNZj2stUvA1kegkjhjEZlX/ACXe&#xA;tD3G+R0w3lLpI7JznaMeoDKsynHYn+apA/L/AFiu37uP/k8mYmu/uZOTpP70MrjdJEWRDVHAZT4g&#xA;7jMsFxm8VSHXYrW417RrS5VJYp1vFeFwCHT0gGBU9RvmPlAM4g+bdjJESR5MI15NR8p2cnl2YSXX&#xA;l6/mg/Qt0as1tIJ0c2spP7NFJQ/5jCy8WIcHOB5eW/Jy8dZDxfxDn5+b1XNq652KsK0S5XTPzD17&#xA;T72kTax6F3pkrbCYRRenIgY9WQ/s/TmFjlw5pA/xUQ5WQcWKJH8PNE+fr28tm0OKyv5bOe/1K3s5&#xA;I4ePJ4JCfVIDKxHEftDpktVIjho1cgEaeIPFYuhaRfV7aXS9Ns9TtdTgvdPt1t51t7C5mj5r9rjI&#xA;iMrCvQqaZjmIMQJCVgfzSnJj4pEgij5hYuj6IxUBNY+KtK6bcjp41j2+nI+DH+l/pS1+Ce+PzCp+&#xA;gNH/AJdV/wCkCb/mjD4Ef6X+lR4R7x8wuk8uaSlKjUzUVHGylb76KcJ08f6XyXwz3j5r18r6Yyhh&#xA;+kqHfe0cH7iMfy8f6XyR4fmPmqx+TrCRaqb4CtPig4n7mpkhpR/S+SDHzCIi8g2kgqJLlR4uka/g&#xA;WrhGjB70EJ9oHlyHR1lEcryeqyseYApxBHb/AFsycOAQQmd3F6ttJF6ayh1KmNyVVgdiCQG2+jLp&#xA;CwoNFjY8laME4Dy5pfCteHM8a/L0KZjflo/zI/j4N/jy/nS/HxTxX1ZFCJaWyqoAVRcOAAOgA9DL&#xA;/V3D5/savT3n8fFv1dZ/5Zbf/pIf/qhjcu4fP9iKj3/j5oLTtLfTTKbDS7O2M7c5vTmdebfzNSDc&#xA;++QhDh5AD8e5nKfFzJ/HxU5NDSTUl1STSLFtRUgrdmZ/UHHpRvQrgOK5cXCL/HkkZNqs1+PNMfV1&#xA;n/llt/8ApIf/AKoZZcu4fP8AY11Hv/HzU7lNRuYJLe4srWWGVSskbXDkMp6g/ucBEiKIHz/YkUDY&#xA;J/HxUNNsJ9Mt/q2n6bZ2tvUt6UU7qtT1NBBkYQMRQAHx/YylLiNkn8fFVggvoJZ5YbC0jkuXElwy&#xA;zuC7hQgZv3G54qBkgCOQG/n+xBIPU/j4q3q6z/yy2/8A0kP/ANUMNy7h8/2Maj3/AI+ahe299e20&#xA;lrd2FrNbyikkT3DlWANaEej02yMgZCiBXv8A2MokA2Cfx8Uuh8q6fCgji0HTliB5el6jcK+PEwcc&#xA;rGAD+GP4+DM5if4j+Pim4k1cAAWlsANgBcP/ANUMuuXcPn+xrqPefx8W/V1n/llt/wDpIf8A6oY3&#xA;LuHz/Yio9/4+aE1LTptUtxb6jplndQBg3pSzOy8h0NDBkJwMhRAP49zOMuE2CR+Peq2cF9ZWyW1p&#xA;YWsNvGKRxJO4VR4AejhiDEUAPn+xEiCbJP4+Kt6us/8ALLb/APSQ/wD1QyVy7h8/2Maj3/j5oG60&#xA;g3V9Df3OlWUt7b09C4aZy6UNfhb0NshLHZsxF/jyZidCgTX480RdQ313F6N1YWk8XJX4STuw5IQy&#xA;mhg6giuSkCdiB+PggEDkT+PirerrP/LLb/8ASQ//AFQw3LuHz/YxqPf+Pm71dZ/5Zbf/AKSH/wCq&#xA;GNy7h8/2LUe/8fNCalp0upwCDUNLsrqJTyVZZmbi38ykwVU+4yE4cQogH8e5nGXDuCfx8XaRolvY&#xA;3BlTTba3cqVNxHI0stK/Z5PGrcf9ljjxiJ5ALPISOZf/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:E2DB9F733DE3DE11846DFAF1581AAF57</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8E85086D3FE3DE11846DFAF1581AAF57</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:E1DB9F733DE3DE11846DFAF1581AAF57</stRef:instanceID>
            <stRef:documentID>uuid:DBDB9F733DE3DE11846DFAF1581AAF57</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 4635 C</rdf:li>
               <rdf:li>PANTONE 4655 C</rdf:li>
               <rdf:li>PANTONE 5777 C</rdf:li>
               <rdf:li>PANTONE 5435 C</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 497 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>70.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>78.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 483 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>91.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5753 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>81.000000</xapG:yellow>
                           <xapG:black>66.999992</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 457 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>14.999999</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>28.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 4515 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>9.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>24.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 117 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>18.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>14.999999</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5803 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>2.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.000000</xapG:yellow>
                           <xapG:black>11.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5773 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>9.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>42.999996</xapG:yellow>
                           <xapG:black>38.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 471 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>58.999996</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>18.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 704 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.000000</xapG:magenta>
                           <xapG:yellow>72.000000</xapG:yellow>
                           <xapG:black>29.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 222 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>10.000000</xapG:yellow>
                           <xapG:black>58.999996</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 1265 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>26.999998</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>51.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 139 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>22.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 385 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>3.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>58.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 534 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>80.000000</xapG:magenta>
                           <xapG:yellow>30.000002</xapG:yellow>
                           <xapG:black>5.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 634 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>9.000000</xapG:yellow>
                           <xapG:black>40.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 444 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>14.999999</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>14.999999</xapG:yellow>
                           <xapG:black>42.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 442 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>8.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>9.000000</xapG:yellow>
                           <xapG:black>19.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5483 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>62.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>21.000000</xapG:yellow>
                           <xapG:black>31.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 645 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>55.000000</xapG:cyan>
                           <xapG:magenta>24.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>9.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5503 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>29.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>10.000000</xapG:yellow>
                           <xapG:black>14.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 551 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>26.999998</xapG:cyan>
                           <xapG:magenta>3.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>13.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 317 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>18.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>8.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5435 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>13.000000</xapG:cyan>
                           <xapG:magenta>3.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>17.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 5777 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>10.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>48.999996</xapG:yellow>
                           <xapG:black>28.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 4655 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>26.000000</xapG:magenta>
                           <xapG:yellow>45.000000</xapG:yellow>
                           <xapG:black>18.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 4645 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.000000</xapG:magenta>
                           <xapG:yellow>68.000000</xapG:yellow>
                           <xapG:black>28.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 4635 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>48.000000</xapG:magenta>
                           <xapG:yellow>96.000000</xapG:yellow>
                           <xapG:black>44.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -97.0171 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 97.0171 li
394.333 97.0171 li
394.333 0 li
cp
clp
[1 0 0 1 0 0 ]ct
65.4795 95.9565 mo
65.3066 95.9575 65.1323 95.9585 64.9565 95.9595 cv
65.1055 95.9829 65.292 95.9702 65.4795 95.9565 cv
cp
65.4795 95.9565 mo
65.666 95.9556 65.8545 95.9546 66.0376 95.9546 cv
65.8813 95.9253 65.6802 95.9409 65.4795 95.9565 cv
cp
95.5337 7.58838 mo
95.064 5.45068 96.2715 1.6377 94.0015 1.30127 cv
94.4136 1.33301 94.8218 1.35791 95.0479 1.27588 cv
96.1357 1.63525 94.9766 4.47559 95.8975 4.7959 cv
95.73 5.68066 95.6909 6.69336 95.5337 7.58838 cv
cp
95.5337 45.4585 mo
95.2544 45.1719 95.4897 44.3696 95.4116 43.8813 cv
95.7578 44.2915 95.6055 44.8809 95.5337 45.4585 cv
cp
92.7412 1.39746 mo
92.8384 1.24072 93.231 1.24658 93.6758 1.27686 cv
93.4063 1.27588 93.0972 1.31299 92.7412 1.39746 cv
cp
91.8921 1.76172 mo
92.0601 1.48438 92.7368 1.71631 93.106 1.64014 cv
92.9375 1.91699 92.2607 1.68555 91.8921 1.76172 cv
cp
62.8813 1.0332 mo
61.6455 0.962891 62.2871 0.901367 63.6099 0.912109 cv
65.3091 0.912109 li
64.7915 1.09668 63.6152 1.0752 62.8813 1.0332 cv
cp
56.5698 2.24707 mo
56.3086 1.93896 56.4165 2.12939 56.5698 2.12549 cv
57.5679 2.10205 59.7681 2.1875 60.939 2.24707 cv
59.8403 2.84717 57.9585 2.16211 56.5698 2.24707 cv
cp
60.0894 1.76172 mo
59.1011 2.14746 58.6719 1.30908 60.0894 1.76172 cv
60.0894 1.76172 li
cp
45.4023 1.76172 mo
45.5967 1.55127 45.9487 1.49902 46.3735 1.51904 cv
46.2495 1.79932 45.8149 1.77002 45.4023 1.76172 cv
cp
41.5181 1.15479 mo
40.8604 1.02588 44.0732 0.883789 44.1885 1.39746 cv
43.3164 1.64551 41.9214 1.2334 41.5181 1.15479 cv
cp
38.8477 1.0332 mo
39.187 0.522949 40.4263 0.912598 41.1538 0.790527 cv
40.6758 1.16211 39.6616 0.997559 38.8477 1.0332 cv
cp
2.31152 29.9224 mo
2.4751 29.3896 2.53125 31.4888 2.31152 31.7427 cv
2.01074 31.3159 2.48096 30.6216 2.31152 29.9224 cv
cp
2.79688 29.1943 mo
3.11914 29.4771 2.99121 29.8481 2.91846 30.2866 cv
2.64307 30.1577 2.87256 29.5234 2.79688 29.1943 cv
cp
5.46777 94.0122 mo
6.53271 94.1021 5.08789 94.105 4.49609 94.1343 cv
4.2085 94.147 3.29932 94.4536 3.28271 94.1343 cv
4.08301 93.9517 5.03271 93.9751 5.46777 94.0122 cv
cp
13.7212 94.6196 mo
12.145 94.8345 11.2461 94.4526 9.59473 94.4976 cv
10.2549 94.0366 12.6772 94.3218 13.7212 94.6196 cv
cp
34.3564 94.1343 mo
33.2744 94.5757 30.9297 94.2671 30.1079 94.1343 cv
31.3901 93.7964 32.8413 94.3032 34.3564 94.1343 cv
cp
43.9458 95.7114 mo
43.5381 95.9927 42.6128 95.7544 42.0039 95.8325 cv
42.4111 95.5532 43.3364 95.7905 43.9458 95.7114 cv
cp
45.0381 95.8325 mo
45.272 95.8306 46.6147 96.0161 47.2231 96.1968 cv
47.1626 96.6675 44.2983 95.8394 45.0381 95.8325 cv
cp
74.6558 94.4976 mo
74.2358 94.9546 73.6118 94.4868 72.835 94.6196 cv
73.0928 94.0181 74.1138 94.5913 74.6558 94.4976 cv
cp
1.70459 54.8062 mo
1.61328 53.9751 1.54932 52.4497 1.70459 51.2856 cv
2.00244 51.8052 1.75586 53.8311 1.70459 54.8062 cv
cp
1.46191 79.8101 mo
1.31934 79.7915 1.35938 79.5894 1.34033 79.4458 cv
1.09424 79.9321 1.07129 81.8315 0.976563 80.5396 cv
0.9375 80.0103 0.967285 79.1304 1.09766 78.5962 cv
1.28564 78.2251 1.20459 79.1226 1.21924 79.3247 cv
1.3999 79.1411 1.41455 78.7925 1.46191 78.4751 cv
1.87598 78.8335 1.47119 79.2427 1.46191 79.8101 cv
cp
0.85498 74.2271 mo
1.06689 74.8872 1.04346 76.355 0.85498 77.019 cv
0.603027 76.3198 0.724121 74.9478 0.85498 74.2271 cv
cp
0.733887 35.8696 mo
0.603027 35.1304 0.805176 33.6772 0.976563 32.8359 cv
0.962402 33.9414 1.0625 34.9341 1.21924 35.8696 cv
1.07666 35.8892 1.1167 36.0908 1.09766 36.2339 cv
0.824219 36.1431 1.0498 35.5532 0.976563 35.2632 cv
0.724121 35.2939 0.942871 35.7969 0.733887 35.8696 cv
cp
96.2612 11.4727 mo
96.4111 8.24756 96.4883 5.11328 96.5044 1.88281 cv
95.6597 0.385254 94.9375 0.549805 92.9839 0.547852 cv
90.9746 0.54541 88.2236 0.705566 86.187 0.668945 cv
84.5557 0.639648 83.5649 0.883789 82.0596 0.790527 cv
76.9014 0.470215 71.6309 0.516602 66.7944 0.665039 cv
66.8027 0.667969 66.8096 0.671387 66.8184 0.674316 cv
66.9624 0.672363 67.103 0.674805 67.1294 0.790527 cv
67.0371 0.744141 66.9287 0.708496 66.8184 0.674316 cv
66.7583 0.674805 66.6982 0.675293 66.644 0.668945 cv
66.6934 0.667969 66.7446 0.666504 66.7944 0.665039 cv
65.8135 0.370117 64.2061 0.478027 62.8813 0.305176 cv
62.9429 0.569336 62.3813 0.609863 62.0317 0.790527 cv
58.0649 0.0205078 53.6411 0.301758 49.4077 0.547852 cv
44.7412 0.819336 39.8472 -0.0595703 35.5703 0.305176 cv
36.21 0.3125 36.9048 0.264648 37.1484 0.668945 cv
26.6152 0.470215 17.8813 0.608398 8.1377 0.42627 cv
8.31934 0.446777 8.58594 0.383301 8.62354 0.547852 cv
7.39746 0.431152 5.63477 0.468262 4.13232 0.305176 cv
3.44482 0.230469 3.05566 -0.145996 2.43262 0.0620117 cv
1.44482 0.393555 1.3291 1.46582 0.491211 2.00439 cv
0.812012 6.53613 -0.152832 12.0474 0.248047 17.4199 cv
0.319824 16.4111 0.157715 14.7358 0.491211 13.6567 cv
0.474121 15.0557 1.06152 16.7095 0.611816 17.7842 cv
1.04785 20.0669 0.594238 24.0596 0.491211 26.7661 cv
0.461914 26.9399 0.291016 26.9707 0.248047 27.1304 cv
0.147461 27.4185 0.418945 27.6899 0.369141 27.2515 cv
0.376465 27.1777 0.387695 27.1074 0.491211 27.1304 cv
0.408691 27.8193 0.708984 28.126 0.733887 28.709 cv
-0.0556641 28.6133 0.228516 31.1626 0.369141 31.9854 cv
0.446289 31.5771 0.455566 31.1011 0.733887 30.8931 cv
1.14893 33.6299 -0.0356445 36.6841 0.126465 40.1182 cv
0.181641 41.2866 0.458496 42.8159 0.369141 44.7305 cv
0.34668 45.2212 0.0952148 50.2852 0.611816 48.1294 cv
0.452637 51 0.98291 53.8281 0.611816 56.5049 cv
0.510742 54.1787 0.498047 51.7642 0.248047 49.5859 cv
0.175781 49.335 0.397949 48.7886 0.126465 48.7363 cv
0.354492 53.6284 -0.351563 58.7061 0.248047 63.1816 cv
0.301758 62.9521 0.0830078 62.4492 0.491211 62.5737 cv
0.549316 64.5234 0.0683594 66.52 0.248047 68.4009 cv
0.299316 68.9351 0.5625 69.4419 0.611816 69.978 cv
0.787598 71.8882 0.239746 73.7251 0.248047 75.8042 cv
0.272461 81.9243 0.850098 88.2886 0.126465 94.4976 cv
1.08252 95.0435 1.53711 96.3306 2.5542 96.6821 cv
4.80176 97.4614 9.31543 96.6313 12.5078 96.6821 cv
15.6069 96.7329 18.9126 96.4624 21.6113 96.9253 cv
21.7559 96.4165 21.0996 96.7095 21.0044 96.4399 cv
26.4644 96.8315 31.1929 96.1587 36.9058 96.561 cv
37.0498 96.394 36.8462 96.3687 37.2695 96.3179 cv
41.2275 95.8462 47.4863 96.9038 51.1074 96.3179 cv
50.9785 96.3237 50.7993 96.2612 50.9858 96.1968 cv
55.8188 96.2222 60.853 95.9966 64.9565 95.9595 cv
64.8472 95.9419 64.7563 95.9058 64.7021 95.8325 cv
65.5239 95.7632 67.2749 95.981 67.4937 95.7114 cv
67.2422 95.6392 66.6968 95.8618 66.644 95.5903 cv
68.0278 94.7847 69.2749 95.6675 70.2856 95.7114 cv
71.3237 95.7563 72.4502 94.8335 73.563 95.5903 cv
73.1392 95.6519 72.6465 95.645 72.3496 95.8325 cv
75.4907 96.103 78.8003 95.1187 81.9385 95.105 cv
82.8135 95.1011 83.7456 95.4624 84.4878 94.8618 cv
84.2969 94.8511 84.0669 94.8784 84.123 94.6196 cv
85.8872 94.5259 83.877 94.5786 83.395 94.3765 cv
85.6704 93.7905 87.8677 94.8442 89.9497 93.8911 cv
89.7334 93.8247 89.4453 93.8286 89.3428 93.6489 cv
91.5278 93.6489 li
92.1597 93.5747 91.2827 93.4741 91.0425 93.5269 cv
89.9497 93.5269 li
89.8296 93.2017 88.8989 93.688 88.979 93.1626 cv
90.2163 92.9839 92.2896 93.6411 92.6206 92.5552 cv
89.5298 92.6118 86.3521 92.1079 83.5166 92.314 cv
83.8599 92.3345 84.3496 92.2085 84.3657 92.5552 cv
83.4507 92.6597 82.2612 92.3979 81.6958 92.5552 cv
81.8379 92.5747 82.04 92.5347 82.0596 92.6772 cv
80.2295 93.2065 78.0483 92.1479 76.4766 92.7993 cv
76.6201 92.8579 76.7515 92.9282 76.8403 93.0415 cv
74.8213 92.8755 72.0522 92.813 70.0425 93.0415 cv
70.2192 93.1079 70.6699 92.8999 70.6499 93.1626 cv
67.8335 93.4819 64.8667 92.9419 62.2744 93.5269 cv
62.5762 93.6704 63.2212 93.4702 63.2456 93.8911 cv
62.0791 93.9526 60.5698 94.2837 59.8467 93.77 cv
60.3608 93.6772 61.2847 93.9927 61.4243 93.5269 cv
56.9111 93.4419 53.2915 93.2866 49.0439 93.6489 cv
49.7231 93.6567 50.1147 93.9526 50.6221 94.1343 cv
48.5361 94.5044 46.8022 93.2817 45.2808 93.8911 cv
45.6494 93.9673 46.3262 93.7358 46.4951 94.0122 cv
43.1748 93.854 39.8584 94.8374 36.7842 94.1343 cv
37.0273 93.9312 37.6846 94.144 37.877 93.8911 cv
34.1128 94.3989 28.9355 93.3354 24.646 93.6489 cv
25.0293 93.6294 25.3784 93.6431 25.4956 93.8911 cv
23.6338 93.8911 21.9858 93.0317 20.0332 93.5269 cv
20.1626 93.522 20.3418 93.5835 20.1548 93.6489 cv
14.8438 93.3228 8.48047 94.5366 3.16162 93.6489 cv
3.11133 92.9282 3.31494 91.9565 2.91846 91.5845 cv
2.64063 92.0757 2.85205 93.0552 2.43262 93.4048 cv
2.43799 91.5894 2.60205 89.9331 2.79688 88.3071 cv
3.00342 88.895 2.88623 90.3677 3.4043 90.2495 cv
2.75293 89.0923 3.18555 85.5454 3.16162 83.2085 cv
3.32178 83.2104 3.27197 83.4214 3.4043 83.4517 cv
3.09473 75.1265 2.74316 67.1577 2.55762 59.437 cv
2.51221 59.6099 2.31299 59.7632 2.31152 59.54 cv
2.50439 55.7432 3.39893 51.4351 2.91846 47.7656 cv
2.84863 47.9785 3.06543 48.478 2.79688 48.4937 cv
2.9541 43.8789 2.66016 39.3994 2.91846 34.7778 cv
3.29053 35.1138 3.2168 34.2686 3.52539 34.1709 cv
4.01611 35.373 3.14014 37.2456 3.64697 38.7832 cv
4.39453 35.335 3.13184 31.0313 3.88965 27.6157 cv
3.34229 26.1274 4.21436 23.4556 3.76807 21.1831 cv
3.29102 22.6074 3.37256 25.6421 3.16162 27.7368 cv
2.79004 25.8306 2.84424 23.7456 2.67578 21.4258 cv
3.16064 20.8115 3.31348 18.9932 3.4043 17.6626 cv
3.71729 13.0688 3.65576 8.9624 3.52539 4.18945 cv
3.51855 4.06152 3.37012 4.09375 3.4043 4.31055 cv
3.40869 5.16504 3.28271 5.88916 2.91846 6.37354 cv
3.74268 8.7876 2.56006 11.6362 2.55566 14.4097 cv
2.50098 14.0107 2.10156 13.9561 2.06885 13.5356 cv
3.0918 10.5273 1.6543 5.78857 2.79688 2.9751 cv
2.6792 3.90332 2.49023 5.51611 2.91846 6.25244 cv
3.51904 4.91895 2.35498 2.55078 3.28271 2.00439 cv
4.28613 2.49805 5.5542 2.72705 6.92383 2.854 cv
6.67236 2.92627 6.12695 2.70361 6.07422 2.9751 cv
6.55908 3.06055 7.24707 3.57764 7.77393 3.21777 cv
7.59766 3.15137 7.14648 3.35986 7.16699 3.09668 cv
7.91357 3.02734 9.70605 3.28662 9.35156 2.854 cv
11.6196 3.00781 14.335 2.80127 15.9067 2.36865 cv
17.0737 2.04688 18.1084 2.3042 18.8198 2.48975 cv
20.8911 3.03027 23.4731 3.02881 25.7383 3.21777 cv
27.0205 3.3252 28.9043 3.33154 30.4722 3.09668 cv
30.5884 2.87061 30.1084 2.69092 30.4722 2.61133 cv
37.127 2.7373 43.3628 2.73828 50.0151 2.73242 cv
49.8857 2.73828 49.7065 2.67529 49.8931 2.61133 cv
51.2046 2.37891 52.9312 2.49072 54.1421 2.73242 cv
53.8179 2.81299 53.3833 2.7832 53.1709 2.9751 cv
56.8594 2.81689 59.9316 2.64111 63.8521 2.61133 cv
64.103 2.63477 65.2456 2.61523 64.5806 2.48975 cv
63.8071 2.49463 63.0889 2.44385 62.5171 2.24707 cv
69.0518 1.72607 76.3901 2.1084 82.7886 2.48975 cv
82.0972 2.6084 80.9072 2.22705 80.603 2.73242 cv
83.0967 2.85596 85.9927 3.13184 88.4932 2.854 cv
88.7563 2.94189 89.2656 2.72998 88.7358 2.73242 cv
86.5 2.70264 84.3745 2.5625 82.7886 1.88281 cv
84.9658 1.42529 87.604 2.12402 90.314 2.24707 cv
91.7432 2.31201 93.0918 2.21387 94.1143 2.44336 cv
94.1597 2.44922 94.2246 2.46289 94.3193 2.48975 cv
94.2544 2.47119 94.1826 2.45898 94.1143 2.44336 cv
93.7876 2.40186 94.5923 2.82275 94.6782 2.67041 cv
94.397 4.61084 95.1523 6.08691 95.0479 7.58838 cv
94.936 9.19238 93.6284 10.6426 94.3193 12.5649 cv
94.3193 11.958 li
94.7339 12.0288 94.3882 12.8599 94.6841 13.0503 cv
94.8125 11.521 94.7588 9.80762 95.2905 8.68018 cv
95.0942 16.5098 94.8804 23.8774 94.4409 31.6216 cv
94.8096 31.3818 94.46 29.3765 94.9263 28.8301 cv
95.1255 30.0015 94.7295 32.3115 94.8052 33.9282 cv
94.8252 34.3599 95.2188 36.7349 95.2905 35.3843 cv
95.6016 37.8916 94.3721 39.5503 95.0479 41.6968 cv
95.0679 41.0283 95.1045 40.3774 95.2905 39.8755 cv
95.3628 46.1387 94.7407 52.3545 94.9263 58.3262 cv
95.3789 56.1079 94.9551 53.0137 95.5337 50.9219 cv
96.5796 56.0205 94.0347 60.3574 95.0479 65.3657 cv
95.0225 65.0171 95.0786 64.749 95.2905 64.6377 cv
95.1182 66.6978 95.752 68.8784 95.1694 70.5864 cv
95.1484 70.4038 95.2124 70.1382 95.0479 70.1001 cv
95.0381 71.5376 95.0532 73.4341 95.0479 73.8628 cv
95.0547 73.937 95.0659 74.0063 95.1694 73.9839 cv
95.1694 73.6196 li
95.5952 73.7241 95.2471 75.2358 95.5337 75.0776 cv
96.1401 69.7339 95.3647 65.0913 95.7759 59.54 cv
95.7866 59.2261 96.2964 59.4126 96.1401 58.9331 cv
96.0342 52.1826 95.4624 44.1548 96.2612 37.6909 cv
95.5435 37.3374 95.9526 35.7178 96.2612 35.2632 cv
96.272 33.8364 96.3442 32.3486 95.8975 31.3784 cv
95.8389 32.4531 96.0249 33.7729 95.5337 34.4136 cv
95.7891 31.8848 95.6597 29.6367 95.7759 27.1304 cv
95.8413 25.7349 96.2783 24.4473 96.3828 23.1245 cv
96.6782 19.4009 96.0786 15.4043 96.2612 11.4727 cv
cp
2.5542 59.2974 mo
2.55566 59.3433 2.55664 59.3906 2.55762 59.437 cv
2.57031 59.3896 2.57373 59.3403 2.5542 59.2974 cv
cp
79.9966 92.5552 mo
80.3652 92.479 81.0415 92.7114 81.2104 92.4341 cv
80.8408 92.5103 80.1646 92.2788 79.9966 92.5552 cv
cp
95.0479 91.8286 mo
95.2134 89.6763 95.2734 86.3755 94.9263 84.7866 cv
95.0073 87.0933 94.7646 89.7231 95.0479 91.8286 cv
cp
95.2905 82.481 mo
95.4453 82.9907 94.9736 83.4956 95.4116 83.5728 cv
95.3726 83.2808 95.5156 82.186 95.2905 82.481 cv
cp
95.1694 78.1108 mo
95.1841 77.5298 95.1772 76.9702 94.9263 76.6548 cv
95.0361 77.3745 94.6089 77.8794 95.1694 78.1108 cv
cp
94.4409 73.7417 mo
94.4458 73.3755 94.7676 72.7017 94.4409 72.4067 cv
94.5093 72.8452 94.0811 73.4126 94.4409 73.7417 cv
cp
94.9263 71.6772 mo
94.8774 71.3159 95.0439 70.1118 94.8052 70.3423 cv
94.8545 70.7046 94.687 71.9087 94.9263 71.6772 cv
cp
2.91846 55.5342 mo
2.979 56.0435 2.78467 57.4429 3.03955 57.3545 cv
2.97949 56.8452 3.17383 55.4458 2.91846 55.5342 cv
cp
94.3193 14.8706 mo
94.3589 15.3701 94.2246 15.3149 94.1978 15.5996 cv
93.98 17.9248 94.6538 15.2148 94.3193 14.8706 cv
cp
58.6333 3.21777 mo
58.3384 3.22363 58.0669 3.21094 57.7832 3.21777 cv
56.1992 3.2583 57.9272 3.50537 58.6333 3.21777 cv
cp
85.5801 3.09668 mo
83.3843 3.12598 85.728 3.38916 86.7935 3.09668 cv
86.4346 3.10059 85.9878 3.09131 85.5801 3.09668 cv
cp
66.0376 3.09668 mo
66.4194 3.08594 66.9526 3.54736 67.2515 3.21777 cv
66.8032 3.29492 66.3237 2.7793 66.0376 3.09668 cv
cp
48.437 2.9751 mo
46.8169 2.83496 47.2759 3.3335 48.437 2.9751 cv
48.437 2.9751 li
cp
61.5464 2.854 mo
61.2612 2.85791 61.0166 2.84863 60.6968 2.854 cv
58.9531 2.88232 60.7217 3.14551 61.5464 2.854 cv
cp
50.1367 2.9751 mo
50.585 2.89795 51.3452 3.13232 51.5928 2.854 cv
51.1445 2.93164 50.3838 2.69678 50.1367 2.9751 cv
cp
91.0425 2.9751 mo
91.9932 3.03662 92.7578 2.91064 93.5913 2.854 cv
93.9536 2.74072 91.2808 2.5 91.0425 2.9751 cv
cp
74.1694 2.61133 mo
74.3813 2.85352 75.7402 2.57275 75.6265 2.48975 cv
75.0557 2.71631 74.3076 2.03271 74.1694 2.61133 cv
cp
false sop
/0 
<<
/Name (PANTONE 4635 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.48 0.96 0.44 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
0.924724 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
389.761 61.4077 mo
108.6 61.4077 li
@
389.761 93.6782 mo
108.6 93.6782 li
@
121.871 39.7212 mo
121.871 43.5181 122.327 45.6499 123.239 46.1167 cv
123.746 46.3804 124.739 46.5132 126.219 46.5132 cv
133.111 46.5132 137.997 44.4868 140.875 40.4351 cv
141.762 39.1997 142.319 38.5806 142.546 38.5806 cv
142.917 38.5806 143.103 38.9985 143.103 39.8315 cv
143.103 42.4146 142.258 44.7231 140.571 46.7563 cv
139.085 48.5464 137.062 49.4409 134.5 49.4409 cv
133.971 49.4409 133.005 49.3901 131.602 49.2886 cv
131.236 49.2681 130.015 49.1978 127.941 49.0757 cv
124.616 48.9224 li
123.497 48.8618 122.226 48.8315 120.802 48.8315 cv
118.443 48.8315 115.901 48.9858 113.176 49.2964 cv
112.341 49.3931 111.783 49.4409 111.498 49.4409 cv
110.908 49.4409 110.614 49.1724 110.614 48.6323 cv
110.614 48.2593 110.877 48.0005 111.407 47.855 cv
112.708 47.4897 113.608 46.7847 114.106 45.7397 cv
114.604 44.6948 114.854 42.9858 114.854 40.6118 cv
114.854 15.1685 li
114.854 11.9224 113.5 10.0864 110.796 9.65967 cv
108.966 9.35596 li
108.193 9.23193 107.807 8.92236 107.807 8.42529 cv
107.807 7.80518 108.112 7.49463 108.723 7.49463 cv
108.927 7.49463 109.222 7.52588 109.61 7.58643 cv
109.894 7.60693 110.292 7.64795 110.801 7.7085 cv
112.116 7.80029 li
113.358 7.92236 114.285 7.98291 114.896 7.98291 cv
115.874 7.98291 117.432 7.86084 119.571 7.6167 cv
121.16 7.45459 122.78 7.37256 124.43 7.37256 cv
125.652 7.37256 126.263 7.66357 126.263 8.24268 cv
126.263 8.74072 125.826 9.01025 124.952 9.05127 cv
122.897 9.19287 121.871 10.604 121.871 13.2847 cv
121.871 39.7212 li
cp
f
157.293 25.1587 mo
155.329 25.1587 153.768 25.9888 152.614 27.6499 cv
151.459 29.311 150.881 31.5493 150.881 34.3657 cv
150.881 38.2144 151.773 41.5161 153.556 44.271 cv
155.338 47.0269 157.486 48.4038 159.998 48.4038 cv
161.902 48.4038 163.458 47.6196 164.663 46.0493 cv
165.868 44.479 166.47 42.4585 166.47 39.9868 cv
166.47 35.855 165.58 32.3501 163.796 29.4731 cv
162.014 26.5972 159.846 25.1587 157.293 25.1587 cv
cp
158.875 23.48 mo
162.718 23.48 165.891 24.6987 168.392 27.1372 cv
170.894 29.5747 172.145 32.6724 172.145 36.4312 cv
172.145 40.311 170.788 43.5562 168.072 46.1665 cv
165.357 48.7769 161.976 50.0815 157.929 50.0815 cv
154.125 50.0815 150.958 48.8735 148.426 46.4556 cv
145.894 44.0386 144.628 41.0015 144.628 37.3452 cv
144.628 33.5054 146.016 30.2349 148.792 27.5327 cv
151.568 24.8315 154.928 23.48 158.875 23.48 cv
cp
f
182.884 29.9995 mo
187.075 39.3774 li
187.605 40.5552 188.033 41.1538 188.359 41.1743 cv
188.889 41.2153 190.101 39.3218 191.998 35.4956 cv
193.893 31.6694 194.841 29.1978 194.841 28.0815 cv
194.841 26.3364 193.793 25.3921 191.699 25.2495 cv
191.191 25.229 190.936 24.9897 190.936 24.5327 cv
190.936 24.0962 191.222 23.8765 191.793 23.8765 cv
193.416 23.9683 li
195.283 24.0298 li
197.822 24.1821 li
199.138 24.0601 li
199.607 23.979 199.933 23.938 200.117 23.938 cv
200.484 23.938 200.668 24.146 200.668 24.5601 cv
200.668 25.0171 200.404 25.3276 199.875 25.4937 cv
199.102 25.7173 198.441 26.3979 197.892 27.5356 cv
196.489 30.3384 li
193.774 35.8833 li
189.258 45.1255 186.609 49.7466 185.827 49.7466 cv
185.414 49.7466 185.043 49.3911 184.713 48.6802 cv
184.408 47.9487 li
176.782 31.1909 li
176.232 30.0942 li
175.012 27.5356 li
174.443 26.3774 173.863 25.687 173.273 25.4634 cv
172.48 25.1528 172.074 24.8521 172.053 24.561 cv
172.012 24.147 172.236 23.9185 172.723 23.8765 cv
172.997 23.9077 li
174.843 24.1519 176.334 24.2739 177.471 24.2739 cv
178.262 24.2739 179.612 24.2026 181.52 24.0601 cv
182.676 23.9585 183.508 23.9077 184.015 23.9077 cv
184.827 23.9077 185.33 23.9429 185.522 24.0142 cv
185.714 24.0854 185.811 24.2769 185.811 24.5874 cv
185.811 24.9858 185.527 25.2368 184.958 25.3413 cv
183.004 25.6665 182.029 26.3257 182.029 27.3208 cv
182.029 27.8481 182.314 28.7417 182.884 29.9995 cv
cp
f
211.56 24.9751 mo
210.184 24.9751 208.981 25.6519 207.95 27.0034 cv
206.918 28.356 206.403 29.9507 206.403 31.7876 cv
206.403 32.3726 206.549 32.7261 206.843 32.8472 cv
207.136 32.9683 207.93 33.0288 209.224 33.0288 cv
209.891 33.0288 210.599 33.0093 211.347 32.9683 cv
213.167 32.8872 214.219 32.8472 214.502 32.8472 cv
216.282 32.8472 217.171 32.3022 217.171 31.2114 cv
217.171 29.5767 216.6 28.1284 215.458 26.8677 cv
214.315 25.606 213.016 24.9751 211.56 24.9751 cv
cp
212.413 23.4194 mo
215.565 23.4194 218.28 24.6597 220.558 27.1411 cv
222.469 29.2358 223.425 31.3306 223.425 33.4253 cv
223.425 34.2183 222.877 34.6147 221.781 34.6147 cv
220.38 34.5542 li
219.68 34.5542 li
217.823 34.5845 li
212.067 34.6763 li
209.053 34.7065 li
208.017 34.6763 li
207.428 34.6763 207.053 34.7476 206.891 34.8901 cv
206.667 35.0942 206.555 35.4722 206.555 36.022 cv
206.555 38.7144 207.433 41.0942 209.189 43.1646 cv
210.945 45.2339 212.97 46.269 215.264 46.269 cv
217.841 46.269 219.902 45.52 221.445 44.022 cv
222.419 43.0679 li
222.582 42.9038 222.754 42.8218 222.938 42.8218 cv
223.384 42.8218 223.609 43.0347 223.609 43.4624 cv
223.609 44.0522 222.826 45.0386 221.259 46.4214 cv
218.494 48.8618 215.525 50.0815 212.352 50.0815 cv
208.833 50.0815 205.965 48.8726 203.75 46.4517 cv
201.532 44.0317 200.424 40.9097 200.424 37.0864 cv
200.424 33.3853 201.608 30.1821 203.978 27.4771 cv
206.347 24.772 209.159 23.4194 212.413 23.4194 cv
cp
f
264.09 6.79346 mo
267.893 6.79346 271.208 7.60693 274.035 9.23389 cv
276.048 10.3931 li
276.455 10.6372 276.821 10.7593 277.147 10.7593 cv
277.553 10.7593 277.858 10.5962 278.062 10.271 cv
278.703 9.32568 li
278.804 9.1626 278.988 9.08154 279.252 9.08154 cv
279.882 9.08154 280.198 9.74268 280.198 11.064 cv
280.228 13.2915 li
280.228 16.0669 li
280.472 18.3862 li
280.747 19.7583 li
280.869 20.4302 280.93 21.0298 280.93 21.5581 cv
280.93 22.3315 280.645 22.7173 280.076 22.7173 cv
279.75 22.7173 279.537 22.4741 279.435 21.9868 cv
279.272 21.2163 278.707 20.0337 277.74 18.4409 cv
276.773 16.8481 275.851 15.5845 274.976 14.6509 cv
271.434 10.8364 267.495 8.9292 263.158 8.9292 cv
259.31 8.9292 256.185 10.5073 253.783 13.6646 cv
251.38 16.8228 250.179 20.9185 250.179 25.9536 cv
250.179 32.5327 252.144 37.7808 256.074 41.6997 cv
259.025 44.6235 262.242 46.0854 265.723 46.0854 cv
267.779 46.0854 269.958 45.5942 272.258 44.6118 cv
274.558 43.6294 276.371 42.4087 277.694 40.9497 cv
279.679 38.7925 li
279.963 38.4683 280.238 38.2964 280.502 38.2759 cv
280.889 38.2563 281.083 38.48 281.083 38.9468 cv
281.083 39.7817 280.279 41.1128 278.672 42.9438 cv
274.462 47.7026 269.266 50.0815 263.083 50.0815 cv
257.104 50.0815 252.249 48.1704 248.517 44.3472 cv
244.785 40.5239 242.918 35.5513 242.918 29.4292 cv
242.918 26.0737 243.621 22.7896 245.024 19.5757 cv
246.427 16.3628 248.298 13.7485 250.637 11.7358 cv
254.481 8.44092 258.964 6.79346 264.09 6.79346 cv
cp
f
294.689 33.9058 mo
294.689 42.4644 li
294.689 45.6724 296.194 47.479 299.204 47.8853 cv
299.833 47.9683 300.149 48.2173 300.149 48.6323 cv
300.149 49.1519 299.915 49.4106 299.447 49.4106 cv
299.222 49.4106 298.936 49.3804 298.59 49.3188 cv
296.552 49.0142 294.454 48.8618 292.293 48.8618 cv
291.152 48.8618 290.123 48.9028 289.206 48.9839 cv
287.31 49.1665 li
286.963 49.2075 286.607 49.228 286.241 49.228 cv
285.669 49.228 285.384 48.9585 285.384 48.4185 cv
285.384 48.0454 285.638 47.7964 286.147 47.6724 cv
287.753 47.2866 288.557 45.7759 288.557 43.1401 cv
288.527 41.8628 li
288.527 30.9731 li
288.527 29.5142 288.338 28.5454 287.962 28.0688 cv
287.585 27.5923 286.777 27.3032 285.537 27.2026 cv
285.069 27.1606 284.835 26.9419 284.835 26.5474 cv
284.835 26.0913 285.111 25.8208 285.663 25.7378 cv
288.458 25.311 290.847 24.5278 292.828 23.3892 cv
294.018 22.687 li
294.18 22.5854 294.333 22.5347 294.475 22.5347 cv
294.78 22.5347 294.933 22.7583 294.933 23.2056 cv
294.933 23.3481 294.922 23.6431 294.902 24.0903 cv
294.811 25.7993 li
294.689 27.6899 li
294.719 28.0259 li
294.799 28.311 294.951 28.4634 295.172 28.4839 cv
295.374 28.5044 295.817 28.0161 296.502 27.019 cv
297.046 26.2466 297.888 25.4175 299.027 24.5327 cv
300.166 23.6479 300.947 23.2056 301.37 23.2056 cv
302.065 23.2056 303.103 23.7349 304.484 24.7925 cv
305.865 25.8501 306.566 26.6431 306.586 27.1714 cv
306.586 27.355 306.257 28.0669 305.6 29.3071 cv
304.758 30.8735 304.019 31.6558 303.383 31.6558 cv
303.121 31.6558 302.878 31.5542 302.656 31.3511 cv
301.808 30.5884 li
300.778 29.6323 299.596 29.1548 298.263 29.1548 cv
295.88 29.1548 294.689 30.7388 294.689 33.9058 cv
cp
f
319.279 24.9751 mo
317.903 24.9751 316.7 25.6519 315.668 27.0034 cv
314.637 28.356 314.122 29.9507 314.122 31.7876 cv
314.122 32.3726 314.268 32.7261 314.562 32.8472 cv
314.855 32.9683 315.649 33.0288 316.943 33.0288 cv
317.61 33.0288 318.318 33.0093 319.066 32.9683 cv
320.886 32.8872 321.938 32.8472 322.221 32.8472 cv
324 32.8472 324.89 32.3022 324.89 31.2114 cv
324.89 29.5767 324.319 28.1284 323.176 26.8677 cv
322.034 25.606 320.735 24.9751 319.279 24.9751 cv
cp
320.131 23.4194 mo
323.284 23.4194 325.999 24.6597 328.277 27.1411 cv
330.188 29.2358 331.144 31.3306 331.144 33.4253 cv
331.144 34.2183 330.596 34.6147 329.5 34.6147 cv
328.099 34.5542 li
327.399 34.5542 li
325.542 34.5845 li
319.786 34.6763 li
316.772 34.7065 li
315.736 34.6763 li
315.147 34.6763 314.772 34.7476 314.61 34.8901 cv
314.386 35.0942 314.274 35.4722 314.274 36.022 cv
314.274 38.7144 315.152 41.0942 316.908 43.1646 cv
318.664 45.2339 320.689 46.269 322.983 46.269 cv
325.56 46.269 327.621 45.52 329.164 44.022 cv
330.138 43.0679 li
330.3 42.9038 330.473 42.8218 330.657 42.8218 cv
331.103 42.8218 331.328 43.0347 331.328 43.4624 cv
331.328 44.0522 330.544 45.0386 328.978 46.4214 cv
326.212 48.8618 323.244 50.0815 320.071 50.0815 cv
316.552 50.0815 313.684 48.8726 311.468 46.4517 cv
309.25 44.0317 308.143 40.9097 308.143 37.0864 cv
308.143 33.3853 309.327 30.1821 311.697 27.4771 cv
314.066 24.772 316.877 23.4194 320.131 23.4194 cv
cp
f
345.911 24.9751 mo
344.535 24.9751 343.332 25.6519 342.3 27.0034 cv
341.269 28.356 340.753 29.9507 340.753 31.7876 cv
340.753 32.3726 340.9 32.7261 341.194 32.8472 cv
341.487 32.9683 342.281 33.0288 343.575 33.0288 cv
344.242 33.0288 344.95 33.0093 345.698 32.9683 cv
347.518 32.8872 348.57 32.8472 348.853 32.8472 cv
350.632 32.8472 351.522 32.3022 351.522 31.2114 cv
351.522 29.5767 350.951 28.1284 349.808 26.8677 cv
348.666 25.606 347.367 24.9751 345.911 24.9751 cv
cp
346.763 23.4194 mo
349.916 23.4194 352.63 24.6597 354.909 27.1411 cv
356.82 29.2358 357.776 31.3306 357.776 33.4253 cv
357.776 34.2183 357.228 34.6147 356.131 34.6147 cv
354.731 34.5542 li
354.031 34.5542 li
352.173 34.5845 li
346.417 34.6763 li
343.404 34.7065 li
342.368 34.6763 li
341.779 34.6763 341.404 34.7476 341.242 34.8901 cv
341.018 35.0942 340.906 35.4722 340.906 36.022 cv
340.906 38.7144 341.784 41.0942 343.54 43.1646 cv
345.295 45.2339 347.321 46.269 349.615 46.269 cv
352.192 46.269 354.252 45.52 355.795 44.022 cv
356.77 43.0679 li
356.932 42.9038 357.105 42.8218 357.289 42.8218 cv
357.735 42.8218 357.959 43.0347 357.959 43.4624 cv
357.959 44.0522 357.176 45.0386 355.61 46.4214 cv
352.844 48.8618 349.875 50.0815 346.703 50.0815 cv
343.184 50.0815 340.316 48.8726 338.1 46.4517 cv
335.882 44.0317 334.775 40.9097 334.775 37.0864 cv
334.775 33.3853 335.958 30.1821 338.329 27.4771 cv
340.698 24.772 343.509 23.4194 346.763 23.4194 cv
cp
f
370.924 35.9409 mo
378.093 29.9409 li
379.557 28.7026 380.29 27.7778 380.29 27.1685 cv
380.29 26.7827 380.071 26.4175 379.634 26.0728 cv
379.196 25.7271 378.673 25.5239 378.063 25.4634 cv
377.534 25.4009 377.27 25.1821 377.27 24.8071 cv
377.27 24.3901 377.554 24.1821 378.124 24.1821 cv
378.347 24.1821 378.744 24.2124 379.314 24.2739 cv
380.798 24.437 382.059 24.5181 383.096 24.5181 cv
384.235 24.5181 385.221 24.4604 386.055 24.3452 cv
387.417 24.1353 388.283 24.0298 388.649 24.0298 cv
389.421 24.0298 389.808 24.2886 389.808 24.8071 cv
389.808 25.1812 389.543 25.4399 389.014 25.5854 cv
386.675 26.2944 384.418 27.3882 382.242 28.8657 cv
379.557 30.6685 378.195 31.854 378.154 32.4204 cv
378.134 32.7251 378.718 33.7622 379.909 35.5347 cv
381.098 37.3071 382.435 39.1245 383.92 40.9878 cv
386.361 44.0874 387.845 45.8696 388.374 46.3345 cv
388.903 46.8013 389.899 47.2163 391.364 47.5806 cv
392.055 47.7466 392.401 48.0474 392.401 48.4829 cv
392.401 48.9185 392.177 49.1362 391.73 49.1362 cv
391.608 49.1362 391.456 49.1265 391.272 49.106 cv
390.336 48.9224 389.33 48.8315 388.251 48.8315 cv
386.991 48.8315 385.791 48.8823 384.652 48.9839 cv
384.124 49.0444 383.757 49.0757 383.554 49.0757 cv
382.963 49.0757 382.46 48.9077 382.043 48.5728 cv
381.626 48.2378 380.838 47.3491 379.679 45.9067 cv
376.751 42.311 374.595 39.2231 373.212 36.644 cv
370.924 38.6899 li
370.924 41.9478 li
370.894 43.0444 li
371.046 44.5669 li
371.27 45.5405 371.758 46.3325 372.51 46.9419 cv
373.263 47.5513 374.137 47.855 375.134 47.855 cv
375.927 47.855 376.324 48.1353 376.324 48.6938 cv
376.324 49.2534 375.855 49.5327 374.917 49.5327 cv
374.571 49.5327 374.031 49.4722 373.297 49.3501 cv
371.789 49.0854 370.138 48.9536 368.344 48.9536 cv
367.223 48.9536 366.377 48.9917 365.807 49.0679 cv
363.24 49.4126 li
363.015 49.4321 362.832 49.4409 362.689 49.4409 cv
362.2 49.4409 361.956 49.2134 361.956 48.7563 cv
361.956 48.4868 362.219 48.2163 362.749 47.9468 cv
364.071 47.3169 364.732 46.0483 364.732 44.1392 cv
364.732 43.6821 li
364.762 41.855 li
364.762 15.2046 li
364.792 14.1997 li
364.67 12.7075 li
364.488 11.7124 364.167 11.0122 363.709 10.606 cv
363.251 10.1997 362.535 9.99658 361.559 9.99658 cv
361.05 9.99658 360.796 9.78857 360.796 9.37354 cv
360.796 8.83252 361.847 8.33936 363.95 7.89111 cv
366.439 7.3833 368.337 6.59033 369.643 5.51221 cv
370.009 5.20654 370.324 5.04443 370.588 5.02393 cv
370.996 5.00439 371.199 5.27881 371.199 5.84814 cv
371.199 6.03076 371.168 6.32666 371.107 6.73291 cv
370.985 7.66943 370.924 9.41943 370.924 11.9829 cv
370.924 35.9409 li
cp
f
113.837 83.7202 mo
113.853 84.272 li
113.853 85.5347 113.974 86.2808 114.216 86.5122 cv
114.458 86.7437 115.247 86.8589 116.582 86.8589 cv
118.547 86.8589 120.253 86.6255 121.7 86.1587 cv
123.145 85.6909 124.068 85.0747 124.467 84.3081 cv
124.615 84.0239 124.761 83.8823 124.909 83.8823 cv
125.077 83.8823 125.155 83.9868 125.145 84.1968 cv
125.103 84.8872 124.761 85.645 124.121 86.4712 cv
123.216 87.6118 121.75 88.1821 119.722 88.1821 cv
119.385 88.1821 118.997 88.1665 118.555 88.1343 cv
116.853 88.0083 li
115.855 87.9351 114.798 87.8979 113.684 87.8979 cv
112.391 87.8979 111.309 87.9614 110.437 88.0874 cv
110.069 88.1401 109.775 88.1714 109.554 88.1821 cv
109.292 88.1919 109.161 88.1001 109.161 87.9048 cv
109.161 87.7407 109.303 87.6187 109.588 87.5366 cv
110.318 87.3159 110.807 86.9917 111.055 86.5659 cv
111.303 86.1401 111.428 85.4224 111.428 84.4136 cv
111.444 83.688 li
111.444 69.5864 li
111.444 68.189 110.876 67.3735 109.743 67.1421 cv
109.035 67.0005 li
108.783 66.9487 108.656 66.8462 108.656 66.6929 cv
108.656 66.4565 108.834 66.3384 109.191 66.3384 cv
109.431 66.3384 109.761 66.3599 110.18 66.4019 cv
110.893 66.4644 111.695 66.4966 112.585 66.4966 cv
113.549 66.4966 114.424 66.4702 115.209 66.4175 cv
115.608 66.397 115.833 66.3862 115.885 66.3862 cv
116.137 66.3862 116.263 66.4634 116.263 66.6167 cv
116.263 66.8423 116.111 66.9917 115.806 67.063 cv
115.254 67.189 li
114.31 67.4204 113.837 68.3618 113.837 70.0132 cv
113.837 83.7202 li
cp
f
161.765 77.2056 mo
159.292 70.9692 li
159.167 70.6382 li
159.041 70.3022 158.905 70.1294 158.757 70.1187 cv
158.684 70.1079 158.6 70.2075 158.505 70.4175 cv
155.434 77.2368 li
155.298 77.5308 155.23 77.7251 155.23 77.8198 cv
155.23 78.0923 155.471 78.229 155.955 78.229 cv
156.379 78.2446 li
161.135 78.2446 li
161.661 78.2446 161.923 78.1138 161.923 77.8511 cv
161.923 77.7778 161.897 77.6567 161.844 77.4888 cv
161.765 77.2056 li
cp
161.577 79.7407 mo
155.875 79.7407 li
155.098 79.7407 154.616 79.8042 154.426 79.9302 cv
154.238 80.0562 153.986 80.4771 153.67 81.1929 cv
152.638 83.5122 li
152.171 84.5747 151.938 85.3638 151.938 85.8794 cv
151.938 86.3735 152.062 86.7319 152.308 86.9526 cv
152.555 87.1733 153.041 87.3628 153.765 87.52 cv
154.081 87.5815 154.243 87.7046 154.253 87.8892 cv
154.264 88.063 154.118 88.1509 153.814 88.1509 cv
153.699 88.1509 153.52 88.144 153.28 88.1323 cv
151.771 88.0444 li
151.269 88.02 150.687 88.0083 150.028 88.0083 cv
149.724 88.0083 149.489 88.0161 149.321 88.0308 cv
148.787 88.0894 148.494 88.1187 148.441 88.1187 cv
148.159 88.1187 148.017 88.022 148.017 87.8276 cv
148.017 87.6558 148.106 87.5425 148.285 87.4888 cv
148.868 87.3159 li
149.078 87.2524 149.361 86.9976 149.718 86.5513 cv
150.075 86.105 150.369 85.6401 150.6 85.1567 cv
151.056 84.1167 li
159.151 66.1343 li
159.288 65.8188 159.44 65.6616 159.608 65.6616 cv
159.776 65.6616 159.917 65.814 160.033 66.1187 cv
166.805 83.4673 li
167.152 84.3188 li
167.645 85.5913 168.054 86.3823 168.379 86.6929 cv
168.706 87.0024 169.367 87.2476 170.364 87.4263 cv
170.689 87.4878 170.847 87.6157 170.836 87.8101 cv
170.826 87.9849 170.679 88.0718 170.396 88.0718 cv
170.301 88.0718 170.101 88.061 169.797 88.0405 cv
169.251 87.9878 168.28 87.9614 166.883 87.9614 cv
165.424 87.9614 164.511 87.9927 164.143 88.0562 cv
163.923 88.0981 163.76 88.1187 163.655 88.1187 cv
163.382 88.1187 163.246 88.0112 163.246 87.7964 cv
163.246 87.6323 163.376 87.5239 163.639 87.4731 cv
164.127 87.3628 li
164.653 87.2573 164.916 86.8999 164.916 86.2896 cv
164.916 85.7319 164.595 84.6226 163.955 82.9604 cv
163.167 80.8765 li
162.947 80.2983 162.773 79.9644 162.647 79.8745 cv
162.521 79.7856 162.165 79.7407 161.577 79.7407 cv
cp
f
214.339 72.4966 mo
214.339 85.6938 li
214.339 86.8804 214.313 87.6021 214.26 87.8589 cv
214.208 88.1157 214.061 88.2397 213.82 88.229 cv
213.663 88.2183 213.542 88.1714 213.458 88.0874 cv
213.111 87.6782 li
199.835 72.4966 li
199.677 72.3228 li
199.615 72.2603 199.541 72.229 199.458 72.229 cv
199.257 72.229 199.158 72.4653 199.158 72.938 cv
199.158 83.6265 li
199.142 84.2886 li
199.189 85.4087 li
199.262 86.1021 199.441 86.5796 199.725 86.8433 cv
200.008 87.106 200.565 87.3003 201.394 87.4263 cv
201.741 87.4673 201.914 87.6011 201.914 87.8267 cv
201.914 88.0317 201.803 88.1343 201.583 88.1343 cv
201.436 88.1343 201.279 88.1245 201.111 88.103 cv
200.995 88.0815 200.539 88.0503 199.741 88.0083 cv
198.134 87.9302 li
197.378 87.9585 li
196.969 87.9585 196.581 87.9819 196.212 88.0298 cv
195.94 88.0679 195.746 88.0874 195.63 88.0874 cv
195.357 88.0874 195.21 87.9897 195.189 87.7954 cv
195.178 87.6411 195.326 87.5132 195.63 87.4106 cv
196.512 87.106 197.108 86.6987 197.417 86.189 cv
197.727 85.6792 197.882 84.8569 197.882 83.7222 cv
197.882 73.0054 li
197.882 71.187 197.593 69.7554 197.016 68.7104 cv
196.439 67.6655 195.604 67.0688 194.512 66.9214 cv
194.229 66.8804 194.086 66.7632 194.086 66.5679 cv
194.086 66.3735 194.203 66.2759 194.433 66.2759 cv
194.486 66.2759 194.57 66.2808 194.685 66.2915 cv
195.331 66.3071 li
196.386 66.3384 li
196.638 66.3228 li
196.89 66.313 197.084 66.3071 197.221 66.3071 cv
197.483 66.3071 197.746 66.4595 198.008 66.7642 cv
212.497 83.1743 li
212.728 83.436 212.875 83.562 212.938 83.5522 cv
213.042 83.5415 213.1 83.4419 213.111 83.2524 cv
213.111 75.4575 li
213.126 73.3315 li
212.938 69.7085 li
212.833 68.8169 212.573 68.1841 212.158 67.811 cv
211.744 67.439 210.996 67.1636 209.914 66.9849 cv
209.61 66.9331 209.458 66.8052 209.458 66.6001 cv
209.458 66.4048 209.61 66.3071 209.914 66.3071 cv
210.05 66.3071 210.271 66.3218 210.576 66.3501 cv
211.3 66.4263 212.271 66.4644 213.489 66.4644 cv
214.14 66.4644 214.66 66.4331 215.048 66.3706 cv
215.384 66.3071 215.641 66.2759 215.82 66.2759 cv
216.092 66.2759 216.24 66.3862 216.26 66.6069 cv
216.271 66.7427 216.167 66.8423 215.946 66.9058 cv
215.305 67.063 214.882 67.3257 214.678 67.6929 cv
214.473 68.061 214.371 68.7485 214.371 69.7563 cv
214.371 71.4575 li
214.339 72.4966 li
cp
f
248.03 68.9663 mo
248.03 85.1772 li
248.03 85.8169 248.35 86.2573 248.99 86.4985 cv
249.545 86.7075 250.256 86.8911 251.122 87.0483 cv
251.986 87.2056 252.717 87.2847 253.315 87.2847 cv
255.109 87.2847 256.724 86.8335 258.161 85.9321 cv
260.593 84.4224 261.81 81.854 261.81 78.2271 cv
261.81 76.2563 261.43 74.4429 260.669 72.7866 cv
259.909 71.1304 258.863 69.8306 257.531 68.8872 cv
255.906 67.7241 253.929 67.1421 251.601 67.1421 cv
249.944 67.1421 248.89 67.3208 248.439 67.6763 cv
248.167 67.8862 248.03 68.3159 248.03 68.9663 cv
cp
245.621 70.2183 mo
245.621 69.1558 245.442 68.3774 245.085 67.8833 cv
244.728 67.3892 244.134 67.1001 243.305 67.0161 cv
242.959 66.9858 242.786 66.8774 242.786 66.6938 cv
242.786 66.4888 242.922 66.3862 243.195 66.3862 cv
244.439 66.4487 li
244.565 66.4595 244.933 66.4644 245.542 66.4644 cv
246.602 66.4644 247.426 66.439 248.014 66.3862 cv
249.479 66.2446 li
250.109 66.1919 250.801 66.1655 251.558 66.1655 cv
255.862 66.1655 259.09 67.2466 261.243 69.4097 cv
263.207 71.3833 264.188 73.9087 264.188 76.9849 cv
264.188 78.9692 263.757 80.7905 262.897 82.4497 cv
262.036 84.1089 260.838 85.4155 259.306 86.3706 cv
257.374 87.5786 255.264 88.1821 252.975 88.1821 cv
252.702 88.1821 252.219 88.1558 251.526 88.103 cv
250.119 88.0083 248.896 87.9614 247.857 87.9614 cv
246.733 87.9614 245.756 88.019 244.927 88.1343 cv
244.549 88.187 244.25 88.2183 244.03 88.229 cv
243.663 88.2505 243.479 88.1323 243.479 87.8745 cv
243.479 87.7007 243.625 87.5825 243.919 87.52 cv
244.633 87.3735 245.095 87.1108 245.305 86.7319 cv
245.515 86.354 245.621 85.5806 245.621 84.4136 cv
245.621 70.2183 li
cp
f
295.706 71.0571 mo
295.706 82.8638 li
295.706 84.3374 295.794 85.311 295.973 85.7847 cv
296.183 86.3208 296.443 86.6997 296.753 86.9214 cv
297.063 87.1421 297.548 87.3003 298.209 87.394 cv
298.735 87.4663 298.998 87.5952 298.998 87.7798 cv
298.998 88.0269 298.834 88.1509 298.509 88.1509 cv
298.351 88.1509 298.152 88.1333 297.911 88.0981 cv
297.585 88.0513 297.029 88.0278 296.242 88.0278 cv
293.958 87.9927 li
292.099 88.103 li
291.794 88.1343 291.542 88.1509 291.343 88.1509 cv
291.06 88.1509 290.918 88.0425 290.918 87.8276 cv
290.918 87.6431 291.081 87.5249 291.407 87.4731 cv
292.205 87.3364 292.718 87.061 292.95 86.645 cv
293.18 86.23 293.296 85.355 293.296 84.019 cv
293.296 70.5171 li
293.296 69.2134 293.147 68.3354 292.847 67.8833 cv
292.548 67.4312 291.911 67.1265 290.934 66.9683 cv
290.609 66.9067 290.44 66.7837 290.43 66.5991 cv
290.419 66.3726 290.572 66.2603 290.887 66.2603 cv
290.97 66.2603 291.065 66.2661 291.17 66.2778 cv
291.936 66.3706 292.955 66.4175 294.225 66.4175 cv
295.002 66.4175 295.668 66.3999 296.225 66.3647 cv
297.281 66.2778 li
297.48 66.2661 297.612 66.2603 297.674 66.2603 cv
297.958 66.2603 298.099 66.3579 298.099 66.5532 cv
298.099 66.7378 297.963 66.8765 297.69 66.9683 cv
296.872 67.2847 li
296.094 67.5796 295.706 68.8364 295.706 71.0571 cv
cp
f
343.949 72.4966 mo
343.949 85.6938 li
343.949 86.8804 343.922 87.6021 343.87 87.8589 cv
343.817 88.1157 343.67 88.2397 343.429 88.229 cv
343.272 88.2183 343.151 88.1714 343.067 88.0874 cv
342.72 87.6782 li
329.445 72.4966 li
329.287 72.3228 li
329.224 72.2603 329.15 72.229 329.067 72.229 cv
328.867 72.229 328.767 72.4653 328.767 72.938 cv
328.767 83.6265 li
328.751 84.2886 li
328.798 85.4087 li
328.872 86.1021 329.05 86.5796 329.334 86.8433 cv
329.618 87.106 330.174 87.3003 331.003 87.4263 cv
331.35 87.4673 331.523 87.6011 331.523 87.8267 cv
331.523 88.0317 331.413 88.1343 331.193 88.1343 cv
331.045 88.1343 330.888 88.1245 330.72 88.103 cv
330.604 88.0815 330.148 88.0503 329.35 88.0083 cv
327.744 87.9302 li
326.988 87.9585 li
326.579 87.9585 326.19 87.9819 325.822 88.0298 cv
325.549 88.0679 325.355 88.0874 325.24 88.0874 cv
324.966 88.0874 324.82 87.9897 324.798 87.7954 cv
324.788 87.6411 324.935 87.5132 325.24 87.4106 cv
326.122 87.106 326.717 86.6987 327.027 86.189 cv
327.336 85.6792 327.492 84.8569 327.492 83.7222 cv
327.492 73.0054 li
327.492 71.187 327.203 69.7554 326.625 68.7104 cv
326.048 67.6655 325.213 67.0688 324.122 66.9214 cv
323.838 66.8804 323.696 66.7632 323.696 66.5679 cv
323.696 66.3735 323.812 66.2759 324.042 66.2759 cv
324.095 66.2759 324.179 66.2808 324.294 66.2915 cv
324.94 66.3071 li
325.996 66.3384 li
326.248 66.3228 li
326.5 66.313 326.694 66.3071 326.831 66.3071 cv
327.092 66.3071 327.355 66.4595 327.618 66.7642 cv
342.106 83.1743 li
342.337 83.436 342.484 83.562 342.547 83.5522 cv
342.652 83.5415 342.709 83.4419 342.72 83.2524 cv
342.72 75.4575 li
342.736 73.3315 li
342.547 69.7085 li
342.442 68.8169 342.182 68.1841 341.767 67.811 cv
341.353 67.439 340.605 67.1636 339.523 66.9849 cv
339.219 66.9331 339.067 66.8052 339.067 66.6001 cv
339.067 66.4048 339.219 66.3071 339.523 66.3071 cv
339.66 66.3071 339.88 66.3218 340.185 66.3501 cv
340.91 66.4263 341.88 66.4644 343.098 66.4644 cv
343.75 66.4644 344.269 66.4331 344.658 66.3706 cv
344.994 66.3071 345.25 66.2759 345.429 66.2759 cv
345.702 66.2759 345.849 66.3862 345.87 66.6069 cv
345.88 66.7427 345.776 66.8423 345.555 66.9058 cv
344.915 67.063 344.492 67.3257 344.288 67.6929 cv
344.083 68.061 343.98 68.7485 343.98 69.7563 cv
343.98 71.4575 li
343.949 72.4966 li
cp
f
390.254 82.6704 mo
390.254 79.1265 li
390.254 78.4858 390.116 78.0503 389.837 77.8198 cv
389.559 77.5884 389 77.4419 388.161 77.3784 cv
387.75 77.3374 387.541 77.2036 387.531 76.978 cv
387.52 76.7837 387.699 76.6851 388.067 76.6851 cv
388.699 76.7007 li
389.882 76.7163 li
391.502 76.7163 392.445 76.7056 392.708 76.6851 cv
393.434 76.6333 393.855 76.6069 393.971 76.6069 cv
394.212 76.6069 394.333 76.7046 394.333 76.8989 cv
394.333 77.0737 394.176 77.2017 393.861 77.2837 cv
393.063 77.4731 392.665 78.0522 392.665 79.02 cv
392.68 79.5249 li
392.68 84.5737 li
392.711 85.0786 li
392.617 85.3159 li
392.554 85.3677 392.402 85.4106 392.161 85.4419 cv
391.877 85.4839 391.441 85.6724 390.853 86.0083 cv
389.814 86.6226 li
387.767 87.8091 385.567 88.4028 383.215 88.4028 cv
380.066 88.4028 377.483 87.3921 375.467 85.3706 cv
373.452 83.3501 372.443 80.7642 372.443 77.6147 cv
372.443 74.3071 373.511 71.5513 375.648 69.3472 cv
377.785 67.1421 380.459 66.0396 383.672 66.0396 cv
384.911 66.0396 386.226 66.2183 387.617 66.5747 cv
389.008 66.9321 390.119 67.3784 390.948 67.9136 cv
391.074 67.9976 391.163 68.0396 391.215 68.0396 cv
391.289 68.0396 391.389 67.9976 391.515 67.9136 cv
391.893 67.6304 li
391.966 67.5669 392.04 67.5356 392.113 67.5356 cv
392.302 67.5356 392.397 67.7827 392.397 68.2759 cv
392.397 68.5073 392.428 68.8638 392.491 69.3472 cv
392.649 70.8267 li
392.701 71.2261 392.775 71.6255 392.869 72.0239 cv
392.921 72.2134 392.948 72.3657 392.948 72.481 cv
392.948 72.7329 392.843 72.8638 392.633 72.8745 cv
392.497 72.8853 392.381 72.7964 392.287 72.6069 cv
391.466 70.9321 390.206 69.5708 388.503 68.5239 cv
386.801 67.4771 384.999 66.9526 383.097 66.9526 cv
380.721 66.9526 378.783 67.855 377.28 69.6577 cv
375.778 71.4604 375.026 73.7876 375.026 76.6392 cv
375.026 79.6997 375.889 82.2603 377.617 84.3208 cv
379.343 86.3804 381.483 87.4106 384.035 87.4106 cv
386.47 87.4106 388.375 86.5493 389.75 84.8276 cv
390.086 84.4077 390.254 83.688 390.254 82.6704 cv
cp
f
94.9058 94.7534 mo
2.21045 94.7534 li
2.21045 2.05811 li
94.9058 2.05811 li
94.9058 94.7534 li
cp
/1 
<<
/Name (PANTONE 4655 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.26 0.45 0.18 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
65.5649 38.6675 mo
64.772 44.6665 30.6875 48.6929 55.6548 52.8354 cv
67.4858 54.8022 81.2769 54.8628 91.7046 54.4761 cv
91.7046 5.26025 li
5.41064 5.26025 li
5.41064 30.2397 li
28.0996 30.5386 66.1841 33.9644 65.5649 38.6675 cv
cp
/2 
<<
/Name (PANTONE 5435 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.13 0.03 0 0.17 ] 
>>
/CSD add_res
1 /2 /CSD get_res sepcs
1 sep
f
27.3354 56.9868 mo
7.02686 49.3726 31.6304 43.4897 36.3779 40.2505 cv
41.3159 36.8833 21.7622 33.7495 5.41064 31.7788 cv
5.41064 91.5532 li
91.7046 91.5532 li
91.7046 65.9741 li
77.1421 66.9897 52.8687 66.5601 27.3354 56.9868 cv
cp
/3 
<<
/Name (PANTONE 5777 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.1 0 0.49 0.28 ] 
>>
/CSD add_res
1 /3 /CSD get_res sepcs
1 sep
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Frank Bilotto) ()%%Title: (LoveCreek_Logo 3C.eps)%%CreationDate: 12/7/09 11:25 AM%AI9_DataStream%Gb!R&$[Wl4d5Lq$!WRr:8IRL"H$];qKODt]0aR,REsa($/ZnEZP#b+(&tWJ1FWKn==_W"NaPhCt0#4XWl07H8Y-,ZJeMhF'>FZ]"%c4=7<>Q"H5M<i'tVg]7aSV5MK\9[ZVo.O^rVqZ$Bi[ZnAXBhONA[Ald-6^sbg.1%l]>)uYfq099T,]G+B#hqrMnR*WnU!34hL-)f%GW=TM4^8uo:R@9Vfb)L%5MS>gn*PRQZN#;qo\Lj8M9,Z$IdYD>l-%b,'E5>"+!'_7Sa=XnlqM\9]8u[?cc>ZFrdk+IFLGG_d2od%%N^g<sEkGZDlTcf+T%s;Bg#LC#[*SAaZ?<c:HtQ-3B8J@EBc2!;6JVG(gJ:?.G]2#)\kQ6QNrBiM-_/BDKj+,:>=:DbdAJsAih]68%7nq_8>75l^ohgJKIG\62)?of_dJp;%+,sd:o@ctkUD>/9>%f"CqA[*rK^jtpI!,>DAttD*L%,Cf-e,#ugX%:YQ*5(Tj0()q-7`"2%g5n4.U-FA)$`^PbD5M?bWt\T<p"W9+a]cjmS]n<"h'BUPMs@f@)Drplgd'FGO*di!<V-raeC,\&GUE8@RUhH_COaXqq6Q'RQg^Y$%]c4F!NG#T$dLH.:R_ouSEMGXBTc^aaUIMQ]Kti(!WZ4N7Fn373TA[o82B&uDd\ra@ZXL%W=7UpFVuM]?YRG#c"1sQ,/raL".N`EC%U!Y?>:`$[/)7)63$cCgC9=jkrFf7.82AmfcR?]B?B%bJ[e40Al(UKJ"j5n[13F<bRIp5=qZe>?:hK1bf=mN]Lp5,u8r]C$\>;e4Y%XYu^@S(Y8n/[9^rg\L6-NM@G6jRuE1fuk%]:nIVJTDe/ja_0(nq8%)kr(7+ZPPL50kds@.Vt9q*1,mh9RHoS'`Q@!'kf\VSZH5lX%gJo<lCp?(V@puFa52;Wjo^2Dq2uH_q4I[D*S1WL#ZIh7407Rn<3rQ&"s6]&(Z_M$tXo@hbE-C_enJ.+.U\FCLrP[*4G,6dEl^F1Q%nMZ6[,Y*8#mm;thqOenVF`&`'Un&0[O6/+Y#OcN>-JLGKn)OcMph7B'S02[nMu6(iWJphYpfE4(^3[>[*U(l)Ogar9cqi81IeL.^%pVF]6emb6eTq,:Emkk;/BT0:,GU^D\TD=iIprT4W"98=TcPN^+>HucBNR.Eeo#$[)PP3JG7uNSK7gC[_2f@I->s+`RSkPKS-MR4G%#J8$c-VBT;:?77$h4FX/'ADSjIX(b,rgk,BYIpAfIfAADBA">,_XOJ$-hHHdnrB=0cnlb;mN%i<^R@8h/G<n-X$>8kQ-<3Bs53@,%-iCcrirb_6ZZ"7rVr-"ta+)oL>3ke;d!kn2mX8l^[l8e^1d-4Dhc]]*28@n8jL8p;XR5PQg$h-((&u#M>Q1r.I'GUphB07I7!UON%>0_?cAl!n:?I&6tn*U,@78opNe&KlB#=$Q.(5JYN)J+6!48F2KFEg[7ZqN.8#J4i.n9uFUENt!aB#*KlX6JT%LV%s,OBXo^!ZUT&%&#Mi1VH]B4IN&5EH+#2cKP$dp+.?RWMnY11b@Dgs_TSt6j2S2S%h>K6Ze_L-hnIK4m^@V[q:gmmp('os7eihYjcfCn*ujH_P;)fK%o%j&rA=)#!EFU58c8F.]SVU#'CSjn0PPlF>^@n?=2P%aagT/i,4k1#m,*0>qLMVAYkia)FBW=F:8kik;U8c9,s7QM\=NbCO6t4+d%pT2QJhSmE:H68U`p!&^k;`;87:=&XffMmR%>OF#pP6*CJf1o<hVN@(1BN.="Uo4X*[!-G&#J%;;9*b"2j!CRq`),36*Cq@<qDKrg%hUgBfg%hKo$IMjTV1U[eFgC]C[ViafEV"rI9j$2CmuSSF4o/a</Bf2RdEIrIdd>/IVop;GZu4^3GB]tL5$ok,XDH^a]\=@=hu;_7%e>A;e,EhN"Y'%((hCH,c_+Lad2n`9r%E3!$VP]JkRo(>a_Xl]td:]8FHOrig[rlt@^=`&2Phoc9FXTX5e(9W[f:*`J2LPon$11#i%S44QSgcb_q;-_K\[qU^lN6.aqT600Xfg'5?;b.Sh20uK:lMJ]W&c@Mnf60`PPq?9?-M?\nRbn8h>]%WjIRkQMTciB7_g5AQ8@&GC%DLgAj./_8(>f'XtR<>G%KYCngoluO9?`(bFbJdEGCU8h=)>]$6Hd$^"#p#Q4r-uc:FtNn@pS!,:aj=XgcT-O>65Ca_r]Abr,T`e]%mi45n/RJ<rIJl*P>O3PP\D$r3&)W\9YYEqI?,arDftfdFK$fB3LkmSKgRBM%V7S3gq7>:uTkEoTqe!Ud.^tb,=\;)sflb/j6qfm.%n?$QU%W]r+jP*@S*<Ci+&++b[YhG"8BJjgEZ:6n=43'\6P7<rTJ0V+"M'US5Lu'N@IGZrA*+WS148jbo\Pl"I"R!%lZRgE,dn&%J%fHt&;6Rk'XC2pou44f>Ac0ZKiR+TnM'q9Kt(ZG?_Ft%4]/dg2f@au^"I9%GtAK+7L%PWLc[aXgu2\l]sL`tK7<-kBdnpfAUB\djZ%cAgJ!qR(bAH*W`qI`4+&VUm-M.'@EOI3lqJ38IT;aGK<<5o9/-:;h>5Enc%!P'9Pe7M%l8q_nA><qfc>g6qAOYI1,:1XUH`-/I0%%\>1.00'`d8-S3u-W@$H;27]E55,7#h-'&Z%r6f8:FjP:+Y.ig&m@/^W0fq<(E5K0QF5%o36>SHAPh=Mg[3[8+><6+c#jDV8n@c7V%D+e4OF:QSipoh2p9no#dX!BQrGin@7*46dj'-UCSUkDidE9DTh:9SIQPDDY0ST[_I+D*XJ)R85!TpN;t*E7t?a%hu7WjinF_i5LR%Yn!K<XH@q5'7=]d5a2B;ll>q\niY9]XCk6SX]a_1)R4$pZc\cGD=?I.3$RrALMkU-MJWUgf/7S1hf[-hF@FqbEm<kHB)]Bg=K7o/%R%B*DSB:d(Z<Y&N%EW)^A6Ik\CoRL/=uSQN.[VBF/5?"9Qa&,PQ;qkA&@&D`8M02"aT0l4W,:b+D2MGf[dB4jZ`6NP::t<^jQJ<S%]c;Mq`.?/?WtH)u-MbBsJ^VW)jHRs!E)WDC"e2WYC*QPhU"kS=i)FUKSbgn*8jO8e=!`de+BK9d5*p"/BIetK[:$_;?DtK3*P(.g%&N&I3+i^O0K!usRdJ4cIfJeWl7]bgh9>jQZb+[ID_h=AT*KVPLR&u6%M;%Zb'WHns9tf8DO,2tXTM*YOEo1:?C00sT7Qd:R\dYI:%)'-):4.P9JjIct%i+rD,Ymfb%VALb<+skt;8"X`5F\o.X\UEE2GS"=GW_C;E)l=4:(dbEJPR.l=eluMRX.8V=VHsdsdR40NS$j3>%PM8c?"km;rQEX.>Bj75"Z9F.Ld>1Li1_&,NlQBa)HL=jk!HP)VMAM(p^8[,TFF]_R:-YFH-A;eL=>b[I+np;$4MW.Iq8H?Fj/*[H%dI3g"`hAK[(86(FHpUbqCr1%rU_SN=\18_'qq.-@;MT"YJbBC9q5#N>[45fKnk=G-D1`):LY`2ORiFU8(,6m4g%dUr<aHR7aO:eq%LgJgo=eK@W%Ei;t&Ab`?5e[i.,,0qRTO6i>nX%mJ1gOD6_mT1*Q06^W?.7ssmltHdCVOW?%)d$?ZUJu.7P!#MRhB_Bq`+0<i;'8D%_`:]WW2*1Rf\0s!U2uZ/m;f=7fMbI_!Q1F9Y&A5`^kcc/p)NdDWf4CRI#fqun^Wk;'f%n.Yi\S.C>?h;9V#7=]8pF"V'^I.-IJa4%]r&5q.LcJo@-W!X?M%AI-SMo(:1e&?d[YU%E]',sC!NMKE!M*NMDua??fn#i5A&<jR`JKu]/Jg:`;"'38=0,c6;t_TE@_G?KiUcj%Cd^<)P.EtAVo6##.?=A%>O2W409b"#8)C@;)/He,KhQ8u%NRE`n_![h37V5c2Wh)ZY=WP\[_`0L+CaYD:/pMYkt'M/3Uhp[c]P)q%LsuJ1@FOpq<bmH9Tlj2ciQLgoRoSk.piJesWBrs]=mDI?V=n`qpa#]@Z>4"EBqfrs,X^*2:36t[Rq;P4q=I%$nLZL$k$BV/7]+(c%#EWD)B%@5k;]irUcoA/p=/XA3fo'Ch7su+GkLb)q_F$L0pUZ3.R(eP>S.NWj?.G#'TImVN.dg0&JIit/KB)QfM&rZt4%DrB9(mR'%2SLj(Bi$In.QW+a+nGpIP1DN0\O%_fI5:*oH?'2RcF1"SW!c.Km=W,'d)OKi:)#r`??MdN=ZtBt^@5d\fP7j/Lgl.]:cn'Nc#lW>%cqs;+W727M8LS'<2PM!4Pl)m`6@V[(/7*AiKKSHieZ/d"AoX(m@abFD=ej\rNT`,J?h>g&W'pT)2D?P*c9-t04/:IkTr;=u-hIFU%Sj(!>iJW"CgDol'Ch#u=7.aYS5em[qVcd$'8FA"0XqL,;Et;_R?>$la7.>]S\J]NtWA0aJmCU[+79J$&+A^^,W)0l?fd/W0T]f2W%%W3<>E^Wm/Y0b>Wo-PDI+Mls#.:/\(U)_YbeEdT$&F!Ru\dcr#];F3Q"#sqpCVOWO%(%$RiL_t$IV^#5E_tSn9pC@)/XoT2k(n[$%+;=JS[+/)*gZBbjK$@8AF+o@2_l[]]UE^&8W:?uA8NI`)T99g+'>TeL9i9$n-:\<fmW7DZnSPWC&7ES$H52nO.,:4QH?`RlT3iY0%Z"-&K$N1FNJ6o+qH+)X3,PKDX1\1J/a#_FFN)1qD7pB,do9XT5gSonUe-4`1i@CJgdU?N['1SSN`_e0l1uI/;0%jKHN>Oc?AVCP%%+nfO/2S#$,%WpHgnLRk\=i\[o^REW+,[GrHO;;S<WU)S\jUO`e`Dg8D27"<0N+V[587DW%<)4IAoGh]7g355Mob;=R3LIP$$6qsK%b5n3;Wb/(TIE%Sd6a*OtYk.0ScBgKTjOW_?2da$Y0kMkp"5N9n]/Pm1(n,L+r5$5;9&0?mE-d!`S:8/%\nHFb>H&lpGQj9I^V`=n%?6sejJje@'I;o^5Gl0hEkWZ6bP>Hrrm7/p#"Hu>!oa&?>;hu7s.`$98TX,Eue_B$(`StU9X>%(-$4:him?D_`+HiKK/4DGA[VrM=%>9,4N7X-YXKQKTkYIRRp3(B&1\ObYK%=ufk60I\<N-4o7;q#h54AKisN+Oau9O%;".>U`ABd1`\8L43H*%"6fIEE16Pa:"(Nm<#d%K;bYUM:tKjOLW=d"a-jebS7sZa4k#K-O?\f]gtQ>H;dZE<<C9r-8;ABbMlJJOIYj8Ed%ejec7(`F4MY*0g;UT8UM\BHgt>I<=S6e%I$!BlnIX38b/&Kb@P$ade*$Ohb$PGc^^a]6j[^*'W$\J%JPK1LQ[83dW[/c?Zpnjebk:i&c+*2,(qLDi*-`<*[-1L)Bs7G9N*!'Y%E""ElSVZGQdH`C'STn49;i&hHD;4k]cX)Y*r1\%l6O]Vu1p%8.7T3tJUFf&t<RJq,Ll5,)>K0D,0]ApEo1f.mG+Y<Y'K6;9:n&)I%D5m<V$GH41$9_BX)oqT*`M!SHZG9)h?6M8qBcE^Zn_5RbS3n??69q9S:N!\arEfq,7(Qjdo5s(%B]4;=2otp`$>W<f$5/b`=Zq_H%$&[O([l-6tE"[#ILahOFE^WZ##@!Ij@RC4\&d':c@)63u9mk?J?U@/Vg'@>/O9HRK9]e,n.)a]f5uS+mK!!aA#m%q@r&Qn&'LX3`%>>/Ff16?LPLsd*/8t\^!%J5Ndh6[94<J_PYC^RZ:\CEG!jNW<DU$rC4%nB`u&;PFj453eQ"RU#5d7\qCW`qN`f.Aq4eJ4GX4i.po%'4b>WY[79WL!==FI769^9dFdF73oY4Xc4;VFS@tVkH^HsJj(=]&-:s-,KP`CW,sXnW:!rA9_Ws9f*p<)(50QGYU.j82\#k(?n_tA%L*a'5h:O_RMB0mt;N#i[g;YSqJL@Fsg`b&POh`H4)j/h]O^g&]>ct9m8EtTPQSC=(KOq5b7k=$,nW)^:`<'s'7%:1,-<?1m4r[b#%aR6(H:U'j=*V;+>](0UJ,cC4aF^CJl]sL,eI3M>J?iW)+-n=PV_XIl#MF;'h3*BesSPMMX`NIo'-3k*F=KA/JFU0VYZsfl'l/=cf%EMOp+]&P3G^Tmq.:Q;9Y%Y.W:M'XA,eQATfER/D?FLIV\n3R46UWH<`HR1_Y"/&^@oqf)3o%AYP2/(Tb=V=M.)/p4AmXm2DjpNHZ%Y)4B"Z<:OFB?2]=r/T]=S(@Z/GC*J*:0ohpV,si#^o#HOWE4;:94Ea"[K`g9+mRV!6%&?bkk_Ff&Y#gQG>g;DmBm$8AI?21)h;t1%6of!M(eC3t]WBg5%5`:Gn'V74L3k3_09W!-Oj3;'FECNh.[.?<ksf);dTKQa:`>P=]g,b$Pin7aeVtuN1a9p>?VhrDVWZ^%a'LqI%PiGS#29g_UBVLT"'%91(E2XDeP'fjfmga<8B2t#(JU#HK<af;X7tJ+6:5(D55S'8Lk6\%ld]3F[C$VE:fEm$me>\J89ph(M9.0;$%I;RC`P[a71_-/1@.#to5C3JNrb(O?q8dsbuAR]Vd=pIKo2&d&ah;1Yi^d`G*"DKY?qi-G7^HuRCYKqh)$Xjo8fMu?t'jrF.C,%YB%mDKYij=7+O9"A%q=&frF-AoEh-ErDiA<l4:qSd_P`6tC_0/+f[,Z<$hY-.)mK2VT@A4?Ap!\<K-KE7Pc_/(Jt:!bp`*Ja;4OgD0@%(-0W;:"!2lX0JTu(,)E+CLSY&[EKBrcK(FVKqT!p`6%)^cM:EESHae(fF)_'/\J6"#L$"4lrCb3Ol`c[,]Z:,^Ea1X8)Yk)D8eC+%0ZHYrF^hkl.No]b#r5b=9aAlKG(PNO=00Rr@0Ig[<)t3_n&R?-g:"'=3cKfuPBaYh\hNJs+c0pZ-SuMIEga"4"$$O]V<ZP6eiPjj%>nT,bq"C^A78mB<EpuIH.YXt3*ib\;$,`YC.-\RmFsR_,0\<;Om'?:&q>`cjG.KJ$E@,iAFWcODgcAhZ^?AKmJUEK?,,u7?FsRU2%mo@>7dJfChD*(7q:Ce2SX_"MOe>Im.A@Ir#Mhrkmr>*i92]0.A'J*/h:G"Q45ji1MQ!qgE"->kf@0o+r`%YlFRM)Ab5l)PU-ab4j%(6C:/8KE_RTKFX7LkoB_/7ORdBgY)MjU2u6([0s(Le!$'[-Uc:.iQrGp"3ukN9t0DJC^JKC8o6[@`H'R<?l[5k_q&VZM:28-9G9G%peRraTImJ6ZQHdsc5L*oM!LLp\&"cN?F;`;i*cF5P#3OdhDCBd-<!`MU-WV"'a"HK-_.E0-=g$]GBm*o)_ia!f)sA?SH0?/OGr[>%,i;eQVIK$Nd@!nSi.haJr#:d9T0T&[FdS>C3M:=*o,LFK,&iVJiq-K-bX,NPTqO_hXjCP^4GF$,69g4pGh!J[1H,GFTG9qRF_2AB%=`l)Q%kISES[nIb.&d>JO9H!)+ZSWF<'W3r;Rj=F*Y$,17SM=6<6R/I^'?W#K^C5>d3C-gQr`<G'.hkGECM4!,s$`5:^Nj;P%6tr%^.aXjUL)7!?F?+f7V>\kM"+8VR#q)aK7hKE6GR5+f!]O1[:i'+Sm'MV*=R6<FqV#NKE]9Ipj`oF.OO9rHO&);KAd?38H0.MJUJmm%L\`:_9MOIA:>mO1AV[3;dnniq")rQeoE:M'WgEkf:X@4+`M,s2:I0]r*A`XG,!5$3'#I7/1(b1UVrj'fp['W!7<ib?$9R#@NCfkS%2B%pn6*U&pOb''.'gJpmK*_N5_Y$s>J":Hu!gG(n\j.&WjL@b3Nl$%fAc##UTanY7`@KF8HMotO4kPkW!&##P`2;9dhW7J4)Obtb%#bmNU\V:B?K7qo[O_MIF'.atB<i-T))2kJ]8`1]-NT)Nlm@_/:WU3UM-mW.tJX,7q7m4Hkb5ReSO!q3s\_C1aK7,=Fp75s[8Lgeq%OYI-Y^#JZ,,,[uIAFHI5"-;)+C0H@/9=-nKQLFqa@&!C,;"_f5jL.@)q5KgP0o>V0_$1lq&n1t`]VDp_&gp/^7QKqh:'!c#R9>;Y%aL"NLfb?uC3Y`)te?kOkWOg)b8bN?E:?pBrk&408=/+&7VogX!Xn09/M%PL4L_d.Wdu2OD3DW$l%kB%i<f$_%?o./r=EV(d%<7SS%I.uW:7.4J"d*)HjDd+J3.@iI-.C)Bj\4YUa+k'<*i6gqW:<k#D3]Zuc&nHb0;K#]^Aa^(D?N_;j8%Su'80\AT,T6;NU*G2?7*D(@%aJULuod_57KSEon:%SUEkSV3OeBA33e&ML^-XP6"r;,"YS>ZEVd2<>pn9pI3MU:T>'r6Y]5R6Sp,\VgfC]ZMn=!stkOhVT$DRROn%Lsd5F%8tV>*+D4T&#&I!k[l.@_i=rM;bG-I"aIetq+n`D'&cS%gR!u1%Y1^Zfs#`<$n3V<Iu$4TR9Re0W-[Nd`"Y6?S4-#)fiGC&%eVGc%\<PYYTlb=&FG$hs0SpaR#<8%mZ`[4aN-4Z-W7^Cl$`8M4D4JSX&G6\BOC-oQ%9W+@\g;a+U-jO2k'D"3+mUEXE'pjMlH&S`%2MKur]@*/ZKWt._mNGu;=/*0k64dXV8)l)?C^f=ZP,YDjbJ<uRq=@$F^\O)Hah"V8@'%03CE\#sI^^q%!!E`c(gS+KRq[Hj\H%UV%S(J#iMOTrgMOt6-?GZnXGF@)::'&)c=PO4;?e"%#WJS!_G#ThTap*.WW\ULs5tP#'0-D9>]d$kWXdj6uYGG87!7f2J/LO_e!hU.n%EL:=__bJq-/mueLmr>ePcg34o1\Cs5p!Q'pZpjX00/8OtJJIqmn-K.Q:WYp7?>qaj7D[/?La?!4;_mfaQ7^[DV3A%>,]@<c<KD]r%O[5LpKrc9PlX\JCYMKRN'/?hpQ:b,gQkYltHFr_Jq,>h4kQPN$_ZA%&H;dW\B@(FhVU=KK];-89&?8r528DR^[*"ni`hg15&);*g%0n7si:?%F%<``VlmH]BIqnCUR!^8+GJm04UadsS.k(TI`)2ggo,94!`4DTtkb>BH#IV`*OO[9D>pCSDG,#(6b#\8`8%a;^Ed)F@I%^b,aXCRbVrS8>5il8E)kL(K!+;rZF@Lj(]qK"c=s"&k4P*6M`38gk?5Io=kJ#6jH^O"KDsLc?Cbg#M`D=psVT[<Dohpf8d,i96i)%=VuZP&$LKs)cWPCE0**%e_SX"+q?YCd?:o>[s]F#_SfcCn"$u&d=JW``R^F]/G2+KfPacY5Yai\Wu;Z0cs6%PWb2pMSMam!i<u91%&g\L4'Y,fLl">cRNVH.+*rq>l.b^H/7`6OsDM92fE[D<*,u-X#@a#naU.5HY=2mW<>GD9#,Ft]H#jb"93)0W+'2bIAM/WT8-MXT&%Ss:H&e*)DX(A">f"We(I"gJQ%NIiHK+QuIaLU62`KUWrHIjQCG["tV`+?#PKctgjl!:(Psa6F8:+<,-$cq-(?IFKB]c?M/o@Yn.%%3I>)]A3a1i(qYI[@K@fonco"nBJ>Vb0hgYAfcX.3:pa;m.e)g7lW6IA\LNhYkb+8!9kg*U?$)M>U\c7>p*OZUhWeDehln:I<Jj*I%]E0?([OjS[Gs0/M/?(8?kUb*`<*FE*.KR:<&>9I1Q,XLP$.rDOKbm5f5RUo!,kQ-J#r2';I<@`IfA<ed/5f$1]7Oa*V1!uKgJP`C%MqTFEXjFtdAV%!l?dNs_8q=dP0MuK)o!Nmj#\ko13]TOh]r"8#MtWH/[Pa0DRSZhd=W:AbF@<dBC,c;jVN?]':aJDKbUJ1a0IfcW%&N$d(i+#kiF:nd.Z_2Jb)%qJ#Gh'<V*))AnnQ^tr_3#h-0/%:_VMu%(HFC\6i#qHMBo:rU:Bi0iglgg\pEPVg0KA2t6Zi2L!*gU:%bIA_rmU,<A3"6&ja+1t$o>#(5=jJ4/YE2[_\+^1#]8edqr8?2-W'sMop2RD4-G\*XaGBq_9^XZD:-^pPEo6VT[2j(cmrqua@o6#<%p''TeWV8^0#X(?8@;09@d8XU:;$..pgqrZVdr(G[M:R<6.PO8$))"`Ho3%\'(<5+.rktBZb-fk,\VD]<.&)6J/.s8s/AD-D+9I_E%g^lme$^4k9)YdiPDgjo`]rmA\h2EeBju=3q-$'#0i"7fZKSUeOQO^Se&UEt@T\U,5ojODnTnAEPE7AN,YN$f5bjHD?/i/r3+63R7%K?<&El4+EZj78IX&_',&.<OA7bY7@*,WegN=hn!@lc65HK*0&F?i\`seh`VEHPqR8=:uO)fMcG'Mq<5-qk]D=d;.Ln?n9J1"jne!%BlR@!0YeWBFSK7Z.l*I?>;q#&FNGird;N6Y,055a*!$Z13cNgr=!QmaCt('VE25hl4Ori7Htic43St:YVtHF5WYSQ+J3G[Z'cc<<%$He1pjGii^gieY)F(jl5V2/TuSpA)r6cYR!Kg>=L6i.uFY(cHU[m<cF(tMRbj^[O%qL26UlqG/uK0WWU-kL&s+$jF_7Qj0akH&3%%qME9njHs%TJ"E=m(C'Ou1'^XSC>YsmG@Ot^C+)W=Q,'(i(-rQeG]t[j<6,D$;_j0VJS9HM(.r([lUI`JNEjembY-Mqe$K@@[+=uF%ks8/nR%M4m-U\Baq]:8T'Ga_SA/$>+)r7N^6C+;;@%_q<AS6dpZV*<Me`+H*1UW#KTgO^sg5p\T`&nlkP1%NAY=*P5_*_9u+<g!1%gr2"IfKcE%En*56YRe!&SN)YK>c%,H?9_\cGONREJ&+-<\TF;>6,DB7DOb,(`1#q;T[Pdl:LF\T:bGG:Was:@7#(OFpE0'$*QWO@%%61VTK/-RuPm^Vrea_Hc`V?]$@O4f>A1o]f>KK5J$`i\b/37+>]@]V52Q7uV*5.[!P];DkN4UYq5-tk8Gq&fsL't+2k:(rUCqX\"%FLl!.Gt4cd[K<HCd$3clhZIQ5)*8GGH`AS3"+]%b)$F;:n^rsZ8C;(3HQtW6b!u"<-mK[L0,PZLD]M^jMRDiV`9\npd+piG&/iG&%PX2[5*)Jm#'o8f@U!d9<AgiI^Q$Tj"AC$"9>%W:&;2i4V#CU52_,*=O]]c-MBKeHWlT2Zd#R&:RNsZ9T%mto/^*X7(8I<e-/c+<D%Zr,u4VT\ht*/n;DP!eQ/^mbshAO!LP14P-p>V"lg>&JfM@YEq>HuTGdI3>RM%cX_YPaleK0rsg8+:ckAjIq``PkaGVJ'MQF3b/-(%F]"^MjHqIf1-(m_4bQWO#5(92CBSU=i,sqKNoK'84p0N0E.o&(Jc=XcaqYZ&dZ[F('LL,=/O\Z>oHOlm5=!0o17V3!&K*(3JT#j/%h%n&BPr^.@B/m7^3n+cH@YB-*&[d:u:B8t8iRCq]$?_Mh-3DX$`)Zqs8Kom^d7SQTGjniJ9MGo1`)NOqO99L$9aYiA2[HIA1aD_?%TEH2M2[.kD'n=2X`(-@6^7t2/6O0>6aU'a_7bc%>U:<H-F#:9Q&O>/%EWdCnC[8;R:lRPeM7E,V@^nSd[gu+!'n4!,8i*!TTiq]#%f1G=leK]%-S>jP3'A:&a3EY`!)%#IPB./j!%b1\IVO1+Tks;^H)(<To:_^A\64k7/4t)QM_<2n&[TFc$(UY\X27Ac"E$0$l!D&;B%))3UT.)0&?+[^^r$8FUF\L@'aZc_/Dki4,r]k1b>mAJ)/"h>0F-Or"n(;24>PE9b)P1)F:+HeSGNkEr3U>Q8E@6YA]<,<`ZVoP&:%[P`0!eEGD8$6f8!>a`l?'b062ZjEd`_,?ZX+pttScu7KW+#;/(DsH!%g1nQ@$!<#jN-*)CKlZZMXHJJAO&o=RL!lQrB9%.reo'H`%-!>S;C0!(:p4FA3lSM5a?Xm&s93.iMl*')EUsE'5HKZ'1-+aC2M3P-nCU^^\EfY`#G&hD9E0.b/8J>kVJ@25YpQ30c>gZq`4dACQ%VmH%NZ:Gb7jqlW=/.iueX=fIW3UKH>3S#_>P,'C<&08dKbkC&gj.a4ZC*r\JV'r:*V<16DY%"^5PX<dW(4cMgaC8j]*`X(J#nYXk%^qDbRMP)isrPciQ&Um,!pe[nhS,a.Ol*=\LPq-lo!\rbK>KIL>B:"8Y.k2"hc.R]8SSMj^74Cl\Rgm@iUP!*eoUmWuC]JO%0jker%l&jc[n@_8^'6dV2-j]!X[0a2OPpZ<^ls^q!AQ/^)Wc&RJRHgA`7$Cei]lJ^Nqh4SUTAZLY]hB?aU%[9/m.7fs:1DpN:*/JFBUd%1%CR_E-A;EW*[3RT=(,#)?g(9e)F-A.K-Mlqb#aZgbR2?g6OEI=C>C(cn3!iSg8)+Bd>Y?sm3oF19dR!8_M]<G^9$qchn:?uY,9[f0%G(P)WAR0+&3Cc&:S]f(U.*;C\\OSe:[`"DtOg^3P27AH1PW16N@d#B]>,NL%P`.T3,EnD3V2U*He[[9>gR'B:4G,Y@eBO&QUd8j;%=:d4&l('jD!81kE*A6hkMsX!OMBN)<%[TnSYiNemNc`'WPPC]&#ZiZ>bWIpO8f&d`%KdQd*j7<r?BT[gmLOHe'6"b#K$/aoNT:R>%@ULtQM9#_Sj5.U+k$itZJS4O=,p\fa;!::M9NMpHOjb1Y6%nib8?>G)28]C:(pFIcg_k8s^f=GmfuN0G%(W>:KL\=OKCiABBB>$C%5lC?@Be*571f5_E'LkjQ&LT"J2s,\7pl%V](m*'4_g?p-nRUqP*Q]2W[u;RrOU#N-k^mq=BW\4NgPF3ZZbWCr(frSfeann#3^1'2%h(4b9e'bRe/jOt-E?oPM79hOG2uZU=;+G;5Q-F;J4YV/.>nZ[dIU0g6M/]+a^94:Cif]Z@O^(*W[0qkI&89sm#1-Jp[^@A:PgXu&%@j*kDOfItd,`!ii-Z^BNp4Tfq7Wem,culT3H/RsAU*bmooD0R3175qFX\(3Sf`Dp5Rq@u-&WP-K)f3r@<(iD+8#.KZm-sGSJo1`d%`nu;V3^q$$aU*[A,mQirj3!?Y/S<3"`:MW^g!Ua91msc.G`WK518aP(1?XL!iOahO-W-!_`'%o>!/n-XdigT2a\E_<'1S6hOEEYm%E1@S3bBe>E/)iuc4j^JPS1,n[NaHA^R41]rNF6H#Z8-^$JC';]F\!W@jYBG+=8j\8d$0(CAj3M`M2;_Z%XcWS]o(ohUle#qa?@Tb%.@!6&U-'kXM<ciqXW#3+6qrhDNBa]geQ^`n[=d9sA9nc,1eD"W*o^?C\53;O8[\be;,^OP3MaK6Tgn*\\;^0XifcYN@gP1q2L[P0%q5OhV.tHWIEo^KFnHhoR-O#X<#*KAs.6&mpN1E>D"1a#8-QqE=/*(#&+<!5lij>)])?`b"8"/CET,4M(NYDq'k9O!\X':?*BG<P<%!%&m=oH"$]=0iqm0gW&mj@@7DeP6+*<XjcWUD$Z&!^m$TG[b^0]3pZHM(Ou1L_stboQ:uNK6!6l73IhjBn/<#/u.hOFJ(H_)'j6`%3'+Z0OM`]R0j3=_h#:b,!=!VeAkjTRd0U/Ya$I`@db@BK2EfbhKuT/6GV5=7jD%k"Pp4]sN)9at0ktZj5tg'V!Z0g`Y&q`sCfC!o%e_VSCOBbMuN'JK:MN\O_7DO\\6Y45Q)ISA-'YstkphM3GKYTI\7Dp6Z-uVXu:qWbR(6d]2HiTdSLk8CQ!/Cc+\eI8dY^&7p>Pc>;%(VH'&d)B;lR&o-prbl%d+Qim+X4-@0U*"Ocb@-?GK%@umkleh,*6`]R_U\3>]s9g,pOV9<JA54Y*l,Lu3pMum>SdS;p@&Eg6W3Eb%W`2gbgs.DU[r<KQJKb4.LG6GG;$*H!dinO;l8EVB'3#J'bco?lQr&=[L1j10h\7AfEm<h:1lAn/HELcn'ijZ^5ZGItl9VN$%sU\@%J%/OF_@mQ^A["**^t>FfV]JBETaY:f9,&!!ge'4\bE(49Q%5=m)RJ`UI^lN/=F3:^3t9I*Wd?>?j<[0B>;r"\h)HN[@C"8ZF3a(I%'sr-TRjIhG9(c06oGM9+-$,"*NPrZ3hcu[CVs"[9lq22*W9[9aYL@_L&Z%0*j#!j[M&(.T5cEA(V&/)8!D2t^AZC;)ULFb8*55Z,%6)t:,9$F6\_;N]bp-TnQ#ff@k<9>L%,o;l!Se):f+)DjP;W8tDM(9HgkZ1hpO$2b#Gu2efOs)2%D_"tjl>U.`CpoRI`uTAeTunOQ%aV>H6_ki/EWZGe*5;!iSWVLqiNouLeZ7Dq0YcNAGJ[/XSSZ:FZ@<Rr0Lh,+.(gTPnS$l>T@2nJa%YXm,EjDY/LZ\M4QBP@FkX@;\%&@\n753GBEAZgSOeq+BrQY4*dXLEbN73a59ibTGO=l(&Ci2p\?]cuQ'JXBK4DPpgr-u4/5\g(@`=!pNN>`j]^`LU0)T!,3!pk;^C%?5M,LP$]]G/"OT4le_nC9XX0+S_.J_W`,s.YV3W+]pueN[+.d_k==cki_@7h12*+fB,^U!pL?40.llc<p4iIqWa5th,`+pGP*O.6%iej9%[8DDDl1ZSskR<[5L\c1cb:7G#65i,R(h"&I'otR@g>Oh_L%"c$N4^O\.#0t);17M1U(kO<W8DBMm<,X`(VaQRcI3LgYD59l%U-ZF*pK)(",3Rl2/QsZK4dgZL?IS5DMEQtei3Gl^c0DnTeD+U[:Pg4EJ^bjBRD#V)en_04^s%@%9YD%GYfE1+"4B-P:D'M:%'5:<%]<.6=G9Ia6WtIt!o7f`m*\10iEQ@dYC)'d<kXguG,J_ZX\<MSNV1tZeQWYsDgkIo&+@Vd\&NnYdQU#P"e(T8+(F%^/2PT0<K@S^*%;FCaCe<7`!]%JW(51PJs_H[d@-NtiLDH%hS5YT^':7tik1M32Sb.0tn*HW(ciHdN=04%bg4rr6o1,rb-7[Y6ppJf/C&LD*^kK\+a%lR7?TD55-o%gjoJ?DG69Gd1#iNW9eO1:T^>=;g6&B7*YOi:kOMlF&`&4K1`/WlT<.DR-]P!-f_B7sl>4;j;GLJ81.`-uXPn9t=hs%Y^/<,Cf'OP.3hj5eugeNT-hAD/ZZbKB*Y(S,7fG/G(QNO+Xb)t5q0*dP1f<b:BbJIKp.=kQquE;E)rLo(@OV1JfoCT*&7(^N$/>Q%b93c,<[SJZ>Z"+;*(gG3%_!X+=p1`3$#1'%fDCI_D0p'SJ@:G'\r<t\F3=5C:0!4(_)&tsg`]W243g6l*L)-oEoaQio!Q,>&M-D3%KVWt9Ka:a\(S""M$GJSZ0[))Y:pZTlm0$9-UWSFF$DmZ7NM)HX`?PC'-$\&Qe"`4k"d+`"TdV#r/]U12bGa-M38`C$N#!Eo?>]X1%MiJEkV72o0el".Q>\uD:7?kjrKOVbFFAg[`q\61!Hmp6\IM!D!f7igOe/-TjW)@@1W4HT59S/qcB9:nC#YpUd5fc*PZPPQ='o.rD%KB+<qTt4WffV+B,/g35:JkMpL$9D6?Ke()pX.kCHT27+mMEi9qS`!J3),H>P\9bA_Z&Eb#9cWo_'9!%gIC0TBN#G>d>s<YgX2RRs%%lGOM0S;F%!T#iD9GrUR(D'b5om.m*&-<`7\Wb_Q6EUWhf_<AW1i^/aRHr`:0cEno8S>Y(i^=]U1Md0\K<2k+7E$uYO!>o?6o,"R%2YkplB:2We*\1BRo#kZPc@s&/1o"$6C-+'kepSjr!<2;l2DnRVN[bmQ1pe2<i<qfS\*7\.elq#&]5[%8X3L"Ce.:UMRJhMG.pP2&%95T!W'd]jT3MT2<ocQT9o&AuiJd]r!7#.hA&OcU^`SQa+_Z_9+TKYnL'WaHG^V6j(R^=0=b-k@oX<bYeY7X@YS\a&B^Zs;e<GSR_%n."(lHJ,"H61/@X#><g'8gOJunOdTin4qfT6Bi<C>@7a`]fRf79L:*O^R.-8:-Z5+@N#"C<Q\j]$.5EdY(U=+F<+!18G7U>ih6-(%;?_bVm!?O-S9M]6U?I0SkEro`.KDQ108Nh)0f7"+YLtsmEe[Hsm(:]Ok,8tHrc]qDDAO[IbOR9+:TJTapHp\L1s;gdL8AadWn<6S%_7il-gr\gM@F^$TeA=HJI.F4<,@3NNku0t^5)4FeI".P[R.3/smb>-IaU/rNM!KntbG0(Z$.YfH#bL+W=ipV=p$+rCBlI<(^r)is%*Wm_['Yn^h[7L,:6c'[tQ/\uF/:q,n&M8Wiq;lbaRAlo)D<POV-rV(ClirVp=tib@2a[geql7Z_f8R!@.el"*.Es[mHrLMtS^:E2%YEWM*UF8AF)S&&dT`@CmK[IC'fs9cUV^!K*e?97V:TmHCqo=RG3$?*&[3Z5=*IL;]T?@cnDL=fFp't_t-5)ED;sT-r4:YUiI9>-!%"U&%0];F"#!Y0q^*GR]N9oND8W0&SB!Q!;bD;[%@!/KEN70RDY<@+5d#@IIL^q"?)_bRDfCTTUJUa<HKPh8EQRA<rY"*Nob$e`>6%<1sB6\[,CnCg&H0ln#*/#s=Gj@ZO%XgjWXkcB<4\@^qfXktNBD2&N-JKq@%HCa&eP#nKf"k7hCQMake*f+#\RE%MBM2*<-]bt'4G%>U'h6k0rERboktQ[J"Q`Ma5RDOa-%`E;$f:U@nn9>]:iUDrmuf8t/D9I)Rh3N=VTF[nLmAlcZG(iI_J7!sd@\cS)n9PSY$H*HIX>%3%'C3>="F0auO80+-:jBHM5=0EKZR.-C@H'JP"s,mPQscKSrs+XKC`L&5c>l2G9*p*U[(4p8BG@ZEPUa0'\&Eb(M<S^'tD#Lbcc^%ieot4DAJkO\ik3q%BD0tcj<(#!h@68b>`5l<+_jaUUaHj+/=.Hf\tm(0I\An&$d+M)i;4)S/'"2,f<UO3^Q,j-BM@O65/\PhH\@H%;oLE,9>^Zr,o0H$iHi<'GAskk9V^4(?V.,9<p@S@4m`Tr2;Hb[[>HOLSai0`Tb`pG+eu7\6JABUh.]/F->I?ad_cHKG,BLA]U5dW%hS]U1RPmQPY6jfp]h:X^\Y'^"Z*Phjhgkp4P9_O<<GkNBU=Td@g^kk%X<\;5gtZ,K8@9@Rjf!;a01BeL.omjuNWP+Q+7G.uHG,rj%9&mL#\:#N]YG8KnBSK*Rp'SUD"C.+"Q0Ye*3$N.K#kM"g#MGUI7$bJM`m!AQ&<*X2EaJAj</_s=#`_ajE7MglHJ\CpD5K5(e*F3b%6*0PhES\`RoIK&S$Qb"c:aoV)5#JFm%Q`eXI"O2gCq/O9Sp`5@JNKs.HIWn,"0UrGCheR!6sMkh4d%r6\0E;j\Y,4^9G4@8'A)k7%A)=kl+ej?.iR/&QVgYjk'?,&W]3QZ>Z:c*%(n`DEm,NIn2oP?`V6RJ80.WosGRFRd0i<i-GBs@U!IA^+:c7lRp$f)h"2QFX#6>*^%2:UKSLTb-rW/:UA&9;UC.^;5r%9BKl&4KdIO,t.fD5.<NMPY#eB;puXYL()VHDG[P('T3mDhXE:"btIu-kZ1lA9Eq'I6ujY5MV(E%_#Zn"X7$HHV$/]V>_K8nG.7b4ob^f1E8liIUW[Vu:mLC9%0f4"]>UDLR!1!S'<J;EC-c:S33+l=MH$5]h*d<Hks3PtB/Qha);WK$%i6t*jRT(.\s(?n(Re0`i%B0rFZ"<u$DG\]7CPBl]l>U+kOA&Zu3$5sNk`QbP'Je0)X&10&mMJ-=liejN<,j3HIi3Y+K7A]`/[Plt%Blp^sRQ4`T"&!8`@pF`/@=okJT_0LB+a&-sA4Gp)NXO"U+rIh2J\K@NA>-jJi=+8GbdFd7I9Erkh\X0pWiLouf'.BIgWN@YIrrI9%lsO/n%7X_8)Ic+%+X"gp0CqR<h\&Ci:t0h_YYHpk=o&JCYk4#2bV[-0(N6n!PI*L?5VITP/47(OW#Sk5SiSPaJ'_,Un>6u'2m7S3%Kh/83+*_&5V5q^E-Q&'gbn[TpYmV=&pjS3Di1`I[p(cQ<TI#"ZOGb/jj'-L@]$SbC$&B#=$>>9!&lT+'Zpq)4>u3>A#2nG4cbfkm%OB=-FLfa[XRK-n$BF80V]r#&h3nP;]?,]t&N(s_4TEDkjOS9>P@as+,93_Qe#d&]j,uMj[3'5"S9n9JUAU#J+"1XS`XL7.08rPM[%R"#+aQ`dk6h3kB&gG07f/n.Rg_I0Hl[M'NaF9W<(j;"DWV`=H4%!Sq*9GYDb6=E"#>qA?.%S/E(4&LfF5`d*bfU3:l!\cnF_mrXP%KGJb32:Q6+edQcs0EfO-`*q":*Fcqo:ZK<D]nM6ma-VPWQ2ll/c7U(SCAh#j\VGIGq)RX=,(OO6U]G2NQ-M]2B*7?b>WnjHM.L,C%ji9>j*"l36HBO4j:lt-n9sQsC@`G;JgiubeH=KR;:__1rlBiu-NS\2\d1GWn$`ahZhU:S>?)pp[E!o&l]7V9eBH("=+XX36hf[u5%`FhN<LnWg/aD)nT%n3e6q>dZ>N5PVA`NC8@UOsKCjW)MH-F]_eKmG!"fO4G6!]E^7<lTP+Dubt<>qD\cD!dq#&%-O6J>3kKa?amC%6o`\I>)Vc&XnGF@@LT@#L_A->-%c))QG=*>*5bms;Dh,EZ4M*j"4U9CU"P-?!LFA.DTDeajpuM;PKZS'&lScYF<Z&;6eqO,4]Gte%+ba#c[:@?3>P&1P3A!lR`8U4SSS7&oa2^5R20B'ARikUJd;SI3nfK:f7'(@g7([q.pC\kirj&mS0(4eZZp?5(:g5Mh6pAX4aYCLc%M<\N`j`+GOXP"Na&[i0@lTsSQ5RBD0D.)?BmPM7W#"I._mBl89RiKCQ8h\YH'e5:d'2IIJ!WrtY"Cu:E-;fhUWshE0@^4`N#ZeP.%`FG583LQoCI%?O3i,\8DHS-Kd*>E0,lll,ETdsW+UXNG/$)LQs5moWcA51ejrA4NJCKDsqc78;sbdg"'oA0]6ltSLT@RUO>@G;Tg%_0gO-K>$>t?f-PK#9/t-md,S62Ag!3-mHa*s!*MpH8Pn83tWJA%SPT5RI$MBl9M\R&dMkW]]nF[Am-F:!clT;(Y9lG]=ANn0o''(%o&tDT<igY4k1[IdW!\[rmihg\PT/6[i!CP@;aN4?Y1b1@G!i*R57e=8LZL9jEMA]:@8\s%6!Bb/Nm"p=&5fYr8n\*oK9E1AQb3CQ%BX"M1(2&JcW3B8k@(KmW'9u)>A-%:(A]t.=)+ltJI)M,KT+$`SG*\SHKIQNO'UF?%Af`FJJ]a>'lbXGDg0M=:/?jU..EHf_%D-C=%\@!Da-6@.9KHI=^j`c$'9,BkqTS!gpA4Ss,@ZV4iA>5fbWFb=@]=J<V%?&/5M!,7UY5ULsl-)g>DV@bulq2#*,R*:.._4+o.qUl]%!oGi:[KhU9(7VH^'U]pSF(ZNO?F_9J;KMmU;6`5U]'(SP^/,;qL8BuSc%qPnWZcG_Eeh]YE(aDt(qC28g;in'%#R"I\1,bTY+"YC%]$kgtGU$8-QV//ZU"[Jc\-JD8bMc3@>l@d++Bpb-[9RBCE>]qZYZa;bl8!=9M6t5_dU=Lb/7tB'3g*!TH&CF-St$Q+VRBf6L/i1(%E>'!-A`uC%/<Y'LlR+%nSB*?nU5#<8qK+!7:jE3rH=#\!hH"Y1Vf5Z<nsmo?9gjbO&Ef^Z:cGHa[o,]-Bn^:i,S7AX,40C0W?&d\%b`Bj`=rUWa'j"I*<8!'P\?>/&FfG.i]kgY-,+=?gli^kG(NpJ771U3X47d#Oo/Lq]'q6$LmZF@,X1hn).gnZQo<$@ji`[pk915mD%Q6Zkl`6gGB!P/u3allDH]4e9*N$0,bW=P(5+?<im%m)%Zr?*CCrm/Xsj((=>P'O3dW.63U[JF<mCJIee<3T,MM42YETlLloAWbPX%&38o)//(NX/3,MM2>7kT,Z(O+nMr-piF%_8!%A@=gp"`Ir#jU2B77,pXGL%u=-g_%\Y3GT>W:0@^p&F0#l(c`&Q6X/dNN!He&WD$%G7j(g:'tX^!<d7t)jlghg16>1LCOO^5V^eGi5`.V@<CJ@?!-7\!7qF&3p@Y/OrWYe&n;_T2BWNdkS+41'2!]&$U7%oe2q]+\rkK.%mrYjjqfJ#*n0qPAqi2$j!5)n.7CB6;-&9=DG7EBVJg]%a^r]%dk_WTIoOSqHK2)&,#0+b;DPA(>S:3fQ]W9hUr/RQ%jkQ8>1.p2>%)rum;huj+C;55k+9$.aVa,]/h"KWhuMPH%%ge/isnu[[1=fmE+6bRYN:[0O6;3H\n`#(<>)Bd\C+71&&S\X[ZNQG$;R-`lTn3/6b%feW1*\o(Sj1"dKG3S5WU%\MZ9gGE+mT3U=X__E(Hd40U->G2tf/C\(gC:.0g6"E8R^()atb2+X(:>NTflE\6;K>DHnc?>U5TR]WC%R+U>:2NZ\7@!Kb<-[1jZ0Sh^(Xj<Z:Prr:a(NjSPku?%[Gq^t*2khCAB/pG`h4]I0@Sf.?I"+<Id415,7#b:eY%P5GAEX]SP[M)0%bKu?U8H%E:F!A,1V/-h:8.QLsZ_k.(DX*n5A-J6UZbnbi2F?im%M`G?d&SXdWAAN.f]EYDqF),KEkll!1OA-]oQK\k(ANOb*`n:(%iQl?e@r<$UCIL0]K8Wb=X:[>]%`r#k=7EL3^$pc1)\b'kXf>e!P'@TD`3BkR8+KP1gB'if,9F"WVpIoKbLl2.6tCA$>c=EJM8Oa`%2Z@AKV=t=dPi.j6qrpVB-mIsdb$K#edORYdT$%u09tfPp;a5TC\!$j%]EKn]_n]e)ORJrq<\ALLa#!/p<cjXZG'\:7(h.AqP)I[Q%mt'RQ6Z%l-3?[Mp!TQ-ghZMQ&RsuXCX=IN*j=&,&o:e<&'>h5dU51XjN\X]EhWds/"POFS4_dnn_%F:JOoo5;X8@T``e*-iP,'XG%?#OcZpU5fW=.gIUP5No[:,UBbDfl(rB2M\o\h1-cPQ*q!,D$HiZnS,rNHiKYVa^-#H&HnQX$`8O$_r<@e\Td.Y>\Ld'>;\CeH"i%%iK;Au-(J$td#obo<7Ml\7h`a+q2!CunCSCB+p0&#?XiDR<pI=<U"ls&koPjh_IM46a2(mVk^H9s@"]H'A$*)K;Zo0R+F>iRWjaZ0%@/!@5Z,dE@!R7@4'BZJ*1eS[j1@&X>"lX2V.a"K$PO5*oi=^Ji]Bj[WL@hfUbnBW2EO`,]`Ir3`DE!Zjl6otjMF%HeSX__]DIZ'E%XV[AEQ6O7DT6a%W(:%*F?9qLVm#[DXJ^no=.$Udl-MOc(HV>mKngrh'fHmk'kSe[Rn5V128P(6N!G`IF,qf`UrV?C9>pWVDH@]B\%PVY?X<;MVM^4QgB6/BTcf3kBt^Gd%eJ8Q)\rL9i0#dFg7GHrE&_14R<6oKqTWKWQ':Lp"#o57"?^HFZ_;mUBSHB*C>.p6f2,q$2A%"CmL.hUqe9]tOkZ*-;Bo['/O6]%'q(&L,s[S]0)oB.5.l[G>0HpMa=Ki!iO5ljVJ\6,@%iV\2_iEsW[A,Ti2?2nC"9>:s+T`mmi7%'6eU"kPu@GK9`mG@:]"AouIf(Y!A94TFj6#*?a3dg3e#bf[T1dXVl\#E#)AUU7bKZPmg_r*8gk:4=egRH?9@'W2$+1GsRO>F?]i?%/6,XHH4Vr=_=DYH&<&?<1-%O%H(KU,RZTs?$s-',ZU5>oo+#E2Z^]&#@Dc9>K@(_m>V?4D&(50Rj9c\tPhQA8h&#`r7fb,XYO?!m%h8f&PjA&/iRqh?n(D97Ecta*uH\F"d316g\P\cejE.'K,Bc_.rLr2*iAYf-__Oi@CY'PRX%h!C_d$qA60Tm`XEtil4\;3BC4$8!a%3$14al>?-*-e+3[*+)dFbtoaLDBCKMjoYiSa@LHc-Rm7d7&[n<eHm*"*Q8uN6cnQm`?Lp`lqDP*rJV>D:s@h83S30BLM<;rAV+NY%duNhFoB[uZn,OSDWGufQquE?'mTIk:6\$.VC:n+8,aDI9d"*9$QH;r6#e)(s:nR]<d1R(8_9f303o]a-h('!e)GS]+<^n2ZbKit)%bm9&ZXRp%ZUHI03=]/\8AT.!=X5J>J?qO)uH5PFjbZC^\OAT*WC^8UXd:A=7QM/k.iCl)+!<6"bGaeG8o=C.A"I#\'[L`Is9I#2h%ghm?'$pMn$p<0$`%qs%`d3=df\,5Ne5QLPD%(7P'1&+U1nlKf"6A[i>"l*d@[bi\0Z&LLd#=k=bE9"X\"7Uira_2aMFo@>ERGoRX%$*!t*2B:L7RF#,V?q%J+dngr7NgtX[*OXViR.ks>M'C'LgR(9M>7)6u,S-skaY]!2&5i%0P?^9T$qJiPM3?L2g8k$LS[Z22Vac2?%!$-SuZmdE2IUC4dV.Th,D(Ac*4"GlBZ^p:i8AX^!iA94&=87U9E(,I5nql[CX"pom[L`"9J6!E/!CgD>@P!]6W'l?tAI1XPd4W;e%]0(e+W3]aoW&0^?E$l(@&!@O=Nh5tFTu*:g$phpX8dBRf!4!L&H#U6*1U+4=SB5a<4=lE;%gaj&Sab@?fFhmLM-a_uQa`2BY+'PJ%nOUG<&k2mjXKr(CP2&21N.QZ=q>:]c+BXRrZ#=>1Ub]#1m8b51fkMU,^`llG&#22'"'C0#ie\g<>OEY4ML*f?LlI"Q.?2p*BhT1R%p<aco/)[dP"H]'K.uM7`A^>]2YS=\gK8@ZA`H4fIoNUUC6\pMJ?f'eMO?S+-)E'b'gPM*4'nd'9p)!=md)udUgPD;j56<*mQN7od%/LFQ#k0hpC^uY8f,hf='qMGbs2Vs#khA!j_\mAhkqkuX#ckrSs4&,+.\#F7KV*+C]+^etL"BuGmO;7Hqio#nqKKA&d1lmr+4'X"Q%[M'tQ(ds<S_jk\.G^mQYK-B2mJK^eem#pR]Pg5![Pmd"2&Gs#R8)FaudPQ\h(Q>0dDEqQ!!/i\09!ImeAug(s?Q#*u!<YeE1Q\rl%!)Bd-,H`/U#=*B*ka-'O9*a=H$p>`d:+qE8(*85Vi']#GK*0+63IJq@mLUFG2b29<-gTo<W.L;b*%qrWKdR1-ILuts4OQUMJQ0gS%G]TmKm?**d7p3H/Jph"JORUebDn[pHdT@7=^bt`ba,G`dXgi.J(plZ9UE[%#W+fUO#(Tl66Wh#mn9/0\cHsDs5VcJ.!1]LQV)&sT%MN(=FQ@t(Z/lc^!E=%6O.V^pRHe1p(M6eE^"]&%-qhTYp+@27;nJ/of\BZ+gk?p`M[b#`/XcpTkCOD`J6X:a+B]AphUa^8::+I#N%EqYT<TPj0Th;WR";uqT]*u?=-YNb,NgMO=K8d1bF<jpV(K&0'spIP-Q6g$]nGDZeBU-o'm:f'DG'NKf(T'_9$/6Yi-1J8bVECS@3%:1^Yo$ckTIB":02gBO=)X_r?f:fe[[b*3L6?_\+Z1u]]Z:4^ef*IsUsV0U4>>8\o,*E_<j=T;8>+nkuIo,V:UV@_&i6^G!&,r?-c%AG/A.#!;>dUK=b[8UX'4eG,\i&hD1IqY_mAQn&3AX--ftAh=%[<`frt;@4YAUi*MLd@Y/O<le</c$SKV1tnmu\>7&rQ'BHMf8U1:%i^UtgnL?0hd,flO2,8.SC(L[W;VXm_ADOW"R!`7oN$..cA0Ib@ODtC]-"6SS)MT.<_+%8+A*(!#->KqdV_o<."9hq"3=S]8,s_Zu%`,HUXDHrAL[4_kbEk'sg8n+HFEi1d7V6(n6X-?7;Iq#c#Jfnr.OU7:Cq3k3Nm/[g`lu?-,Q"-4C<L-`?i6Cp&$S_k?ST_Z1*b7%a%:1_X@A))=Yi[EW5ALdg`&6aZZ[pfV13@*<I'fD9]LcC_+=?@uqmH"[E<.W;m6<AqqLLQ')^@*eU2Jj&O1=@E6ede^%Y:f5m;;,lK%90ge4fBXc`\^H4)[X;j;*)2^F'o:NhDr6+J!G,Z1`^?Bs0^(GrFG5/tmsR[%:`>#UODLFK>;Qd)PTdGlPGBcQ"utC7GHYOf;=h?Z%i-SgZs%p&MS))BU#//3JJW"m&LtKOl&G/kE+rWkYB#IqHZ=n<am#!QC'!pE3=,&2WAH[&nNM$^,O5Y->N2qNUIK?$1%4f,R;2E";%AoT7Ld1$&kkt#>tQ+SpaMgNFUN2gce)1bp('XdAffYA@J&afo4ShWI.T`@J_Otq"2lT7DN/F,H+X'l;e4TSX!jr'AWX1j[+$*L(f%.VL.8#%@tOnpo1gr"`?6M5oZYSK3-B](OM8g.JpJ#!R$n;&5r`2h"cn&f2*FW.GNblTc%m`8_I>-"=4nBJ&E=8)Pl29PUV9?IZ5!%'T01_*+4s%Z5t&QG5Z:8=Ik-o;mX/d+gsme6I8BZ"J8\e#8.0`_kX2RYD?:GZs#>Qd`;.%JoegB&36D\'dj)um;u3hW7Hq.OuSJ`%Vd*hL?ca3A_[YO/*s>>7%Lu%9!C+gD'G0]64b@l,etI%SD\8IF!-'lb@n,pi(F%9taQ3or*Y$;2;li-,5cD5JSW7'@hjZd%(C\lg%d]1;ZdB>Kn)lg3l-Zl<7aPPd]PI71+DnpJ"H&U8oC*ZD_*$u/_55&T%N@519Nf";USdRd84MbDH6!R/t?U'i?/1(D/+mfm4!SCqD%#eZV3)E7@f-I^$>E#od@g["_`Q@JeT)^nMd[=;^3`_lCa\^s*&eI(\//R;_WCT'Hp[Eomh*gCgu0QuUOK:ARDPhi%uGVRL>A5UUN%\!.3E4#G[f@M`u"3-\aI98=cc/hFI)ob^a1fT_P/4l@)D[XooMW:piI.K\NTMY!l^-jJ5lbp#dFOje$$rP?W334VS!C]1KGXc2aW%G#U&c/*SRMO.>lh'$Bh88/?EpniWGqHB'OQaa[IJ2NI'*Z8ZRd#Z0J>i<l,NbHU@a\Q%c+G1S=6.BnVYClE)hVs-9J?5_4jF@!,)%i_cn&+2U!mAT\,;2RLbgBs)--U%O`ALpU5YB7bTdk<<371pq).!f1N;FPX%/?OLa=3&:W[=uA6SOnd28P4MLh`+p8s[6R*E6hX`D%;%9?>/B=^+.DXKEP_>%8;(^i7ePT'qY-s1s9Tf5%7)H9?h6BcqMBqLV<X?)JZXRt)gQT^HC1.04W"@?$[;A0<Vp;pa76MSVbgn;]%-"f\t.%o$.De73F$949#XTjDP\4`B0WN85n+RpXu!0KP-';A5MQqmD6ApA7)R`%3Re$_Wo6G:Dhg"fWo.!?HYWDC==<Ts9a]V>$6%-cB:kKO)"`BWZX-DQXn;fKm_m]*53<h']>8\uk%$^:?!kKm'sm.3Y2XbeOdAkcF>R-hh?B/%Ku]nUi$#fc[kL^h?@kiFP$A7!;,s%kBQ%\qU]T=3.b^qYc3S$SBAH02r;F>.-sGlb=k8Gm;-gff)"!,*<#**@bE*gE)m.B(N2G<6Ro;73]2\c3#;i3O(l%K$`EhA_Gdu.%c&(#4p_54W;"6,qiHRbbW-(LJ[BlD4Y`PQI$Knr;cpqBZ:6LJDJm]<AGV6JWG6487[k_UP=Cnr9&Gnd^Mf`GnC"EGn4d<S#B`N/a%`=j(n,X_p;.KPsFn)#lP2"X.lNWLSif./POkZ*5\/(c=L--HcU3NJEXihtB$Hi8;a+q]>"Hu\Z:BR[1U+2$C]&2IT'2?)RSkD,gj%URphC[/W==ro7g-H/mK3h8T!=K_q?g2EdGAS/k<F+77@6DI<=r7"2dq[![8J#5(TX4^0K2mS*$jrA&Y?n9X*^SC?iuAE1Z]BtH7Y%gRGr?RNB3>A^[4&rbPNR?!Q1aiSrp+3Lq6cT$.\q[H&r0h7oEH]q0%6^1`Sp?8@[Fe"`JQFRRNBaegZ:b/F;%$aadgD&$)ajMn<N%EbC!)^g*@Wr'T(dh3kYM35,nsmf^79nGh9GqU8s=a(&g=o3X_NnRA(.:&f.'(hK"3UPSs,;:qI&]eocOEJuj<l(R0fAgl9fDH2."%j*\H9AT)a>j3FP-Mn^;%?RG6LcT##Hgn*<s]T$e!mYs;PGF%imBDD/FemeZ@GjF=9Y=W8>hq#>dQ8B0<D'&?jD=[,+LRp,r40L;d%khbrV^,%lk_<g_L%8YhqNVHTOEH=0*CgSEnesahT];Ukad=-L%?g\N2k?dj'+$EmN/RJ&3hk.CH?Q;`Y)njiMA[2/B[^0Y&_/B.T%^%@69FDl3cl/?`^:%7O>F%4oPmO@PKa)/B$R([/r%(fthi>:;f0D"9'aXnM_^YmMUP+M[CjES4"4':@*U"jDo:2W3T=r]/TGfY6l%k$*bW`R4U5Vt:AE7g$<njhZ=WZ.mj>1!7\]Xo%_M_nG:fnlHmI9S`2SjJnOsEf8a3L$d(@TA4*Y13B:$k+R3KGWalSh/>D8VJae9%R2t\]/TtJ#D19])]KbBJR(RpD:!g7!i)qtk=rcn#ba7KHeHHK3_I(NKQ`u(cs-Ld4#=$NE*q/OfbYbR]]KN,PTf^EN;8CdFQF:1F%5C`D%o*:IEOg$FsjhG0uqFYM31;igsF(X`in%Z=j44sMP-f>J!IpEg-7Qrq`ma,n-H1:R]c3Xr2J)Ftk8[!tDI6S?Q:ZqV1HR?V6%$r&l4k9'XON0hBP13EQ31-B9&E-]RP;Yb6mXoHb;:,.^MaGV+MVEFenadFYMNIM!#pV/?PrsAhrf3%Zp:.i*58BG4gHX9iIrZC9_%s7Z]pGE"XHfiroTR=OIM7$7I\g'EZM2DZSrW8M82==jEE,@EGHn>.rgrMI2.AhJ:flt8c!C$(&:IAsCKA@a^(/n[<?-dSt[g0<H_%d2kMY*jKb[rGDQ#DuTLNC&3f:41qmTIG/9SlQ1-OL2<kg1d"^i*na5^B..d"oJ92$B.2t5%i-&Wn6DchhkqPq,2VH+^TARg0s2C'%*"T<LHa65DlGrIIToNcWA"pZ=nCnl+=qIXkoM\)?O/$:F>Iiu_DY.prV>TS=';@Zn`=q/WjDGu693sP/Gs![`b!="r6GT8CT>rcm%3Eg2:B4$G7#^LIe0ql^!r#0jUrSH!<OJeZ^)ICr%B>r8O353?.oLoT(O*Q#PpS5cV4o5rBF;DP\TZoHb$Z`bLIRn/E&@JC;6PJ@:%QC;RjS=XpHL8Vgj,HaXSSk8VaZ]_UK\^*dH(!\uj2#XL2][#'tF(_CWB_#C@G3nH4rKnVWD:1E#V,911^39:?E-<jfVRp'bR/(8L%0eoiks#B$<`Zr'BPi"]Sngl!n9rCsgLAj-5m[A"X8))PhdEBNb./:-@VaPr2G%j)cL"_8DqaMmc0"B9@>?sT>N]$rEAT1iDX]p];%>)Xs\9;dX=jHFq6.,jO'Not)fSLrmnpro/H%K6qUQ0[M/Vn_R_?gLWKs.>HY8#M1+FKT,e^XtOi+3FKGEdHd.%sRO;VC'[I7f!Vn%rL;-A5@<d&f)GIDjOW5_pC>p')q3p>B`@p?3BJQfVDZ&6F>WsjFR^mR5AIUtC;.0(1cpdW]m=#S/,a,VbMc-D^%LO(nIIi[O,i+9%MAKMdj/,%:pJ0)$kf;kn,H%FrdubWRr9aOJlnmIGG(kbrDq8b!.Pl^Cn,?t7lhUHd[gghmiS,8l4In&gkE!.Nqo5afV<._)B>Rq6%'3G&0q=OL>lmdsDl)O`<2u:hAnT(o7YM/:AQ_`8\5@=6HW9Mi8q-V0tmi>3G*i:`sD6^.Ij1ftK['BNF%H[VD?$cG.Du[eSnUGd&%*:M-rriaLSf*Aii6A(0YY4.]WpHL6W4l,j(!9d(ik&9kIjf>G0OZ*-`IT=pg]1Y?QeSP6UePuaF[JUOg(0=%FQL-!Uoug?!l'MGB%f3%+m][(i:=>kkGHhLqEph8Lma/aU<fk:9l:4F%+:DYBK40s8JmJ2ebs6YpE:Cgl`[[cbDD<RT48,XgUnXEg,5?roS7ZCJ/R/A(j%(OLgk4I@-`%Zb5BZ_O.*PJtkSUI4U'.'n'Z4KpeJm`c8SPND0"QZTpI2a<i!/4c-*qrDGaZ>J1QMk<8l`uKZ\`]4++ZJ,(eHG#ag%D>ZNN=Y>^]c_l-=K,so<_UK&ke]IGsq0Xn[g23V<CMhng\P9*m%#.,$+.k(p:R71t\8T?u9YQl70D8-@IC]/@lpG.*n%N]^]6hM_%099_OX7eR_\fWe6*_d0*&#YE/G(+/]c$(PUoDbAP>sgOO6VQY0F/I,`lYskpq1Xf8+"VSA[tSOE02<""rSktqI5X09FifkR\fs%D%QaRl.R9LR"'<q&6`gW(r]CY.Vq0[+pr5HA\Cucr*aD7gRal-cWHLUK9qJnK>Z8f4P4Eh?Lk,V5eVh^6XO6?BfHdgrS:S1MXaE2?L%H7KsW/s\IX0tE(gh;)!_gRfP%epRQOfKGaC$7RC"NUk-n_;.VF]-kdU/^S>4fN&NLVmF'$9UBU^[MM$S4`[kKoC(uT,&@(3&6Fq\%O'@WoIR^1J]iE&)GG!-'k9p-O?MXRORV^ep4Z"%l9>6pTh*?0R60D0RGrd:c_E`6aYS`&OA:D=gCN2IDc7U+*BV>="c1M6m)m_'(%h'*09V%W?WZ%O))4`2aMGNUK=G5'#)DIkb!l]7+(]5sFFl+sN?cVkd'7IJ8bgE_(Of16GB*]j8Hj\t(a&"Ynsl5W@To-`L5gW+V*%4<5LTX5>Q>0;!db%*LFC9_%Ca8b:-'lOr>a_'5CYq`BGuGGjij]bu%$16"EkEP(8mhWD!5a?2R`)0"p$mccHC5:@(EH00'i^\tfh%E90A+mU!GFE?NsKY$h+H%1`u12Wss3CiA`!-2M@.QO=PsZ%e0@*Xu]q>qL)*>>aKV<1e$=6Z)k3Gk'd<[_/]pX&I9gbit1HkA<tT%k:[?8B?b]2H"inO.Xu0M`JaQK"flA)VT7$GbPg\a`Ec**UJooV?0e&pUWo@K5nh"+3X@AU.^_)frHrOpUW6f8f=!lsh-:q^,e.Bb%W8WX]M-_corqGDQHmXgL>-j1[ei(O]l/Cd*/%5?Nr3m`]gjd#j[/5#o?>Tr;"1!W8ot8F'D:+XPB%O:!$>1C:;q&1S8JI55.-D*=%Y\fNu_2H8Yc&P84UJ%&])YSQ)FF:pcEl0eHZe`'^7M=\fND2rKU$YBE>bUgm:o&0%mn]!N+0U_$$B8oP=(jZ6obCZ&&oVF6jMerU%F*I*Bkf)Q>U9/ce]Lb.aP6],E0CeREPCI--*OM]='DP8E^E7>7SJEl[%]jIAng]6i[8T)m@c1S>:5m`pHT^"F3aUXUDV^7m1K_-,%(C@nU9c37ZqnKeX;T$KEea2LO$#c`%Ll:jhR+gaiY'f9T4VUCQJZA=6dq\6J][]uT-;AY2c[VA<5FVUGUV0K-[H@e6j+8M"76I,b%i6GBsnC`Yo7Vl^E8WqND[kbD"B,Kl.H?.CZ1j,qW,0/;.*$UCuc?k%<90GaLGOC$'g^Lc^olsWOT?l[+Blpkoo?1]^Fq0NcRblV-%3Stc;,1]EcA&*RIBZ$#,ZI@iIEHqJE7@4P-F.U0/5'`0lo';"^hX'FYhM#G,q4*Cr$_&-[?;;roitAWN<4@L<g[$p5^/GGcrPFc^%I5TiO*R0TtOB%&[W<PB5Y89E6<6X<P]O]Wur0n`I/2#kF-?L&Z]-iq%35/''^Gn7+d4lYknaX<7UBb#FeW_ug9m;FC7O%L<*P&Qq%R-/3ZN`2QhYsh)/ce_nEGVHkXI-"o@S`aa#EQT1`eRHM"qS"uDa?sta%4?d(kINjc9.]/qm#%RHZ&XiW$dPcecr`;W4[3aP_SPPr%VMhPpb0t8R]RY4));4#ujkBP*AF]Rp;fYC7EQ6nBepYr:lfEA77K]oU:-%XrGi#uh$bZ9c6Q+a#RCD1td:0"jprV)?drBVJ4@A^m%f6bQ][d@FGQ^iRnbC4M]4QnM6X]-3B]?M-^Z_("6fmU]9543j1[qs*e5@70F4)]oPiJ=PO>4ZD)Q&T;I/lG#j[XN?EQVSaW_1SPp%C_B_c]isUu<9KTrB7K2.0,TQ/3?4bsQcr("ZdPJ\NQ7$HV01!`(rg5<0-58F_M"88i`]X"dhB$Tet/l$([TEWN\,-W)t2P7hVR71%QYsM91<"K#2OSu;XgP_a#PY-`m,D18a(t!!o4=D*AVr+()Vl=2ETmh6nF2.5[^,Y1-jKN`M(c6mb\O?RnVXJCbS@`#kh]UnI=JBe%rG)(nX\sXCg"r:Yh@'/F>&q`e:4,4>mi<l7E32=A'm];KA+cnoE:H,5j*bO6jg1i_*39,[c?jl!/XIIrDL?,&2Q5SE0B3]F%r)+4%.N1Re\IO[?hOq&n6Mm#]k),\gcSmLYNk-`5.X+?[?.aBai6)njNu.]Qnb/m,:ZK<=im#5;H+Bqifj.6+GH9Ki@ZL+3a45l<_mnsM%!tM@6^0&>\UNKpV]reZSNlD],M98K@Q#OFC31Sj?Qa'T$\f;%.fjs'knNg;s=*hXlj*Jg])-44$B@gGRJUi`".MM96SIn=Qj79Y1%dE^b%GrT,cLZ;M+?e4d/4<1QF_sr%8*3[Q'n`i4VYJ\9J1_9IV'^'_0LXRPC+&DKIJ&MZ<no2)G&'&JTE4cqsVlTE.\df7K&J+'J%>$cu>e+IrF?&sciFa5rPSVP[:GW;8ViVjIpRSNJD'h5p[_s9T4B-0+V_so3=S?B]Gkup3>YKk&]3]rp&4BsLSGo[sOfAkh;4W_o#%jl(T0*mUfK9Z6ual["hU].6'a2,?J$_o%g3qKrb`UNjU$I$q1S_tdIu>cuAijZ5M/7Qc'L]e1n?_o(S^4C#&0_r\Hl>cuAijYRKT%g@I2WJ`Vh-Y#fu.b,RiiO+k!#`[,G(Y//!:'FQ.moB>-*KPErW7WfaQ(OdjPFZ;NL_"UankG,`('1P&8N[Fcc%eMl>((L8brJ*U"%4.>Vf2EcBbod(.S[/XV/P+#_X5=*I?!Z@iccc02Lg]p"i5k&kUHhQ`8s7sKQ^3=t=hJ^^[9n1h7+@DdH%sBUU&K\H/FFej(I"ibS%7a")c")[V<VMC=!0V;VR1IF\,#^C<,"I-KBLjP%).Tn7#f#)];rebQFK[II5Qb;>2HuJ_#S.9R2kKba^7][)0IW1Eq\'ju.JbLc<%1G/?h+eQMke!IC2"tOe2!Ffa>o]5i<D#&$iYl'+BKpR#/ds'+LL)2Ug)tc4,H1!K@QU&#c_Tm#BlV^m:21ISK?@G%armcDi\''PE%@H&g0/'tY9UN@^qbKjM&/Mq1;an!tuU):.,Rr6qKa-49ORN5(^Va$A-RiY8CEfY_bPNafaV4)CNO_#SN:;/jQ0&(kW48WT/1-+-*%%kS8<1YJl-C?b.4'r@G(]]e0CH^R$Ccrb=o>Yl4uZcS_Y4f4FVkqA:_1d*tVS*rl\e+(Q*.iR9>KDUV9*kIKC*Ajo`BqnnF(g]Ek%St$e5VNQS$(JAfV`7)B-Y'5ogLDQ]udC@I#iSbM;^j&>Lq#0dZ<PeWY:ibNn5j/LBI)TaQ=1)V-?CnO.k(+n<[K77Qb4*L$jn)r)%H?A[p]/Xs'U:G0sa(O26&N"@,ASR]k@J^Rr(AmL[q:hX7M^(LT`Id7+BABJ=nW,'H5rr7sn=9723rKs-I^V4<m(@)j2HrDs[@l8q%Nk<bc1)CCEGjd[*HbK(hSO6IU$1@4$/Y5b)gXBMA7i.n]0,j/E7*'/'Gl(tJpUSV0ooQmp(EHV-GWhd;QFkHZJ/_f:^38eOBYR1I%fKUm7*]9^-3I`cu@T(Zi0CA)[dn^+WG;XYfc@]2`9tJZlGWicq8CKL\3nS.Zf;[rY6#9jfCO%MMn*2p`k7%71$/\f!cH#+Dp7;3F%.jQ-Bbk\/idV78C(J6O<lK:BYYr#_AEi0/u/C2m<2U.OjI(FuQ"W+79f+[4ansEF4j2mrMh\pScl%[W4(=MPk_WnXd@:S*'2i$@<%pZ^8(7j[#ad8$GY_s\\^q;"+SI/U[dhOf8gmO/"Y`uFb:3r4+$eU&q[hY?0j)t2X0CMQ,i4T93ondc8ZDr1BTbE"mc/H#L\m6AAY%fgeO[48Iifrj-XoL%(S7421aTrKltr^]!Bp^MLX_d0K+]*e/;0Bn,<cc&^`=IcJKfSUC(GhVs=fS,'2>480N`0CO;XeaE.Xc\D`a%hu2k&+/[qc4M2bbqt7WEpYPbJknCfBjloS<TAG"iaiQUprI(uap[SiEghq'++T1l0O$7genGA:'45SbBkPi(P:EJBhGkVAkhu->8%IJW?^X7(N37brF$G]?JkIspqfo\ec5+)\dejL]Of]lA*fb9%d!Vt'T]c-<_(St<4Ek5+)Nq:>LG&+@P'ost!?n`8Q`c&ZbVoAHZf%rc%VZe)dY(V8%HEiVhAHrq(0q?@A%#rPm*;DnQ&:c)k'fO*U6(md9+#r,ht&>IP[)-T>C],@b]KSS@rcbO<2lDuQ)!G$DGjIr"*.%e_\E=Qg_k:5Pk<(^]!Gm%t=Q0lZ]ddqs9g?oD[mMn%JYgcbA/Ip%@:@qnlKPp"R)ss0sq5o<Y>:TA4_i5BdW]hV*JBGFqW[o?dg7%jj$Bb5PoI"cA,3pGak0qitq^jI!FQ2)fO<2;Yjr'1-OCep.tX>2`C*[H.DOHq>,$,Y<TX=oDX[$KBF>)p"$5Un%\)#-11Tcji</V%oDJ#H+)L$<\c9cU><DJ>\*lIdIeP>j.D>Y#>G_p[qWOj7n'(Q"l.=:RIHN!Cp)%0:mGe,'V]5U3cej)7DqquA^A6jK7n6(Q^'sIY%p@[m2WP0m&IZtnd>MjmR@'nM<K28J=7">/A?dO8cT)[-3+AG%IHnY&_KGUVgpYYf&afW!(p\3IVDY>@-mZW^D\b,K%HG4'V[JZZ:%-d.^I7sF9C?UX;Oi<KCe^\<Sur\*"#S"houp+6-K3PWc'o(I"1k.gf_qtAQim2kVAHPGpu]_lA5$[P'ZQgT=mCjOGTC\LU8rqbi<%ftGF%G$j/*@P<2T;`S=Ca6jIf2GS]!n:>rFmljIR^N$T$M`89Gl8Q%Fm!Ut>`+cd\]0G-K_pc<f=/Pi10(#\Mn%HH+2H4S@[(5XT%o@a((dgt;_pr5CF3]cqJm9<?3m:[iN&6nTepoCdf^[3+#\aiJhcA*KkHFqG,bJjT*]YF@(kC;02Q2fo/bZg"?$u;\X=e4=9cS!-e%0J1"Yn,<i1k%VHPe#2rg>E*!-5JQs5O1ou<hB-Zb^SHFn_ZRa3?_*5S0/meK?<7)erhm`k:VZnk\&PHZA;,JOmsN[\o>r)_k!,_)%D79C]BI1.V5Pjg$:QPXh!c>^!)V!BF:ZJDBa4kN^qXFLOh8a<NnF=3*o^]VL\"E$#cXNa\q2`!;DF^5P=uOcMBA/$Gqs;!lqMe^W%kN%\Bh#;BllQ8@$\+e:Amp<[$oj[PnInbu2[pHdtqr,ffolof@msSe$4acbEgHWF*AF`foI^B(D_;UU0+5d"kPL+Ku#Q*`Eje!VW%mllQF=jlsj+729p^A6t%SrUfiT>19mp@?Ms^$qqZG=O#THbiL[^[EZ`o>]%ecaI2p.aQt!la)ZPI-^do9$?D$Br_3#Id4ZCDX1<t%lYf;ahL</Q]D(-*+!(=BS)rq7EVmRI4IG\ugpjogaCnkL4Lk'rT>(;LH2kqRH(]BU(Yd!=Wc-aDEVI;Mqk"kArRWpIdbF0ArHRkj%h.JgaCGPmM?dlKsqW>9UI/(>7q=hKshu2bHCHhdYmeoYf^O(SO4_mR@+#Y0hn0$T=?XLNq+H<"Ap<h-3H_5DLpKq`apY?qtF8>e4%mI8M)cgTpBJ,&Ag)`QUE^O1=Y^\RoYp6<b&1Kcnmh]_(!NY>V*@:RAeB$SZ7@B,aoZd6>j>-]DHZ6Xd4C;.8nX6K7bkT1d\.`J[9%]"D9d0B'Y]&C]g=LYJ4cH)a\JFP@T/4nq*R_`qp/A+<?c]$[.i?<c+A=m!9(1I3&9C-5U@DRsEEdu@YplL^j.T?P^'ph.L8WeR-^%G"1FnE'>0_QZn3eEYlLKp6hb<E';s_.!N:'?3kG3[u3mGkj2g6/.L^3Kn]kbaB<P&;Yni_ER,.fl7n43dP_k&TS1#*kI<X/j4g3Z%*>]!."Aa6-\WERjLcniE?nU@26#[>;<bH7&#!n)hcf[WecdT$XJ'q`mbf_/F=GfMWcB6IQ]U-p+n<3$CmYF!)s3Ge#_<8[kJY0F-%?$25T'sQhGVaNNT0]kYF]=Z)/\&,p!TMu_Xo-'SKLs5W!=Non*l`#)Se*hiZl/N90H-XQVV@+E7'f^r0W.pDVXLlJhQ[LQVdLQIL%)E%Vhq=M?/+r4YokQF=um"I.e7pC%+F!8UV6P2%t,TReD<k)pIEcI$:`P?\AC)Vlh8(:t-ri&5af[[Irmc0p^d!!u)^o5n&[B>D)%:P-b3Y.qB1A/StD'u33j(p5dN1k'Z>F02L8rQ1m=Bm\KFBM=KKo#oRa24=(oYAOse>LR)Qn'%uMA(T\VcNYo@d@&9FlWI^J#jiG#%*G!He[Tcc)H#1_f!Xlr]Tb<cFf)(nH2Q*Go[Dr(&B<?IRr&O30X"RH_)CpNNdH^SMhA_HEb<*JrS/Yfs.so.).#mN+]mrD+(2[Hk%?6u:gqkrs<fkgQP33be2(K_o]C>5e^&D_(3HQbb\a]r!dSNYtT+kZGU\)!KLW^"WfV8^?A:WI.QDE:7>cn2Sl%62u](qj/HTB>Bd%i<bWb7V\JIW?hE)Y3/stZ@ZI;rRaDo:Z&pXX[SZpTYmFRiA3-G8_5Y'W9u/p`;lDJ*SdTE??9FrFoLs)FFG4R1_22[ef0Z3htr\R%;mI^O2*^E>B2og0$Su8)kE<oBl&bC#r`SH<a(t&P29hCMB!5Ema7XIQRbL%qp+Q`AT2*Q?Vg-D%$b"74#(k`qjRq:)<rN$jKJ5To%&@.E?[Ml8_j2%SG?#^d)dRWoX*>1UFU^e=)IAq@;[9tq.m??^pAHn-T>X$*)n-hCjqYgCqs82cH5TLU7k32(;ISpcA<i*.b]leNJ%XZbRC.+behg\@g+F8u(\+[]NKg3=TKm@-bTlR*ob.0'*b:O`R3(0f>&jnjOXA+O'Md_W04">Vi83L_]".M&qPrUEDW!KgZ,)!e$r%[=[tip6fu-mY4kYEV@!;nob;-n4gV?/DB!FI!+bM[SkS'CQ^f&nEnZj7CiD.S,nXMmFh/HpF#Y9_!_Z_VR\qe+K_c)bQ>H#-$"-=%S/J,)aP=mL('kebr0>aodJD>fn-g/(gSZk`q(?@Inp9\KUBHn,p7pb7K?MuT1-aRi_)98u`l%;kB'n]R-J/8-T1o;QXmIs@Yp\'H%EtnRa,aY-Or8%?Rh*8D0J[:klEU\![g,66hCrYN.lXhrYqje+HQ"dJ@h8+KG\8VmfYr,C..\5'>Ii%6["=#pq=$&1apt`>">(uL-%+ol-I\QN[6>;OFhW:6c77Wk4H#uP9HB>CjSDH$Sr@PTV];u-!*rkZ"udAu38h/'\[X)7]gD>WPplH+V?g2Eb!HU#2#Zha(CjhL]4%8F*BaD=<I6&fs_rI(oVt</tUX>]+gDnPFLW\@hP1l]f@4fX>qiE9V=Nimeq5@GM[jc?IHkH,3jKk&jW/PhPHSJk)UMNbrO=X^C`8%Nb%mr=dh/g4cI"j$BR0)Z-c?_C$+XNn*K)Wm@U5Cj&Y$3+##ol45IUs'7Fc``)o=/22pqMT>['oTm<R9gqcRSc8H_-[bC>,l)=nt%[&o<sS'kErh\bTOD]ZX"pOPCZN]"#9[u88dIcI[notKr(.S]ReQZ(_t^D$d-Q#Ni'aZfm&Zq&@/b3!,T^V,;b@o%;%I]fpI2/W@o%[s'>=1Oh'[7rldp4:N<6$#FeXX?B]Dcd*,*=0k\fi2"N4k:7[mT4+r#Q2=>S<it,;5O8g@2F%I^J*_6f<Hu!2\U<<_q6mu:FG=b*%WOV$6l.X=]oE^iWHtk4VCn3-%Ib8]8f"Bn6qg:.8Ed6H%B(#,+5J'-?SSh!lksVTO?p%Nb)`Mg)`>Z-0Aa8k?-r)iW!cs$LK7#5#%73er./*J/)+8asI`3E[am<nIod`Ikp]cD><4TbBl<HE)+%37d5c.g:>q67Pk5$.EBMq.+df\KTgipY!&pFI8;lCN1,9LEn40`G#,%)m-;Dhc;'g>B?o.TdLf=GB,6k'5G-O,5lfT47:'fVjj_R&QUs,2jT/A7uN-Yb&nYFR)]!A^'^73,C;YaX07>=A&@+O+pS?<>W]^L%Dc?P9*_#Ltn*.jW.]PLog.UI7mLn1>AE=@rTr1aaD+A0!qer<'_qD*B9T^A893Q,qchqcJ3>W&heYq.LWka8t*au'Ld=9(ohMt2m%J:)XHmgb$rg/o5p>1<%q:NID&G1J5Z5%g1Jd71*ED$/ZXQjU_Do5eIZ%?63!P[^iVj"SY@ULVhr^9mUSa7`\<UZ3;Q8%Vn.l_[nq%5q84qB9/LXXbfsC`Oq_$Vu6cu(Y?JSqJDL-B0KLfHYF5.k#u`&]jj)MoNR'S0L^KjXD^#alg"AremrLRqp]eE:h`;gKq73pD.e30%Zgr<^B!.nldjM8uQ\kg:1gZKlj$-r?=0:TQTA$[F%p7-2oO2#hGl=4^Ql1C-?1/R+iFBmlcHQ\=l+9@;`PYbI^p0,NT57IhIGC1n%0%;R=AU=sKk?\NME9X41pUbnc@Uc58_LLk_pr;AJg)[d]duSQWe;`ifK7l9O_E?U6gAl%O;F#`!g[MdtSQX<H51.%?*Ou6)/;'p+%-lT8djJ/2KIX-:=C!ZPJ'H53W/T\22;L^a>++^\d,>3)>l=FIRI;YjXSa9^;Fe!=)N&R)80+M=8gK[&dH+0;^SNaOJe]/14A.hP(%D&$)iN^6]p(QV')lYGbh0V@'ST.BkMSI5AhjJo<"lFuS6k;Su7?!9(FQg:.6_o9EG7*taF(h@4V8cRSJmd;`VL5=qHVu]C1CkR"2%8Ju(1\cIccF(MNEdal%__r^*$j)OPa*G5+/18^hHZ;l<W=FC])\XItl>cqtXhgO,rNto4:2:Gf;R]V!37E]:>`0[Ld`Vh+po5t5t%roq>HG_#3Y[-WF"GBq'ti\B!t1M\Y)7iZSu">mr9[CKX%mG0uDRD)"P>kd/5Z8su+Ma+??d\#?\Z$CW&C0."-iLa'ss",8ZYMS@2%XguHt\X3)Md1Oa8*r[]n+(&+B-gbY,3(-[o:=<:i5$Vti-.o3T@m22*N!$#jnQK*MQWKJ::M3Ham%\S#gAJ*keS@5\N`nJkh#I&+%*MVH&gp1//AM3IT<SFk4deJcnV7a>'DO8.<<jmGr/!o/NNN(Z5F07Kg5JWXGLs^`ZlO"dXc/\!9g@MCN!+S:;K1`jb!QFR:/.h(9%[<%i\OY3ef1l'\L^.'c*)NX>oj\X6@f63JZ'^Mf@UW9<jWnl`W@00`*Z#SS<49"sjH1t6IGp31fG,9$]Bn(C(mA'XW,E2.e'[Ebk%DhfkN63Vp$=X[JMfBa+%g<9Mr>B1/umG['rdbM^[W0\8?EU%(cCnI0n=1-jhhDf64Qg2h$mAJuF"C:J6?X@#eH<C"^<en@hiq@V2%IVJZ#Josd>0:uGFkKVc[l;?T&55mK+>V8L9GO--$SsY`F%Inh:%#%`)Hg,$Pj88T,+4MNLYhQ[gh`NhEs&SR33OS\04FLIOH9@'K%OWj\Y0LpV_5$N39/TC%-/!X/q[u0.mIlhT\'@Vrl>BL#bpjNedA8YSL:u*<$]l4u8jAMWf(2ur#[OTQ!RDtjgH0]1ipZqflCMDd:%hhBlPFn`RtD(L&MT05A6KQ/V/?^mEu2lA9C(pm:L",AZkom?ZS3_lh8DN>l_C]FAcX=TuKI9a5glcZ_P;P&Z]h)QI*R..80^mpm3%NM=%/Z10fY3"D&FXEbVi;trYH1hReEhcEnfbKC&Ca*2^))Jd6OP0Z)"1X`otH+5aB[a+lGND0-%DOof2T)\j%'V>JUB;AQ*R=0#1%)+D6I;(V](hc=qnh<o@8,:A!ua%i,Q-e=oYG,.lsA.q-Qd"J=rJ0FJHBmd)@/C'kH*X\QEcH6(]gi4\(B5_FSkPZ0IB,!*W)lp0G%1>sGHA/?1jXl4G;G'sb.KJ[fk!XX(NQ"=`H[AeppYb(Z&2ZM##"XuA&IO_h,0/p))$/fmkgT>cr<J=X^=S-e&o!(4&>&)6RNEa"F%*Buc]9&m?[fH2`57t:8/aBej8FS^[WrNVLIPl4G;0C/>RCLd%?:nZ]CB.>_fa86T@!TZ+OB`)X.[+']"1f$rYg#ru9COE\k;6#X#%<@Wu.F[Kl%S]s\9_qXeZE.(Ug-FNF#ROh3JTYhe:QKG(4h_7E+?COfW>tMc/e@_rJc#QffCE6/CCFaT:Y(!iGN.,4/6$^c;5u@LC%V8_Gq:&eCA]tQW]2)e,cLoB#lck&BiQTc47s*);]>P%%N2<a9Kc7SB47%8=k?1u$UN6-tT"u>$HkkpaA,Xu]FBT?J76,,=o<k>D(%Q.!Yt(s+ulr_(Z$G%O_JLE6+roY[cA\GoJ0AS:gaATW.q"sr,Xql<V`h_h![MsAI_n8r4CpcG^@kIKR2k,CL+p%0&L\pc1@Q[WT@%L8Qqi)oL.QL*BX[:C8pAS5!unqc:Es@FcCDg>^]VJm,K[$g@<WFDgrdohL(8cEG[=eO)Kds8#od^TC7ZCp#@lgYWCib1ok)omWn]%2S[O5V8d68AA:!/S\LB)[WrOmW+.ocqXii$bh"bI[`]U>X)33BHj>4`g>?7EZetX6ajd=idIqf(SX"V-Xe.uBo)3i=\f[8Qk,lq5%?Ph/b*/nb5Q55dAa(aRU/rf%7jkEtiXO#RLnE9?MoKI!a-U%L@fJqapT6/c!e7Vf8bFt,+Nbs@P)47igWUY1\3?LHLgi26<>L%_P%:V&-MCEq!GA7s=q^,,0N`72eK`2*6.iF_)F)*Y$CE\+Voac4Y=7p>WkE*fa\2oG>=[J#Y"&X+-.q<bk12/:QTBmK@CTJJ%Ye@O*]%:G5GDhNj3i!IXn8`Xn>O:J:o,X3U^Wgs`'LMmlF\R0$1^\kps9ES=mrWKtl;q2K\,-Iptb;!E#''fi8mZ8M4%RC%Ug4RLDFj`pbY%@a`hunMXgSTp'q,0@Zpl<rc^uB.*0,H^u*)Hr$-i?X].IrEd\C@U\fn,&C/VAN(DdPJSmM;]XUSr0e(e<'.XP=r/^$TfX9/IF%&J%.u/I[PNMGao$m,?`*SGN$*]8p,'H"Pq>1*C*lCPs]>2&-RTq\9L,WL<o-9S4m^6o_:;iqUdtPT5`a8Q<O=+n:5IZ#%4^F6)B2(O*%dTlcuAEEF;Hlh)uB\MC?)j=WY,:?cC^8b6Z-9WkOHSZ2i1b%Ed!5RpLkNhjQ;a6t>mThEi7S^O?^9UcIRhRltG#jq>-]Y<*!0=KW%J+rrthHQ\;*k(2)a@Qo./'BS&BeCL5f6-?I6X>S:FKp(8H$!=$Sb-UcFu!l3i5mtGeQ);*-j%3IRWPgB?OWQKF6h/ej2TkbkbK"Z%jW0d(j\,>S?ai\ga&/&/UoU'4\aW2"QAT$^eaIfl;OE08D>p"_+olG]$m0=YD4^B3jCd.A1lG_U7qW`8>3[<#XjPh]jmVLM;!%ZN%r)[j@f9<gV@a\n91*C;NV2\3?-<2B.$7l*Ib?s.VejaZ-l-?(YMdR+`o'lIRd=OrV^:RM+q7Fn8/f'mS!UpS#>?_b'l,CumRLd'M%K@9,/r#3c\doO%_iIO+.[`AEaUoiP4UgJTfMdk,&S[*aC.gNK[p`*#./fqCS1b$_eHQ>9Heo/mCEDibD^mk&maRRU%.SQjaETaOj%mFsoUYKhk%>-i`,T,b5af0Xue]c!E*<mOE'&\h'la>`#2ULCpS$+-Rao<kh-rYidb<c6e'ZSa)imp0T_ZL[YHLpF6lhnI=:M\SDE%X*a[n5<kIHE,(.%?6(+og,a!:7/Zm;]=tj7qAoS$\oa(X[nA%G2r]&AC3++JG9Z%uouHG;'5Wl:?`hROfo`)Q<!^Frd[5BIe(qbW%is.MUc%Us\k6d";\YH":Y:dcI[E52KYJ7K$hCDN+F^tG6r7?pCled(e/Va;:\I0&GhtL-W'_2(j^K:*?U."qUqY<>Rr*Y6YH?-9-%m+tEWh[kTL9V/fIh;.tno?cHO+hukR/+XuaAh+3t&'(0AT9672nD95S`RDc?eWJ3co1(n:LP=^3`NW^a^?2VBEd;eAVbk1dbMBo`%[FMCMg+30V`Itt*=0LN!(DDeT?[o7l$Bt:riG8:t$Y&W&HuX2kB_&%LHf:_ZpYf;'+2jrjm$4i*`4_t3lg;9!R[IT]RFe_]Sm7nQ%LSl'&8&J8\QXEm$h<tjjcAKC3YALX2lbh3;=.fpA5F^GF@K-3C<jT8'o6"ZJCfkTh@#c<.P-IATdc6iZm:bVMr,!$&]TFP.3u(!;%r#/EZk-q7BYqu+A'u:9Q.^K)^=#P5>a*+)gEo/s\<]lG7FJO%>*BC+KWYo"QP8^3(-,$:a=.O&RPFc%!9Y*?f7o-_/r,q!oMB4qL%[+<C`Vt#-%9Y1/]#OmFk;Jg?r$f7GN?-f>@j5Zo*8R[q<Q\3Q.ZiL.O[XEg)Wh#YJ:HHr#,Pe:d5:tOu&X.f($+@`ge>,$cPG0tL%/BpTNPr+ZF8PpQiL][$EB2[;5r-M]i&"KX^"hFn4:]D%4Z2&a=ke!tELB-^3Ho\Ji5FgZDYMZDD]SB_LSm?5Z]s\b#?0FFO.+R1h%2];MO?Zjlu<XCGiA6k("hV&,MDbQ#f/4puX%Jbe+Y10=l^%AZp%d\2pX=i(PZWi'9cFbfX'^k^J?6biO<dB")TO4oXl:s#NE,u>(%&$4rq+]$\g[I>E+LZktUKnX-qo,lnL*IV-OZ904IO+03_M!_df$Ws^AVW[RC+%-=*TcmIFjmJd=>.@R6495#hIJI7irZ"GMofGb:%&\URcl8u5K^lgBG@#Fs$n77"XNRC*-p_[hPa_L^^2pgeR]3^shA:KO.H95qm\\*-AoUhW57bA#jc;._.gu%=<IT%0e?dKi\*:)H)%XEJbB*a$P1DgCd\p6#bb0nUK9,C;&8!8T`POrbu7O-=$R#HqBgGqnVj^)<DB8Hno<\5t_Ygc+;4^Z4:EMZ["1ope^h"^+Xm]`-l\%^tl\rp#P[,:ZJ`02_Vn3h'(9e!%tI9$`,D=.\#U*5I'MthEHYn3V,:;]3s5Y$[OspD+@N90lh'pf^*oGe^jXrN'VkUg)JQ%9LDYb%OWJDC%Q_5mig=Xc`GsU33#b#KqXBE"*ZL!p0[92YfuIN+1A'P9oWVUBpZq,$@p2tus!4hYro@mGH(6=R7S2hb(MTa/Qs>LdXBn(`%0Ne*H5]o74m)#mq*i-E;OnNDh\r3II_W72Pqbb:7:,SsE5N8d*[rA^a<Caod'/_*9J`;.^(F1AO#]AFVCrhaK;0dI@bm2fgQossX%YqkE>WL_aYiL?@;'gf:3i0!eD8INkq8)Qq2pVBo^Y>*/cQ;JaYSnLOuVHu<Y%i=]$rERktQ?)eckPK)oVUqEVBce+?3ueb^gg?o@%P3e;J=kQqR!gO8XHQ%lIdZU:%UaI"YdKq7IofEbdoD;:eQV*VBr4ZE5V)k"!cX?J\2pM,?jmktJlXb:YXihLoVno*H55cfi>290$%k3'+"6Hmd';F=-&[KN<R[H!Hb^YubUUs_r?*I$(,IXYPJcU&/fiDF:+q:M=)8G,$1mo$C-FbQ*R-/Jl,r`N)NIV\6u$tYI]G+[jA%@_Mp`@>Un;:3*ZO?mBd:0'Fj)^F"(J7-nLD]>G>WkU"&"`L1t%Ks7Eg\s-N++NZs%\n*4UoHJWp+c_NjRT)"@7+I=$Zue2dLGW9Q%[kENtHA7%4]3a*4U%+=aJdA9o.S"`M;m;;g!Wb)n,]ZJeI&]VHA,n6BGt@A\l@9]Olu,"g]cXf"`L39VG`_)$!kn-Qd1m;i1OPY(%f@Qp*Hp>`*5q4"u'9BbVj\*7i1Wh'E[jjP`,:<fe1Y;L,)a?nc4OWR.<Y>I,mfQZ6?C#Rort?MojC@c7DZZuO[s)O<8Dm>dOuQeM%kfI?)X,5?`]0%A(fF0eJH5X[.>dA,crS><NoPP9YU6*m<JXer0#d&6+jUCR:f/;gOqtVY,O75^dh9ako!Zt^NLR1aVZTkjnJ;FC:%c#WKB`Wm.<Y6!iTq.onqm,=Et:P3#>`meP@Y=bu'<G=\eF85s]ZoE]+S^ED#F7_1n:NT:1QR;'Oh8d*6%'"b\/<q?Jfbje'X9W<E%#!AO2)5^b$?CB=_XY([UeH?i6`FJaj5j2cg!$CM\90h?F"&-A60\7oA,'6t@NgWWP\[j?X@t%9V/<p).)mHC']m.,HV`I$h!u()a%5(V#Rl+in&U7t6X<B+),$,&$Q`VWkZ0WAEN>UM_Do\1ard](3A4AUp>pGdUh1<!uh0l\,0D[N:;c@\<-%o5qV:.i([Z1gTio1''b%#uP&WO<jDR>L91a[R!>!.#o8Y311d?\CRUO:NVOK8r5Oa:C'RRqO,N^g#jtXRge7h#O+6PP_TBT@fRM9q`,Lq:9MEg$l0lUEF`Xt%#SIWEoWK^o_*lopl'M)S_Dk^'g-8-SdDC8I1f"&jm9hWQ<uU6O13BrM4o?:!#^p`USujU%J^$fL(:5`:(p9XD\trNO";no^PC]O4%UkoTgEitE5,7Wnu+aH&m0IH+3i7"r6(b?,[-/+DjZR6jZZQFe;r&F5GjmmgM.%#$O9#b:cNY>CQ;QY]Ab2dR=:4]'868cUIaEu6Q%U+%Hf,nGt^csS<9IW;Z49)(%:ddX1WrSE=*kFX"-qm6(E_Wi;[>X$_C)T#lRbf<7Wkd)gJYeGN<FZ?(MZ2UTP;0nR0W"_>Y8&+eX%,%P+h;X>f*^CM80QgZq0,&%lI$QT^u1U<_H,7Oa\&6$HD3jMT+dZs]m.3/_=IiKdC40m;(4Om$@LsuT9?'g]9W"5+\Q15n'1_tCN%PR00PLF9uIM$PkfV@,cU]t=]W][dUu[sZVfA8W9!&KN6po=4!5O95:!^7UH1\:!ae]&8agM3K_T!I4hO;`R5sSOA@38:PZU@(Q;s%1"%7$f:q[2P@-"k'IXV+(Kf\)j6([A-u$h.*JXD!MAFOKUl+$e?pBL1\0o4XplhHs"9+KP9_P=?`XWcX@arSdR,hJe#g?*[3)N8O%W&V8*$urfj=nmM.$3MZ0LWnqpS#*>NAe%U"rS,64\G#F!2163?6'ob*VM6_;K!).`-t<]lHj(NpYPm)"`E1F*<=>\'To6+Io2c<3%YG$lXTZcF%;aV@.5o6I8bZmLO?U:%%&#P(6^4MBN3sJMK(]PLU57O9?0"uq_l\4Z&L+^2l:?Z3$CZt[&ajCi8+(<lHC^ti7-.((Q%W[1)ZHFLr0H6mITh\HjS96mnY4u6u`a*V?M-MR-6S@6o-P"3Rf[O7e*bu2BW]?7!4dqgdJ0j#lU'?)'RM]$?2n,8@QgUhJYq>SOM%kTqt1"2UMa98]m"m,8/,=]0Ic*-t+R(<n/c2()<DZM*DRUar*1OUAt4+-d7Tfc3\%NcR]XMi#l!/QR"<ZYk()]D46+dl@UQq9lIe%fI:tO&).5hUn5PCR8Q?Kg_'T#'A)oGVEN08*6PBq@(DnM0RjEFfW<7BJ&J3!YfT6^*u"4HRuub+'F0]HS+GHEfQEjha<K)4-)RDs%051`&Dqhu@(<cF8@mS^LDoZ:cgJ)_'**,=h/RnBh72PZQ<In#M6=_+hfh]7AOf"-lrp#*RH$8r*OVu0qS?%\!._7HRiFd-^@S&;S%FI3:S()<ABmiGc/o<ZJ`jhRdmj*Q^!CLAtf*FI-]QtU%"eaSI4p>-"+=e3W(FCe(5_>I3-:PbS9YZapj/34K.HBWrUAVHN/nS<Sr%,s(uUHjB;KN!@4mQ(A/<K%)%DQ8/&Q6#I8l5_n;d<^,rpr1>%[rNeJL^kg)Y1%r1`].q<3`#TF^m:9b?T-:EI/(A>(>-FK\Ndutq%<%d2;F[noqD4]r(\)+LL)][6K`W4^_!lK)_68*;rBeCq+=.Zq2SKuZ/Q&G+cZ<rYtm8XnE'go765#.s#>8jt>Q`9%Z9!JP?+^?D+%+tDp^1?i;QUjQ(LKr^8'_Wdt[P[*7llm?a9(6oS/_'k<c"e5q36n$E_1+mT=JU1iXB1q?KM-6"1:5["jfHp.1oZBp):_X_PUu:&L%Mt5SG^a#V7fcN@n\g/>b7<s<Ws"(Rc"<JF>`n/+EG[9XU,NF8h5[L)HIqp2KR8.oqnhRTE*gr+)62NHRK!>!N\ggUae`We!a@,h!%&MUmRm1U8u!,RT^R%,^#@d1A&d!TG<\9HeS&nUlKI1S8mM[+9M`]t/(K=u6iK5p2'f"s1Tr=V+^);9HmI?Ii#^3m"08mUX`4r-[p%LoM6W<EGM>QSC<aFZjHQ?@6$a8&iMK$MR:,U#NZI9<,XlS1IYNAfdKKUod!g+[.-/"^S:orLSY?LZ<cL*cCM^lf#/)5F0#)/j'Mf%d.M@+AZ-rYL[1(r3hUdYilQUI@'=mdcl57qo)l>M_ZdB?SFGEDlet1u*Q>i!>S!1ZQ@K"c_g0PHS'j7RHFOMj/0_0JSs6;W\j3r2%.is6Sk<oNW(lm0!PN5,TAP$F-rIb*ml]DK"b_5=C:0_CMiWq2t'/6$,XN&f2BUjNem!4h5]/_tY^,JPDLinLWo:6'Pa-'k%-kAu'%iX9aR7-MAa'40o\OG^!=T3VC']ee;L2!%-pYt-WdStBOA-OjbL!:KrMiQ9,*D?HbUilEgAoh+9:6&+5nJ-c%bl\<H:Ni.ZiVA5M2%NJ%&1R-A`4RWk^5gDY'eV19'agNomJE<`hK,5#U\'rgAg"0>%I_$3u'HN#pTMH"jh+%/Q_c,dn(r$]Z:;IQ*0pnjrq/CCRD4]`;3%5,GAP9n!PYf-CjPlQZIf\MQ0\OqHQL1K0\+,/]g8O+U!cf+Op!OaLu<V/WAoouuXiD_a[/>h$:m[M5kt^LcD&\9)n*el'#n*CNt9%s"C3fTjEG(Qbl2e`tI*=+?u'oK#%?,0niF&"Gq4Z_?]b=PC[#<L';4Mq`+TC_#t6Y*6`mEGoo)kmC3+YiH2m>Il2Pc>Y,XHM+M!g%._dSXSTgA&`Q`r[-,^(MG;M]M#S58l^D[oGcAq0[%qM,iB9-ZbZurmf<;EN$RpVNR=7c<KB/u<^f.(Q+NR<Nh]uFMqDh%cb\n&Uk%QFGhrM0eL_]QLDO/;uDf-R<o>a.I_r;XCj&kcMh@JfT^o3lQ!3LF:h_pQ_obCgj2iFqRgAFrXY-L+i/?0bnm(XEMOX`[F$NI1]KG%et^+M6]IZOT@Jsl'Hbm)'30rjoN0ZKMVY^``A=L."H8q@Fsd_7]AWj[02WI-=tunkDPVDRNgs'`Xj:iS9T&</jgE@QF]>X#<Euf`%Qk;LGo$6H5B@<sWq!qX=2f>?:h2MI(k5&NIUqk$>c%D>^<6+dN!p<qM27qbfq+@CMe@H@hNp.kbV0"j\;b\rTC$,Alfb'dZk7]GG%Lj#kqM%G5AO3>*&R;s7r?id?Td2sTJ,Y2lH<n]>O\5f;r8&+&e'(<uRMI'8q7m:X7Sqh*p%dYLPY]o.pmo8Q;-+T7H\?8KN106iW%kOMN3Hc5l.IBejSouQG<cm*Rnqho^n/Rbf"cR&73CEP@Y';SP&mS_7-IU$o>H1,l_ITX0sZ3TT>H$[q@dq/3iUoU@#ZNE6p\3X-D%L"4V*h[e132-lSF0SEd/XJQB+V<aoI0gup@1=JF.2-g25_:n/T<RZX2eanNWeCAYL7X[%KS>M`-/5G5fPln%`$`g*36q.AW9c)r)%n_X^5LhaLT?[Kh>*E4n%bWT#0XJQB+V=Wl1%\fCE9PDo>&%%cXCe;I4NVfoV$Tl+.5*^G_TUIM"r'I``qPpFY*ieCm_ATB<U34XF%<n!ms=QXA0m\0,&[6[mCAVF6tC:Z),.lZs4]!)46[X+UsFC>:4#$t"?(+ndnJa^4>0!(?kBYF+H9c$hok)YH0U7*^9Q7aRmqQHb(%",?9PXFX@"-)flC5W)hL/R?SII/P"7MhT.e)1[;4`W#L+0bP7X%0tf4nhs"D_Pb?-K!gM&^K25[Ufd".dsH5Bg-mbVomGHDLSQPe%Jp$(R#o&;..+%bR'IZ@M4bk\jHV'&r6))um;W1R,OuU'`2*jBR;E0@V;T*RB(cXZ(V-[LTQertoM*8VVq*dV@RWXR%c6L<&+1b*B%ZPNPaSc>:^A1Dm$BC;KSbZ]VnE7/Ce@OepO("+D>'0JHC=ZgfXkD%Q:!Fl!C[j64\/r<)</cB`TOWMK/L[L>T.b3RN\T;NCdc:F!%HA0kfK@4GcSl=Hdos$]b3fCtFSOCH#]i1/'CGU[YCO&+p'BN['I_*(biIuA:Sh'#aTBd\nIfP1E4`c*oM(/q/P;n_+V'06*JL$A[%8%S\OR%35k/`MoKogIQ<Ob,4`DQ'LY&!j8]1H_TIb_Fgj>W1*g+L@d8&nXN(88R.39hKdr.NaRsLI,[=aQpW_q/kY-'6ublM8neH%!bml!muFC^m[`$"KCpjuNHp(<=BOlq;=(!HqsjK,.@pB;5THm)P=i`Nf(j;>,uJ9a7s7=Qo&%>q!0dfHH]:lH:g5FS1T7!!pde<o%90=tbqB2'g*qN:d^g8]_=ZN^Dc,9:s6A@>(s8AJOTqU>.O0b&KWY>'n>Db4*X(e)GopcW_=ERnHS97oLG7mh<`"O8Tpd0_"&RNu#%-G'U&-9ccWVBdG)^0\>8e5qC>EL2Lj]3`"jrbckI([bb>EI-Y_&=&<9dXYZHlTm^k?cj<Y>uK/kGH#d$HF7ru>uHi@-<%ZufAjQr%WGWeYmhbDThJ/'B.K_-d''U=^enaing7+5**jr5_jFt!#,Ia@!K*4ZBYOZZ5Ksg*9@FaaZn%%FtdX&7:mYHC5##JE[UH"**n[;Qg%EMDoUo;:)`mY$NM@ld4^h]>,3+9&5&F`BHq%$1;ZCO+cbMnW<5VZnCp@_2CCfNN_Qf!C=7X!0*_g$Uke8AkD9mpms[<?<N.;^X#'%](ucdmb-u"/G)V>`8nW]gs*>/U5.-T3L+'p'rg;jAP@pp_g6ShTGZZ>ol:RGP#*kqM,Xm4milV.C[LmGntq/g46u]sp;i,q*bJ9t%L^c^&pdSa_#;Qc(lC?(m_fY!YoF*@j^+J";F-!ff,k;RJ4nn)P-a>U("fe0SC0WjM.ofbSdp_i.AS)JGYHLATcR!o7MrmS`h`,JD%lo.\/?VAoa@t1Ue/)SnC[E:P-EUJ67Jg^TX?_6a>"l<ZLpine,X,"m[YrM,%k+TDXR;FT,q<Hp2ZZfVN7<n[XA:AFkh92#\"^BB^%J);KQqb#qF;JX%U'/jPWcgS)`X2KUR?H53M2f3mgoiHuuIF".l4hcj46[.8S;gUEsp2?`<=do'WHS(!gi;pk&^iQicSi>g6AU&dX%p&$m7MlZc&<I@!_@-ukKrdNq(j6_W"ql!(._BsE^IBthUN["QU2)ijI,:9g!I#f'J-f(If4VE%)85h'ir[!FUB=^i&r4CY'mmO=d%1\Z/Vd>1tGS%fVGZ>G7CSIXVeIUB\CIZ!e3083!0\?s?jh_#^i`GGH8C&V5)Cd)Y0isJB[%nUk7dV$uSE<SbSU/Ii)6kqU'*ue$k%eQF+PZ-)Nf:#JUsSd;3d,riK?QW_TPku+Qk$G_6P:M-e&l]n.mnmE-idsD'TZf^s<d\L^Q>*9sb6g,gNd$&*VOZtk/'JS6:S<@2f%o!F^-4l*ZRIWe_?mg<Bn9R5L<%'S_a`i^q`8]-lL5$5BTDBQF.2=^;D</l"Q*'f_n[W^NBJ*aI$J9r6obelcu.IX[ikZJDXN]%,^%#qa^.-ES*MBsll,d90XEr*t;RO^$p1=>bF]dZ34+;@[cKr!pk=:>cUWkR;>tk0.g%+j'=u5%&4q?Zm1HZ6P1E4Y&lY6hh9"Q@%N#%&Ca2o/b/`"(u^jbONdRcrFS[]6F+em4U7P,9jM8Z96p,SA"=ogf=t#'5=F@LO?acZ/u^?sWK0qB5JI^\jUBpc'jV1!fD57-/10Ki%V[%qbLZO'Amq]."Jp$miCL[S7q=nkHM"Q/Q-i#*S5se6c,fI(2_7IdC]=#Nd]k")D9NhN8bim>K+I9h8FDfWb)PUltEM=@:4T4VH%JALi8WWDa&W+Mt0N3D4(MMl&I!Xt_oUkRKm#9.ePrOf)L&Be5\kW=rp)SiKoX%74%o:hhs7a=g6(qh30Y9X[_jRmW^.\Jr$IZuM9%Mene'jn$6Qp&F\5?^Oo'n;m/5IZ\IYO7KQ84>@[476\jaOi2>pi+7.t0?ae_pdb-hha\a?UO5YjYO(:H5+bmW(Y.*^,8R\0OJjuq%i`3`Zg^Su+q@06`CLD?Rp%PV]Iqum;V@;.dU$qisH\Fe$X>7KT(Vn2/X+"4?L'kZ\([i)r[)>nWlPFP-i`3al]:mZel^%m@qgR-M%4u:.;\a&Kd^BBg,"*iFY/%MD0\ZU>Eo3K-+X`_BcRI+:ppfIDL]`8]9Y$_*]_D>0?^Zu\^9_#T\B6`#]53"3R/ndIkP*R1Y(*@h/%^:rIsM\gILjVbkGIdsW<V7_@/nm0"T;`>m.3q^+6@9HO"=8huEO)G"Un&aJ[M][XJIfSs6`<T@));T_SlPEnf)cDfel!;'nJ;Wru%?f6']bjYCNVnmXcolK\g17+npGQ$Nh=Y:i/ZG,W@)Q.RT#e#omJ(H>;iS%Y$Rf-MV?i=$WX+"@K>\/<70-5YhMer@+lPE30#DgKS%Gh4T43h51m^-6H)nA!#qJ)*KeX+'<63Ps\HM[pCiBA9;1f.UHokF2/Eht;nWeSd-ABta'nEr!PalPCX]%V?;`IFg.O<PL`Sj%GN1%&bd>Rhj<T;YPJ^h4hdMrFFr6d]&30Ro+YP^_t<]+?WXLdmo;T]@]7UsrESt%IFTuD<Ea]+-PFHt^?ZT5k+$pQ]g%U&r<?-ngA>0j%A9G*S^?asBP43>\D"%4sbIIt*f.VJ*]_e_$msS_b<%2t7;r"F&0t3[LHIjg%NsR\:98[;.f.T>8WQV3(nQio.ni3`f`0/_7bnQ=<%A`)tQV6_\Y^?arl>[=Q0oohQ&IFg+n,B=*]]Y31pMcU>C87J4[qSa8hFsM*Xn+t#<l5-1UAU;r]:'kAMAe=G--.QH#He6SnP/15u%@]O9C]^$@e*-tS(-@XQ"?8r3b#t(!>0(I<>@[>5YTf_9ZE3GKeAj9@!mX&3N'ZH"VkP2uBJ(\:]O(hP)rohV:O6d7X?C)H_B(nS&%.MHbnTId:Q4.&<e'k,"6Zf:HCFCepVXL@LNkG.bFf9c&6*M33#[8WL=c]"np)gYLC9&EFFQ1s1*M3S=hSm4As3uo2Fr@&4X>J$/_%P=oCtD!u&EOahi7CJR&TI8&hp`a8Q6b'^pAs&jZ^hL&LVfX'tio9IY>4o&UdEURW)n&rOfA`NOSC:RHV\uM*Ss%`39>HceXfuK0%%l-dmZI]kHqoqdZXO1[]i=7XeldqnQ]I<Sf!9,iS=c`u([dXM1tnb':LZTUErZ+Mfme@&[UZZk,de<1R`Ut5NB93NBbhisG92P7^t%r[prqrB;f,Hr!FQhVuP17A]+_B<sF5D4]^K$rbiKe3#Rk^:sWKN?VA?4bPR9E@t3t](#[I3,M[MXnh8[?0;MbIRe@Op:2+PX;>$o%HTDuG4o&mXc.F""g0?:bm?MnlHX.\^*7#^FO'/eB[J]aTo%M%ThWhacO)Gj][l>(^l+B#n[`ACK>*N4J,H]M\iNL!4JB:p/\I5-C%lcW("FYEPqk?iVN<E(?!^U;YG>"AF6iNQujj8a2V's2a\q`J,`r(K"@[WYlS23jFQB\QWnH9Bj;XKEDlRjD:2?YnD*]D(uV[F#`C%WDYf,24:NpWj8jV<5<tu8r]hJDl^+J\gfWlBBF71qVRd"N/.#U]R0XbV98?"ZuWQp5:'<I5,V8tO'tMr2"h-)3WK)[/fot9Bip/"%O%tck,ZSrg8:L]ZQJUTHR1fHi[l3W&6GjFq1BA^a9[UW)Z+7F2elD6V?$a.gqQi$5*r^b6YBq'H-,!Tr5>6BQW98*T+#%cgo@&8<%n,?;[rpXS"dJZB%r%L:BqW.RY=eqV2bO(E2\#i%?kOSQHnn%XBrFstAcLT#7KP_GI'(em)$^P,\'r.nhT*gX-H^T)uhC7tB[i[B^%d]kUqOY:3p/-UDCAuEiph&1>TB1J\3j5mn</c&BSHZsc_PF3Up:0OL:`nn$/^[=nFY=d30EP\qfG%QkoA!Wq'm,a^8G4BTe<]V5l%U*Qs:AuK6KG$D/%o>?BLYjlc05":c!,Kc;!n%$l_m$FtrTP[`SMu*QS;t4sJ30tHVHZGu_?f0Vqeb,]4lOJ4i`S^Q*BBr&dSHDe/%/+]\G*\hggNRLmqdCsV0V2Ki:*%:G4^uWN(fd.6BdOa6[F\+c]B:`;[q2`1Dls6WM,^U_]fSbOOF_qWf27L"nq>OJAg2HoGCi>#j%IGiX\JUqU?CleX,0%)Y.GHDV%V_hRt5!&TE,+^:EOVHa"o5FQ7;JI6oY957>738cf([,j5H3Y,_1ae^NDasFW)B3O^:N7.8n)E_<%e0IdTSf`D9E^"</F3HB]%qa*R>p@&pc38g0s1of<WJRM[;K&g]LhKlD5Nq?;0=a`iJ46TW)Ah\WFUDMN+"RbJ\$0%uo\9%-joPqQ%iCa(F\U"c)j$ugkZ92((_qC[fNr_/)bV?gdH24+@_>4)`$H1B0e.,MZ&>!>b7dMb:>)+lchV\",'2'H^X^>*j`q=QECTu;H;Ql*G%\(r/(ps<+6bl\Zn"&/Z1qKs))_!>KgD"uBKbt>f9;*.[Eg."OI(70`d0`O?$<N?+L5si$NSH5OA&\[23/#i4:Ge<5Nn[IEYdII['%.,na]o@[i#I.g6g6YoF>]4G96g-Coe/9BRbpD(BZ$NP'%Pmn-#FnO3,0;\icWBg9cj*Pt%*pMGlJJ)o)IlQuMb>5VeHHP=sQ]<D2%S8/`!Om?nt\SiH4[V<q$q[u:K4.XR`E(=1Pf"TJM*DMAsRC5W)CVQ_!Q\/#9l9MO?'#\P(F]Uk3\L<O:4!<>^<>q)@g[ErO/j%D7%0aJ]THg\!S>4LAUK\s*f(C5S]01m6-9V-[3\"38s4Wp\qhHr;d-r5Uu5f<b5Ei]@rdUN1Hh4"O=n"[,X7[#kLGi4-\"[l-/O:B'j%Wohm=^]W\":5B.?S-QH_LYjUV#/XI/jK&H:_X6"DGm#0&$Q^_YkD$1X&1Ns,*MSp/LtD_f,Ye#pA0&OF%'fFiQ&hV+9_H#WBcg>e%)PWaD)`.QA9D9!_I^^I(:eKM1Op7oHoN3!@(N-7?Oh0?L-Gp$1La=+:Ih"7l'er,)e!QSa>Q`B&P&6EsS;+V^;^dG&DAK\_dH[][%O_RLG+$e2%lk"1=:r\@).Aap6NR85]I?,q_f6q",-9L,D'ft*#qg[Di3X?qjT"m'(&eb8B&q.JcENE(+o5H2,VsD=,fHI&>aH^_G%P(@?Bf:^'c6/YibW@1muhAp"X,EXblOlSL^-*gG5LZ3:RWGdVuRI^BWqBqZq(oHBW?_UcAC,!hV21^N2]mkjDdo1RKdeegthO\7!%U@eF.h^f's7-XY;Lrj?o7-XY;3(mEc;0r7=khT&u4@JH46V\D=)@o\ks,caCV=G1OqhLEEl1#.CWQQ?Nq3-Ej<G7t*M#o%F`7Xqu%*s&(OT-rh`d0`e5Vbe]jf<KO$-EmXG'48"0Y.@LV4M^;/q@ijLnm5pH%hRICn:dO53gnLP?pjt>X]GEBs-,O/lgN=sM>2cc2VVIE%$YZT!LR[Ui,=hY:IlO*(d+DPVM_:5IJCg/Rq[<!AB?BIuD+KEC&.5Kqf&kg8kg>]$09,>ip+4fZ%<fPf]hHiaEIUDhCE9n.qu8;0%9Ztk>/DW(:._EGK%prOJJ,fFp)k+pojsnn]=[%)BIrB`u4R><1pS[P1p\XgVp+nN]<2o<9='$uenSn5Os"Hi";s;i(F.<pF-kR1l%UV]I+pnClmnRsR?YDhnph_ZCNP6F`c,8m=HF_)U]8V#L3V1n*CiSs"!4ZrE0(OirE/.\(rBD.(X2NA`oe'`t;GS:rg;/;J4)5kL?%l.koRleO[$V>HG5f8,mE_Ye7nl=4mPC#/bpYZBnHb,tD:mBHD/IO`aiSeQmPZg/)?[dD0"(iO*YU':/k48="^4EYo%KZ,#R%i;*]%7W<impn-6ul)M<(],n^,0)g9%(nQ323?Km0Q#/A#o0ItRpfXoDoQLo5dcZb-)1+MZ;P'7?&S,$+^*5Qm/NAUQeeBC<iqc2I$?WNr%Ah9TM\hZh_MHMoP=KG1&mYOnq(qW[h4*l:M?MEE1<p3A1FC-H?3'YV\H:Ypu@i(G=QHi:K`+")0q5IBfr,D1Q\`E\8Q9%55]U)"t%hO0^s9(Xj^K$a,7^"f(EJ/&'/!&V@DXp>6=]Hs9#\"o&;Y<VO>JO5;f>.OI6`;nZc&q2S^BRP5Mg=;ZI>gK4Oh(I/H0Z!9<r4+=d%dCThe\]6pqH!$`+[kaR_ENEDeACW0#,g9/QB>pYo>@fMsiV`&[Ab!&)A@/d[0@m)`5tO+@%*nBN6'g)Y-D0X*_T'd\Z]B>RH)U:A%I\pF7(n\LE5FLgZec"df&Q+`i4.Ekc9P..DGPp'X_5`E"fA?,4D,7\IFp#le)'nA3/ht0k]L&^@s10(.,aA^&^.5>P]NqR]WidJZ%4sAK!N3N2c@\=7%X[De<$-8]o*bjLXHXLFhjDJbSa0q-(=,*W1Mu+Z.58G[q_k^g\i,USH8lGS-TQ2e]8s8p]TQ2e]9!TMb,q%_>%fH&bGFeprVi=!d-G*nI:1"O"eh6=gm86B?T)j\"?eq7t%iLdur42?#I!:jSp/siu2l>'p4ip1AtHD=uHFiQ@udG]IiXPjS,2]`fd%]F5P$&9@)]=me]N"S&0R7XM9.GMrP^.,43H+:Ejp:>=a*drt:^q7H<#lKFjR2$(")+>7mi]_'+4gQoaO#$iqci_Jho-Tb3cbafT*%E0q;:777S=aHt:_c8euI^LB)SKDa\[i6hu7$KD*l3/2G<"[_.Qmq:t(!Q("'nm2-@m=7I&F?kAWH1kLa;EI'^m^\>^_W&f2Rfe>c%]K^/hFZIF0p6!)[q4CX6UECU/c><N&@RmtV.<Y7g9.hP8@kV6mjRQSDr-Kif)PV!IH;2^EJE&@U3X!2#ekHbHo\b^9MDBoM[_W:&%h#deY13NqL[j(2t6Lt'NfuCj%,r-U2-lRlT*3#Qt-H>p1SdPEm2`cqUnH2Sr,Ba@iB<o90eFOt6""u>r_UFUEg81bOCS9.;>/c%T%h<Qn8ju,:'W+RchjW3:-A<c@II8Xtc[$d^ll1gTt6[[C[StM#UH.-9(1(E_9ZFj*$E(a[TrQCh)00uimMD&36jN_spD6n6LrN8:=%ks1QqSq&@"6l3o'!/"DaIGriL+)STAA!mg>q-t`XbOFLnE/9daV+P+L=IF%u%ZY*oKNKt_EmcgiiagnGgg9.?U\NRSflNZ)M4AsL%].nB<5D^rK:!]1'UA-gF*[K?j&t/<dFLe'o:?5F?kgOhO$?GCa`4%Nt/fbmUj3=upXoMq64Uh&=$X:9(HfmemQasPsYRL3qK_$k-%5dlQS[648#Qn"uZ:H9;n[Gs&:GH7($Nie1S8:'ks5n722!J@-@#Q)PahlhAo"2M0%1dItRmL9X+,COP.<4kGCe2tL-J;K'\W_IE]%A,2eU7Qi[.H*P-n>ke50RHt&%9o4jFTJ=CL9pr-/Q,R&,F2pB9m@P"XG"3CHJ;Z4D`J<.C**WL:6Cc]-Lks"/.Y;M-%"#I)5f;S#%.W_BGeA2rCo"sKEXWc-ZHbc?i(RJaUQ&8Vjrm,KLV>Ou3\pa>*DQL#OmtI.&Faos'i1c@&;I!q\\^&mdG[r%s*c\)@hf8DU5MKZY%b87)-TBb;%f\biUrAI,np>leXdX0*=,Oa\kFjOo2o4FmQRVj,0BNbN]G3[-iN[bOm+2QU=(MIb.ac9a!L^GTf$-/'*qR9Z`Tf^r,%n$p-T\B);BNZ2m<j0p'Vq++cB&`F+Oqp7Hi6ot*?o1!u-cr_FZBRsG>TXU-Z[,Xi^.#mJt&eUR*:"+bU6u,m>G3n@<3\RrEklpKX%E%gk1=!apeg(DlK:5LX7?dX<Q#<]2s;n71!Imsf8>+B1KA3UIK+6G)c'\LM9*ODAFC+gfMX^E+[NBKaXOS37j^ZD;T-f9"8l2,rH%Ee(h?DRaGqh0VKu\U5H%p)\[35O\dRWqPrFmp#\OIic=EndtgsK)aeZ9m]E3X<C$ai=?r5gUF]pI6/\jLY?[Wr)KTip!`\_p[e.X%mH3_aL1[[SGb]\kg)-7ribu$YgY&8%X@BdQYMlB'`](&.Ki^9KW!`Phr_Mqur\sW\CM:N@>O[-AXBG$7gVA;Q6\Xpmk5NqDF%A)d%IAgJ*ebh?RM:KHKrr[bP_*@obdsm+ZToGbP$YefG#!CbeagP2-FB'@0FL/'kg<_?-=ba(UP@Vh?:J!#dMC.pb\tW,]/5$nhBI^fk%%fPb"Y/73C9p#ED0T^"l3]1$J@LRD(<mNqk'Nm*TMLf7TAQtK8=G%e:A^*&CC9oJ7*)^;a<0L$_Q)kkM@_qUrlVq:LCsu@IVZ]SJ%?g2.Nd!/QZU8pZ;oAM00;_&fEA9_0!RsJ3m/;n.;9Q^VF/B-aoR5Qr?0XkJ:(P*YGMBsUR<HAEN[g\J8;A;bGlCO"O@DQWWUio4[%79Hbp9kWBWL8bVjM_7T4p^/@g(>4j5X13e2.Y<8A1mPdP,b8R):"pTOSrEcEP\iNH+!BXM.S0[Q[Y4ODbGK/]oTa:rP'$H!LQ'd'%)/KThJFEUM=0W0#3^@A80E^$.)g5r=Y^V5>;GADsBJEMXiG-6W'@P!6`=du9W"SffaoDc4E5[t.knr_3J>VI7K-C>b)O;QWf1&^?%`0Y%A^TJJ1[(q'dWHnfeY5eXL"I_p\1m="9GG>Uic#uUTXTB*&8nUA5g'W5#W1m#+ZW5/Z/hs.r=js<<0uTZ_+.fo?2CqkD_;K4"%/9?FJZoQW!*Q%oV>uI@r"(^"lnZU`F!JAiX%H[j-_\Q1f/OGAHKT@^>,ob@.._5qE+R1a^!10RI-,`VK[`bt6L_!j\:-\c+KQIP4%VhEfj?o/ggrQ8u3!i&=:n,Pj2BMf1g*de;W:sl41<rg%gU;I<M-)_onWFa27AGXHqE>:1=B%m)XpO!AW)aFR/W`g/l)iHsiQf6_"%C,.&=UFk_fBgIY_[UbX^WE?qMYXQ$g%m`,h=9(6.J633d'1`-/P%;HIlC,sX%NGFEJN2W,$um8q@[klECHutuUCJ]S>0'K=Aqm$%%5XZB4Bd*@NW/Ue./\7Y/4;%X&W-^]5&B(JH985TE\q#HBi.hY)9]p73L+H721s"MoWB_bm/g-i<oF54`r[le1O!AAM4k)W_ZNS_[%C^9;-.As.S#lk5J%CiRCC'',NTJErh#U=/jE-^)&ZAR7A_7lnn!5tY9CtmNTFAjJ`&'j@>6<A^F<<H"@2G=>e2R!23"R_rQ##(R+%eB[kD+@$X^!.M0Yc'GUD86f0i&2d,DE?p7skF[abJ4OGV0NA4.-L_.I<?P*p6ob?NCV]cmP\RuRYsje+#dM@Q@3bCRc4#V]2AJ4d%[E0i<JY"`W]7H@1(B8IdJP'lH5VTue']@!7U(%8i[->@bWBinfKFKD)__!XQBGSu"[HX,(^&j/0/Z(<8PG`mg>f1Ii-qVKH%6+e&%E<HHP_1;\iPKP(X!<]"22AP:o!$p2T2;m8Y%Udg(-(ms:nH*P-F/E\HOYutS:/**i6ShD/["-rF,?71]M:5t(NG#FK0?"\DKR(=@%P0?9;2,G'@#S`B;2F']]1+pQ*d3Us_,]8l;P#WVrlj%R_dT(&2OMkZKaAg_aDNOq*8-54qJ"mjDl:OK4b_N,g/[cK:Zlk[3W^L5=%Ag4eu13&Mp+6f*MC^,n8>C[fqSRlh+OKdMn&>t(i7EdCef8,egdG-''2TRIQ[.)stqCX2,QY`*_?u(Y]CsB705QX>cRs`!sdq%P'%QHc1?)NFrJ;J",)7dZ.8Bqa6o#W+eW"\*2d+/uQK;%#'f_Zph8GL$$<E71C$=g/cLN3/f]#\)&E%53=T#)WdoJ.g@!f`:iDb1pA,%a[:t3aN(VXBJXIiB/@mkOU]5KMt+_>BI#Ps<De1["IbHh>P?tk88biA4#hLg<F?`M9[-%)`$Uf/fOQ2BWZZ$cgCiSC:kL<e>%_p/%9h%,qYh95-6<;Km&?>ptN`HmrhsbIMNq`b`%'^OO@m,>o%>4m7Y(1;\Jf+u&b>:b2<qK-O@]S.uo-<uP2*_7E+`qKt<9r%.Z#rGB%'gQF_oG+!L"puPgU<mAL1+PD9\[4G3"/)<e"&_D8\=]IWMM19*Da)ER9nrPu3pTs7Ba1\;f20_GJUlc_e0<SW8^kd"Be/fjDG!i)%\60`"AKoT&Fi7,*1EE'ADCa"S)U8SCBNp;,\/>r6Mct5PR,.-qMeQt8k\$h"4;G>a,`O$?$BM!]@O0r6LbbiB3D_HW:rK%aP6V>H%h4PNV(=3c=oM%h&,IS1-_!Y_P[6_SP;U4O"A7X'6!XPf`DP4Khe>CB9"t'7\#[5%S<6WW3&Zo$eREPm'6luI.b.Ju7V$aS[U8`BL%;im=rMDt\\.;UdOB,C[mRrBVfbuK;tA1=8d!m"!$$#Kmf(_)aD<"Jb'E1%hkA5kA@A]hN$Op9F3U<P+(VBh.fWLHGn+CGV;<*]`/%A-A+QfcCc]KZ]n3T[Q`*dm3+f+=o\S5\\e7#B9OmBKAe"Jf9#[[Y9M<,KZn]F\i7[Sr.]\5S`*5WD+aU&Qau24K_:W%FY\#jSA5+%UX"gV;J^st6RJ*Fi<]liV!3F+@7dIJqO&a1Ymp=\!>`SgYCLnfL>5'LCf,?.&>oaK-R`L`5XU][5*-3*!^MiheN4k13)((,?s;%j%oEq5k#+gSGV2\Z=Wcc+6qS/#qL&$j?P0siG?Sr#V:jY^o>EL3"r[c\_(n8fuaKJU*+He]o<CKUs3P$#oE6*!CVWmRT"4q'sNqENf%Xe<fBr5j,H1Xr_770,`Mab58?)@G5>aN9:qkUW-+d&fTKC8[[NTjtm42E3,c!H9\O&Y3+HNWWc2JYHN[Xq5lOC@a,e)Sc]2:P/P`%?'t4L$`T+BLrG<R#I#G4@@MpJ:Y((,9nOfP%Drb:cSh^*+@,Na)jhLP5%J6sPq!*%kb=]K,Aa'mOG$:3lj')>+=SJAU%?/[-*[Mn%/YL9W[q2trO53(*DeCW:3G_OuF0NVK!iBl=$qsW0l=A$>1D4O;ij4=DNqa#7,gq3PJBpbK2?9.F%\(EO[1O1KnYsns@HB6O+:C%`%K,`/EA&V!%d%5qL&A9jr=\t0RJ^>+J(>D55$bdeEJe^"=0k>1.$sBNIP0'Jo1X]:]<)R5Y@0>LV-KG3IVBKRW@M@4)W6q=<"rM:2%T'>/IJ4Rea_ooE';MDpmP\DD">Ym=.eV8Q7'=BD5a[DL]K<.\6=>ho^)gsQCmKX)\/[.>=!Vp4>i/<Jh0e=m_m<8k2:.7trr([U2%a]^%#_<7c\.uMseOTDoCVLSYt$10L0:)8s&$?=IS$ta7j9jnDXE]1>(?nVi<'<hLl!=1K@^/>Ef%npLf8C4JM>250\;XOdi/&K85%Pna`G@Z3.9-)3=)$W`BO)<`HtaF9BD5YTR$P0a83Kh[S7U!8HHQ=?62U6p[)rSU10Fj\d;2FA/<X1IBeC(5%]HVWi#C?Z\aJ&N>]%F\uA4g/OKccsW/sX&(D?1Z44"R8XJ6!.BL"!0:\`'!E?5;D\O(40%k1FPmL_ABe`u@m<OcfoB+d#m=k=WnZ#)C(6d<3PieDQJ"K^%Vk^4,[HYacYsi&m$#ITm/K4/^c?tes%M,l5%@sbb9OShGIFHgMlBLQ%#9ZoTSr[<=AgX`fDR#`J9rrmD;!7u][@2YSJtW;h!SO3u%6d%<#3Xe;Flo@=8Y>45[/6^+nN=D[$&pOHAWC9fD"un;[LY)U!H#*fc-V0E]DPaUL74"8X,(eQFA,]#9#]aGgZ7`pCTf7X.<7UO\%3jKl.2L-i]Dp0U93j_XoSH^hqeVeZc$;-&ko>0?C)2tGgb5u,"I_ljIGF*!a5",2UPQeW6]B_bp?k,F;JnuUJ&dn\Z7e4\g+-.a^%#0e3J";ho<W3'Mk"^1n_'`TXoo[!&jBIi<+1;tE@[Y]G_Eaa,>'E\u*,UUE#YX,ahfkB(&b`]I:`?9=jq'XZ%N;/bqMZT=SBc@Lb%$GUiE@7kbk![&oQTtulq@+e@3d>,Uj$cFOL\ELl=G_Ku++d^dp<Nn$],X?apiaqQk;<l=[0@D2B'/UZ$1S$b9BHY:QR@QcuNMtS9%T+PKQ+;R#d)32:^BW?V?<G]8L7oY/WfT]B"'!`ae`F9^<*!L!]>AQ*G,asGDH*btSqN9,6!534P-G&4<`kLJ&LV.5To>V%C[TMaT%VlqqAMti9Hq)C-#<?O\n&&s^XgOeR[Ts5A)^'!qqCV&s"LUK,lEIt!k`O%3D3ZGtJY'1obR&]:pjZu[R/jnt7>?'aPYWn<c>@GJa%KGF&";k&@W0ogs[PM0bK5BPm7luuE"HD3k[>Da'tYfJ7DF-MUF1C;7O"(^s0/;qRSbU6>5ed:ob,-S)EE]:3K:u0^TkLT`mBe[`m%DALB*DA,bP;o`H9M_;!;B0(-8S#YFtdmPYfC*tFX!Ydb-?rNpGQJ(Xn7Hb]W+_<<kJjCo/eR<9[oJgSO7fn-Ll#&`VK`[/[?Q60U%NED9()OiNXE!17a)%AT4-eM$PfkXt/$7CdEX45#S1ZoUR7?sGBTtJiN!C.<Tn3B?f*2@Q63-dEhn266k+m_o!$=1.sH\=[]S+IH:%5B[c5P0NrU]eOO/d8D>Ij63/Wp.'Ucc$_kQ!uNI0WSg"8&#_u\Q`sLf?DB*25ERN-W+Vjr'M&A<3u\8R7j6cIBlca/fs&Tm+:&cf%'_J6$T\X=>db,ML0i2jD"]f#M!X'*>#;1Ifn&)FNLk(Srkpsl\hGf3a4[SQMBZ][CnK_tL+%8<=9a!M5^e8^$K#n3p7./tZ\sF+q%O`ppCOOX\`Wb?Yd47ZgTi)aa@$%VsXi3>[7d&/^8ZOAR\V2GOX*$nC9At,k^kf)s2*E@T/#c%i;Mkh8s#>oTMemqDnStaS51'\_c%===AfEE'(SVEj_crNm%Pi%\mn@*%Mb9V&h6csi*?_*Bh4#m=d43oio)3+/A+lDQsP*,Q7i%>P?SJT*^i6\K(uKa3B#OK"]rfnt9+%#3ZV-HN6d05R#k"4$#\)YrRF<'L4=E4?cG(3)cV8TQ`nk6p(W_ieXAnMq'*%T=4f;Z>QTbDo&;gL+L4@MLlmKB[Lrqp?`=#@=eO!%[LL/Ko[&H.WZ%H83XBlWnceHT%Eo5dUa(t*608G:"ksJsC"T/<oDoP?a*n#5&T"?Y:m$sp[R^Ea\HO6mEM@trF(heVgs61)#/10(%Q:5tP9HFRu2.CAEG6!MAR:QQ`YTTE#&%QR.S2F`JMhX>7P"<!RA/O[2QW86p0UW-#UPjd*oST:X6W"On2#`Njn[bMN":T>DO:PNj%,j=U\5^0IVqd>$.@>Z@.9HClg(TF@#1skLMUu"p9^c>^(KM8+C,dYQ-kH/F+/^T5L&uD6EZ@&0\A6Yi2.@f(c$H*SK?p9N\EP@<*%6GV[G,6J@RcNN+()#fABkt86`*SCE>k%C'On3btM>6%OuUk\`L-?>&QG8_p^0H3eX-67hi8=/fs&t24a$Vbl&I3k]3o1+$Dcls?r%hDo9;`sG&a,ai0Dkbc5_egst!(-G8W(mD?@>NO3ZL*FG4;95959ST8fPIZ_o?h$i[VOAemLM1XgQgtr+E27;dOdqC:=Q3Go,qrOY%6tV?h)Bp-A-3I:7+-5b7)Dml(JOK"h6l(l-RK*[3=):o9i7"7cN\b,q<<,t649IETFc6!l)ONY=fj?*V/"p1*`^2tO9-V'@J-,F&%q'8M`]!/gl56<9-e:sYg[+Ld>lR'73..P+h$rB;%2Q'%^*!-m^i_GetDR/T2PHE7VD>Hl4(r:`NF$JTu:-X]W8'FL&?QoS@je/qj%)?QU0#H'*b6]hO,Bhgn9P#r!gZH-?+<9gBebM:>^cuatIKm+`1KrA()"f(6P[[<4SH@[AOHF%V\=<u.ZcY3Ih81":n/YX=(!^lrU%?^V6+`?[g(cqtZ-NPT`-/ef7))[t>nN8U32Pc;74k)PpTJJ)58FBS7b.?^O,9Y$[JK0i$r4jp]!M(9:HO]9f#:Z\Ma\MWM#dQ^TJ%U$p0!c+jSsH)%nljn<(u#IpX%YX&MM7_58AK'EK=Rq27IKL$X>2Viq8.3Tp7<9B(/rLnP:aWgIE,#na;;@,M7"AIk\MF:@;F.A%B%lkZHVSRO"GPqqEBbMpU+c7j8$P1Ym@EaOX#,NW)Qmmp;(XCH:r<!O`_#U%lFcG23V/5V$b$bo#sQ;E*`G#/!s.;]1V(i37,S'4&j%lpbu5+pINt@t(@"QH<hnkg\!s_q?%[37p\Q%;IVJ-87OaZZoDjD"OKlL3n"ZeGtU:>X52e.B&27aG(_5SHL1[b-IRe(g<Z(/Tfrm%>*$KO-DhK#eqof$MMiqu+[QKE$2i=.R"I+5b-LPZ"'d_=$m]+)1J_Z\Md#V+W!+DRSn73RMl_7=Ymg@%[MaKe>8C'\0dA/QBL<]:%D7CsgOq3BN6J+cT#TG2<QMEWpN=JG<,XmA+j`G\47;=VI8rl8i$?L15DbeD8PX?ce`Wi`h\JlO"9K6X!$H'u_g_+`"ieX.9*^sKX%7?@^71U0YEerMDQ#-*c;b1@0AW/<r?A8Ga$<jF:EB9@I-._EO?<%7`@gqg3`5?4B_0$40J[n"7_*(e`/oC&D6;E6eC*O)2GNZ,JU%G/FVT^hFM+1-FK:_V03C4u*FuejM#I:_-NJbba6O@g4<d3X_-hmtduG/8,ZO+_d@#>Ekk=\RSpE;4(fB%5i0ta>I'tTZg=!QD5^5%E"U\k?SR$DhF<A79?[G`913rGOW]<Ncr+_CXC*`/ZYc+_U#_J]VfRHP&g*i%k&f*lR8F%Vkr]Rr"OLW1Z88+&d30_*;L!9jio*G.%WQ<q=]')DKOa+p2Zp5^1((Z.a'p1*,LC0ril-(<4#"b@p=E,Sjh6s?&;j,<Eo,N=6W^EA,TLDEr(I>hR^Oj`%()7`Yj)A2rFNu'Y%774IZ8F"JE817E+Wq,sf)R0LgEK'-%F2A\bEtsd,;6$'C-\Lu5d"-u2A6\_s1k#NW0h&=8o&6O>bY+do$kD]7$lp2ID5rK\!1kEZ%ct5lo2GVCZp9Q$`llZSB&.WYDo'4]fQH6P>Cs&D>b?j.=$F#'JlIaW(3^O@Y-&WT_IYFA<)Vn;MTl+g)O:Coc?ugl.%$?&kZ6?H3%bR&%#*!,,1R]3Wc5kMtL%GUD"!$bK(/OC&@9T!\.Jq^'1FjERYY\eQ`\<2-@^G'5g_l1##-3_CH.@U=P;DI&9dhlW=o#:a9N>N[]%\g931D:CmHDG_kX)4Z^&@0i:``'7V.M4Kufj).1B.Ye+&YbT);9)p5ekSjE'RY^c\.+b\jE+pHeg31_1WUTBpV=1u-hcFQV'FpFM%ZibqAm#os[QWg7'LPT4tTj*.$DMeH.K0ZIQ_m@i%A"DG^&K#VK]1K"A4Fe`NrP28Q%&TcJ)K]rFU_n[f-,#J@/R.)!"1l'3HjQ/L%X:pR77HYcr0RGYC"-_+><-5_9Ep$D/a_tT9,'lm"(:&hS2EjG7bFhAP[![XdD.'..U8WN1<_^llTd??VUjG"s$_V]L7&ML+o#`!p%g#*`!KpW-\k[N!D>]`!Z*?_R6d'+5p-^^9\8Y.D,J'b_g_Y%2[@#)VP&5d<aS`DVo1V9=&i#;&PMDG(b</K*Jc;6uC,.:<O(-1&-%eI7]ke*C"5D"\o1YmQ\`>S"Ki5$H'"'adXsn.^&Uj65^9A"H$?KW6ua=XNg\@a1e!%:-'$ij'9@]i%8S!=`RQS:F'5:\Ss)bpoTA%Y[),!$Gcc79q7_ag+C=iCf:'`rtm\QBeBTODE:q%R%p>_HQ6"(L&/pPS(?!d6K_\,I(TdgQc'nAgO#d55g**ELU\W4Eu[kK5G\Vj%[MU@%O"Ci=Eo7K#+AUZjW,RS[>roHFWkaS/2r1%_CS6K'.kHnLN(gUl,^-i!(c"!H^Jq]D<!8J]Oh/YMd"Er/nW[$k_dGD]-oO'r%/IpEVcc-]*R%^GSf77%Wn1p@X1.eRkd<-LhdU0VueO,(c@O`(>\o9ir8*#pjLeM$_NbfD'fO@Lj8OmKG^4)qrPOfhg13DJq@lh(U%NaUd8WlZu/d*4]`(g\&uo\";=$5+*r;*#rq,J<8E-:>gJ\F/9)(8<38KA&f,Jn"6[Q=/tZqV3>Dh-%U&.q_)7[b>G1;j1\U4;,1s%\KcCcd,:5NU$`ZN;:u2?S/L0N_^:qu?c3;UGe#"qOdJ*Bd6M\[C9WB)BKC8>kfP9j%hglY*h7>*Y1^>U`,mcN"XUfZS'&]YR(?&c%0.'1.WPu6sQ/IfV<HdjU/6e9+)\k)qN[#,j:/QeXkG)%e[LX_@@)aVH^Td_GST271@hGb2gJ17Eg9&6N\=`'=>$Slm,H"Dle03!:%>9lq12?*FLX)P^U]F&\*:]LYt[=f!f$1OEh'W"s,"YiS.[lAbCZ%nj?34eT>)Q(iK-GUq/BA"&u`l:&D*N0OBbHbVa644s@fWqUL%+r*g';E!dT5XWC^cgK':Q4J$0:n]jjHpi+lLrm*!3pD*Z,q:6Qbn`m%'Q19(;07OEX>l*c8%43Dr<VF`K8V$e6Z[8P2,8kq:W7u*%Z2gUY8ITJJF0M'\EJn6ojsfS]/_W%8k6,isCk^>O_H&C:i.9';G`B*f<*=YHiM,V2]D'p<pYWIWU$nnKO,'F\p\P2&L%XtRN_6,9%F+tMhIl7$0rs:-4k/Js+dF^6JBls@>NAab7^:h8j)4"B4=M6Q"Auh<=T%RkU,F0-H8<'a>8u]@2Q=B-XeV-t)@r&LkC[@IcauU/W%h5/`UR]Z?GCqOrPe0-^&gmY&h)gc1sbDo!dY$u6]bZM$m_kf$=Nl7ma.W0(I<l^1_1KAHc6E[r5>I7ujn.s4l6]$"$n3ZES7;IY#%Dl77Eg@%SrFVTRN@tp.cd4p&HGg+86/&e(1oX3\QB810k(siFZa@0n@,'*+=^5P0dD8FqHDTu'bc98M`QcCX1=EH/\QbMfk+E@7p%o;KW^<24MMQ?mZ>RAhAnL7\Ule=G1?L$GCBqGR!B`M$`Y<l*(`l"eq^?hu6q<["g!Z/]h8X(98BfkT1\>p=DK4*SnHcd"]&=1!m^%VQOXrIT`])=[gM3f8b_XVTO)5D)0VL6cX#nmFX-tI67)F<oFN/ZdlQqa%TM$b\XT7\RWrZQ1!E^9<C;LbZ=,V4YtU"o4#%*]Se3p%e@]kK$ru`t4rNYB7F1Ukn(]XGmCRmDL?`tHOY$1o!j:c<i!"3XeA+0#9O@rVH=j+.(Y_Vj$1D[dI4[SUbYenrVjXA&hO-0J7D*"n%)/A0MS>iRK"W'a;(QTTC<Q7DPoX45A.9gpWMS*cunL/"U<QJ[rCc1eMhoenDc]4/>Fn40@;l)T,>?P_&=i&9X/WUpYe]VIK9GR0O%0iQ=Z]=G7Ic*K&V9AM`(bZ6aM?GJ,"o@u,pofVrl<^4q0rEodl[q;V5kEQ1Nkd`QD*Bj/@;G#1tZddFpfk7:]B7.m#:QIXp<Re@5%,XY9h)pT>$lBrWueCA'TCmF\;Y-QR.ZT4JN\t3Cm)=$OmA#9T[m$OclSqCOPX6d)qQ9'BZQ_i+O`He=aH_E`9W4#3u-!S&GC.d//%m]gE5RX=ChXm-t`"52u-fftRpnt(2?WP-?DfrFL0,UPnW4nm/sJ^5@CeDL_]AuNQ_!6S,n07%6/`95Z_WPo[/P.DR(qdlbIa.DNG%o!qhVRXBYfl)XC2*N$!_([.<]17ro*WQf)NA?!l;Sf-hb"_9Dgk_mDlW6of[,^krl6dY)`oEDEl?`EK\2Kc,cpInqrc^s8-p%mGu%IDnDI`3[t[F3cC;qq*]'h*-_[CmFnM1ILOnLDmHtmpj[;p%th.V68`h/Mq#J^IZ:8?,_m'ZISIQ/N\A,5Bb7ObKi?#=7`3?PGt.G%c,hLOrG9>_WTcp*4'P_"8=[h!f?\Hse<U"!hoJ^Mcflu`Wr'>>QMQ'uRAIc-,\1JbnTRlqdT?8A;T%9NIi^7kV8)5\U"3SH]4@l6%GNMS+mk9i<10"10,d-bss.$-P^?T'U-[jgca@aTOq(I&kYPlL)AuknI]?F+Omi5p8)ZW:P%!M\2fk@@'!H:rKdbb/bbGTE"!Y@nf%r[n3=R/SuDm[)lr!:H697KB^6%!Mc/A?--J!cZI:pB!;S8q/XI1M?!b!LW.-g^XmXV1r%ULqmibdJsk':4I*\GKb)IJ.o+\Irtbc%b]7uZfR3P]"!Ve!]C-FFqoWlYJEIKlh('&C]&7-%gm[?9!O8g:(Cg]j8Uoh%GKb*lJCnIgCBrKLOlbSRaA_<:NIY6>gdf.CZeS(_%=WPq=9gSb.lU:ss@Ergl6.G22mk<V=$o]$aY;4sC&@o7;M[d0R_pntD1"54g;2abSnGjLah0HeBN:aS#6nL"O.Kjo!V8!E>qdmAL%+d-$@mmn!r[C!CgYkKfg4UK!5T&HQ"R+1rIoa/K(Sc/Zo-fgNc$AB>b(q`p9G_ac*X<<m?L:\0E8\Fr;"`DS*jT=UCA[un+Ed:qL%1%6/cmUG,$E/**a@T[jDM?XPpB=Oag4(c""+gSDWqsK4:<Q<c4_M3uO`XKE-JJ6nG>jIKdb':/nY;seV%[$YR^@-XE2_s1`OM;.5%o77jeh"hRbN7E%c"?0r&$j&M&\dfp)D;BD(E,1bD,.M9OHQo2M(NOeS.)*lDI=s;V1L)'MF*X<\-%q%#rOii\SXSML$/pe6ICFl[%7u#bE,2e"g.bO/H#Vs!m6LK9C?Y-osJpXB-Hm4`=KWZldSJ9j8bH2HjbF@kuH4&=i-Mh;L+hFlZODbE"r:hp^W3BR`gu$h%%V_.@%>Jpn$EY>t,;0`*gVdn"$AN$9BKt-W@;m;PoO3;6PkOq"[;EC<sHTuV@nAF/=j=dTE/(%Q"$QJn;:;Q/,No;la>--J'osE]6'kdb[%M^>.)#FC$9*9ICQ9OT;,.#[<!;DaLSN,?.\V6Cg$E5'b2FEh4NKUbV/$hV?8$sJ7RY:u7!UA9JUWh<gsg[&1C*$"04HcOJ`EWQE.%7F;O-8A2tR-!h^E"ruIii3ZlVe;VM[jS=Z8P??+e%OGHi8N?.YD9.-:X:rVg9.DHVF]#DZLsgV)$RL",56-H^Z@Gou>#m<t%u[3f%r^9*\;c(E,He3+#\6,8-l1k[]=u6lVeo3C3%:P*UW4W3/l"pAuRuZ[0MeKGUJ3q"%E#jqt2OMpN`ZuTIQ>RqZK4U3\h9Ot6gO'PV%Jq0eM)?Bbr?ie4,PXi1d7oC1]T!+5QMYX3(8Pq3f%$a[pUr%XKmjVs8Zp"'LWgJj(Ti2a1.QT%j5G1s_bm(nFctu'1`X5X?$e;25%DJg+_6K?u5!gLKSi5$1e;A_)AC@YSLBVO4f!emD5MJBE"M%1PA!O.9c$lRMCpjR86(9pk-()9!ZQuf3(Mr?q?D6Z+aReq)o7\qsX%SkGtUA@LKsLf\).Og821m8OdMEB_OA^*C'P^+sLLSA_ZHY!Tr_BL:o3,2+Y2K6J5Y8^?3#Ha0e@k?JFL"8"PdlWp5N9[4GdGWml/%K3L=cT9?TQTiBZEMZ#BGdY-=bMn_#A\ctR]HUN+bUcBo0#L)D-'11/'FkSA.@E:RDfUBdY`OIji0*GLC,.F9M0cKPJbo5aq9eLK1%Xhsl@+Qs!jj!l(0W&qh5fJ*_;,UhRUr"\<`+kHj5Ouk6d_<B_*]jDr?e4fiKfS?Y!B"o\eF5-K4+C3tX4N]n+:mtuPdUIjJYGYn&%R=j9/Wn)nc&cgCf'MJVmZs[LP`4HE"N](5K"]@klj%H6H"&/.c[0Pe#??C`ldVVp!Nj)t4Ki6;4>:H<o7faIM,3`M$iq-5B,kg!0%gOu7/.NeDlW*J)8rL>d)d)d."[RF%4OrL?)1/18r/VRZ=FpIkP5Z&14RPLo$$H<Q9U2"*F>G6s^<4UHZ]hICjk^8*';-Z(0Z]V0D%[6N_cTLoZ_:>1rNmUYs?@Go>57@F4qeo;tEK`Z*jQL&<!Qd=S\3]h[:7V/TiU.fj"2PUN6j@&,WEB[R%bn@L,,[CXF=#PYnUS&Eq%md*7)6[f>3C?!2^B_jc,#RCp+WEe!\j=.Si1(D_RE$=Fr=4rMLB4L5DntZ+[_qUi*31@I92Ar^*_+eE6K#'`t8cls,,rRjo/-WWF%2(BeQQXU61'2jn]BK3ed#tumM6jk2j_*JXY=!e0$E?qh4&6WOc8s:0(dNT:$Fd]?Y^2a=V0/;9JUIu\*]BHVPk)0!EpZ"/j>bS+4%(67*ieg,&Ae"A84n#*Mc7$2>E!)D4L$J/7uShoUl\N?-S;1/UK$ui'.@*H4/;.isMe%3M$&7g$nThXKb/P.<^)4)*3Ca/dO.MtSs%dhP@)U>lS\/6+GCTeR5l,*<j&BO7Bf=%,!1J5;HY6l3Z$3R`tNJl14A.2fCD%c_8c*A[8oTf36?dZjVRp9%=3mJjS:/\@>0`pjH5%+*o_9)133X93I>W!sc%H2W1,\\/rfte0ABI^]*(;*_E[6cE95]X%jCfA0upHRJ@KY#_^Um\.2,)pa<ioBn3D-pmhb?11JrrdUPa0%0P4#],*U"`)0">dQ-p<__0&-;*j1t@)Si*u#*hABLUh`C5i/Jl:2aZ@.aCpb=lOa99sd!#LG9$e>B7;J6\%pE"8Ukdgl*8U\dm-`%KA^\i#U^^s>F:%0.co-LjNZjV36Kc4dM1pE_+3s9<Y;p&K@*R:5#eT/=RjBh!/qi9<CmN;N)'6,0+JN3_;`]YqgbqloYm::[S$"p%aQ^pA=":#"g;b%Uh]<.`q17'G9g+Hj:n4>qOZ\C=6Z0k^h<e/[E#'&BpO3;p^of9oHQZ,dfR(7t'o^2JTl,:j+VU?4/+;'mG2$_#%?SHk@hGQG@]0OWRkCu)aG3Y?jmG,>ok<9I8#=K04=Q[G9&j[@n5,+@^H,VT7Hio2u%2c%#ldV"0[mr%nD9[TFMi-,cA]1^T&P&'s%^,<X.Nl0n$f5S(1&9K(90O4EieL^@5SZm1:3#552mc"/]odY%OJ8rcF<R;3#;YF$hC,P,XoVM6RG9c8SdfdHp&+[o?Y+M1DC]-j4%pZ<]"N\&Q/9s'WoksXa'lT/P$gVCGaUbAa#E5l6s9bU2:]cD5Hr9P+3-g1<bd""W5+E-E`dS3tj?p"JlU=`1.Ua%JDkEUL#Jm'0a%NUH&pK=;SG7%Pi=!dd]Jd*)8P*:"?mj?Q/_B5@E1%7`Z`VbrCrWn9kZ4u8]6S,EH"\>_H<Y2`kY7:l_$nAA6Q/8<^*E#CEW1q+Bn%?bj`j4YWt6Q`l*qpYm\RpE(S:)HR\r0rG@'8T$CQP*,ZU"n03B#f+#&,?5EhqR0)TTQ*V5J.3Nc![-sJ/Yh4M@g>nsj&+DG6]R#!%T::j3oSkDIJ8[M%m^F[?PF-eG2hg/%#Gr\XiN?G8B"g2c[!Mh$W2$^-O%.2I-r6f+8."0YR;HtO:Pk.XUm1]'):4<!PbG'qI@+jO%8.j*/,Tm*88tI!L=ATLLh<L$>r6go/JPc-#lP>4Bn#A+\rD.>%YOUg5V.?Q'SUP,SkU`0T".s"5iQlRk0VWuBrTJC(C6)ERgG"HJ%oj\#T#K*l$Gl=;a@FD@[FnpiX1XZsb^@9XE2H#DjoJY@=E7"-?pEB'Wj'952IZ9'_Z]QWQGflgJJgm0,X,,0OkQ8`1r\XGgmB>&>%5?BQc5HS&%Ck`5SL@);H`7tK_1XrZcP>@mOWg(]RDocB0ph9FP>`Y8H?mE-[8U^\K6ec%o#^f%1B-Z2odu?8apd@fja#$PN8('a8%`P$HblW,bPpBEhVEgjM=%0F/KeUkW@1]r$\(=rs4YdSS:J6,RsS=^#l:C#2nCks@4_[rpgF?7\N7'5e[i')M##)58qUI3p0U:nfL%3FZH5Y6(T2b5gOiGj:/fbj>B"2uWZ5hgat\2@:"7N2GP-pC<Q0"XqQ><c/1?^g(^l>pD9)^<A:Yp+(2+/2h%UprA:0G=.7LB2C(@%\M`Wj\Bd\[2U)E`:.6UHG+0\PYLj5[+=cMXgPftm6D<;_,U.n2ogMQhgQT#99K8gNZq3%naJ`1r#jqlTc;i.jbun49j`%]6OG7l-%\b`nR`402TE,tY5Ypp'80St`2Sq86gAel!+V>2$aR/@T6`AZ[kV="?pE>D@<:8C5DoC:qXL@e:N4X55MLI*VWK>I`;__W/)Cm,5)%X.]MZL7;i5`qs$7++o&'6^18F+t)F^UIY:^>g/"]f/:UloLa4Rhq^WfL@NSiZ*^n$#\@q;.[Io/0GLDi!]R9I8RQFaFR"L@<E8;2%!dS-r6_moKfd^FHdf@836Hl6]Bt>Rq\&b(6:S_!I8g'),-s?cJS#Dla86+4T>Se5dENl]Y^/?:&/4d/!'JLu.Sf.`p\Vs%TNQPO)%/ju3#+G=h>4]S:$9Oe/HS?Pto*fZVZd-N<)8mUP2%J.s1?M\s#EdiCd>N\Dl/AV/#dJ4r02>ZEC,2m-RjJKpQjj:eH<taEl@3biX%Fr9dR/[LIJ2,:3Udaq#b)TDT(X?)H=0<ND5VMK0gS@[W:It^0ZbpKCa>MBhXa:nneFGs4fiodQ>:n_0mrPr!]MMC#j+FC;(!XGMi%a:(_D>'<a1q_I5?,S,k:Y*>2Q_uX,&d5DqoPMr4H0ru/7FE8t#$g&F#AEs")V*dh:K,AZ$gDf8]Umtp/78mY`B4du,`f#upSBdoE%\F+N.<qk+^-rarlAH4nsM/>["1Fj8srZe,c[f[j>QJc-m=;/_J\k$>37*PM^Mn/)[+kJE^1jY&Y)#!$=3)[DFbT/3UgjkE9%Oc&c%b1k-EB1tHIKs]0p`^XoQ*+#/;`!-7Y!@SL+5N4+n](D(e!V8D]j#=biWMfVb07K:-+S*7,d1tdgh5]_:6qS%#ao*"Dh.15fD6Ng.%YB*4?nduFC]KF<!UgCQCr/%GL5]EnP%s#.r.$pj'ZkkrgXPAc%Jd6H0G>T]HKbOmRl'"h'VH]r_c[Ug6/.,k))^au\&:6@j!F/1"%7sbGrgM@R)\9RSN0nak)3^#2k."-qC&'s(dSB#:FbLlIk1#@/J$i6`h(:o[<j*Ia?[]kS/:a\dH&+&kL!rXf!^oZokWX]5Th85nK%%a:V;iESlkP)#o^HZVKK1,m'S#Kb914>m8(I3U'FGpDPH="Yrc1`d60n'kZsR.6/=)!\Kl/RL:4&p[supUPhc:1>5em7,R3jIji)%s)70o(Br<&kID^Ai_Pt"L@k(SQK\&'R%%kWK]0Ip6q1!]KjHdR-4!^`#jVZVI[UmE"4;"D.PHj7(@u9%e.EP@3?T;t'd9eE(R:,!%`N#1IRfAp%$/Djs9U#*"@dLL#K.5?l>[0):.?=0AKJJ2t2'(KXjR0E?3g=t[F#\%PJIE+[e+LSR#UYp.qL)Z9/XSe5QtT98et=Ys%A0ekGkhM[jYWdG<0p$KVF6If>mN(ITgneHbW"dKIA]drO_LX,W<k5(;6DREg"P4);@#n@].b/0'=cScQE"ncgF\A/!3<im)7fpc%%.r.9r;jNb!p\>#Xf9P>/ej+2P'XHA)[B86V-KC<G4)?*647mP+Dp\,35'p`-79O&-&T?</NEC>I]HQA&)L65_NS-YZ9:C,f&2A).%+QeZ_12\mSU.i0T1*4XY&#\k$nHQ0^WH(`b.5TXC]]#.SXb'H'Y?rO^>f7R$Q4i63c0D[$0Ebch-g)/g2KpmFHK5!;UqEZcDEm+d%To#jUaJ.N$bg`+'THDr.T%r9PMgOJ"TT-[r2l9rJ7q5^3hcP/A2u1J=iXU@D6L]TXp_NDT?uJM!aZ"Zm)4j:20dFouasQ!aP?!Rd%W\JCrEFE2/)mC(>Zs#2rd,Nn'Lq0ts'DKLD<#eabrW]@>[%8o<9q9"A\2kW,jn,lZ%L#4Dqq:1U\P]D-]d8.=l:m%L-(i[+'+f08%)Ut6mp=RUD!]KSW+nBM-`1.UZ]5].14VuATiH`##9Cm$@.:fg;XSt'NK6P3=dN2ukDFcZbn*@c.7l't"GU"6%_mr4K0p*&2q&nP`%Ct'jcipAuHnTJ:b>SkV>K6Q?d,IOg[X]DRd%YBYc'FCa-1LauMjlRcD=LpunG-sZBpO"XZNOopKl([#QZbiNNWAeX$6n$)#!Fa!b%o-'g;A\cf527_$?k&(-J&T8%\[Lm$[,7]?N_rt*.gEteHq[DXm`#D:*I,F+Rr;M%-\[R=KK!IMn8g#5"ZqI(^1m#qXe\b!Eb8GTK%_b*1kao"3C8tb;YV9d=WCrB@`"1AgJ.j.cuX9<4"m%B?B&d&F[g=%=+4*F:&Ft$P`1_\N<VVKJi+$(401`p<2@@mt=31=,"3PnHd%@HQld-D9$9=`Tl9,WTDXoro(QrC>0WXMdT:Q.T2@$3%[7)W(kT6Cn9q.fh@MPnM84]YF$.*'^IrIl,7l:Fh"16KH#2l8C0'XMbRa%qlC;YEG(Qu33<>EZhZY@"::%a>lP[+;Yn:'?o2g&moDlF7CSOAOg#H;Z^&%A"G2An\/fU:>)<j%gQn,?f^EIk(&C\NemTkd0f(_a%CihZu?sAJgnDs7!&m$i\]8T-Wqq+qY+buK<R-_bV*!<Y9`)S!hC>0%#bK()F4+Y&,Z^,Z=Im<gsSNm>2D#Ici/j,q8GHELAf\>.h%-P3n;qqO*r"K"S28H[Y&X*Xr_m)2B%S_.&s$-n?Q+,0ik3mP?I%AlHINGU)2Z^(tdQiKf!`?B(c!TC4omV4V-g(]8C)-5FggJEhQ%p"Qbc@,WMq=r(LFm01dJ":N5D+M61c(kF@T)q^Hc@EVUm+>@u(1)7kk4.hgJ<7;c/;IDrWl26j>^A)o<Joq-"m"$n-hnF25A)m+3%'_Zi_:!<pD<IgeD+9Dt.']EIa&4W7=HoWlCleA`;'^chKc`qs'P4MsQ9:!lhWcC`^O2h'XSYYRJAdrdPI*?bJ)t*bC?n%$^dqJB<%[Fo*3$`;I*FT!nr4"pl^o1mhY8UOf@b56nVpXX>`><.<FOo1dm5TEq3U00MeAF@MGJcLh6I+&.iUZfi0Q8aE=DP`mf>"s>o5X;c$%"sQbbNWAI>3,'?%;"$n@V5Qo^=@Y2/]rjV>'oZ1sB<)l&>loTkLostoqYNEd!%@RL^(Vbn\?UG;-AG&eaBC5B3j<87]?XsEPi38=%,#)XQ"q's,j0D?!q=#nk.(PTqNC`_OnnoQ0KNnSrJhbaMh&(*iPR9C&kU\;f/lTFInosC`BBSrYacp]53R$W;k@X.``RNo7P*/en%7T=j<*B.Tn*W[IB#aT;(gL!304?cPTlq:r2DliVcqfF+e@[O,O.ilc%NW@G&kR/NB,SaGsJK@?\i;*Q9#o!qOp*7>1'JVkK<sqFJ%=jjNXFVgYNJl?2&3ls`jA<Q2%)(Op<L]m1I(on4#E257_jHba4XAIGkZq<C!,LS'>KnA;C\(t1Q@#1dpU,F,FE3kc\5W%f9ecc_,%n_\5,WD3SG%a,;oD_VK(@h$%T7Mq;NRk&$YWY;)181E0BJJT!`hj;rh;B5ueNY/1'/<9o'&dKl.4%u8^PZnC2HR[:!_d(jk?Ar&"%jtQ@!r?+cr,A:F+,gYm9Ob4/(@U>qf3(/Z9V?eQ#%*f+(0hcq&8><jr(:fee(Y^mHVr*f_oQ9Tf`.4f?/5IR`s"DnEF^[jP<p*>`%cNl@WVbbDMJqoki]iqOIT)i@3]m%*p'q8<'LR`g8J_]"U"4=RYhD@DlBcD^3jZX5\V_f\iUSO*%WLVn,YR6nU?DlMO0irhS1GN5)%74e(6NIDt&cudl+d0.D[dF(1k]aC""^!9Xpo"fU7Ec8CK*.kO&7X6!cbOVqKje:4\1WqaJ`OVT:(KM2%1Gmq@q[dYJ2Lqn"3`"D\%V;aQi@>t+pl0D:j(j&M4Zo1Ag6h=na(or$lVp/IB00Ygg!AoV:cp/;-6[]DMm7%H0.YUjPElF*UH.f(^&CQB_F[g+lL:H'+ZLS3M%bIRb-O%+oWMJ8"k#SRC,3b&bj%$?)jm:F=-hmZlo.#Y,!ld,ha#s_pU3t94]/s&@1ZRN'_P^^b&!_@qM4<QcqUl\NSkN9.;F(Mju%ng;$3N+o`)\.o`JA/T[:F<Z[`cum?)A?`UEO1`rs_dZ@".:[SD-3'Q/O;B^`CP>.-V$DSpdC-6*\@ICm#f/+V+.U##Hd"EWX?qT!%\_(N-:<`\;&E\]ceKn]CVS_>p27aP?/J'UR1E[STLrSE$5(X4d&7aqa6D0]ls0Lj6[R(0<(Q0ltQU4]K=PZhAX9"$@o'6_)gd!a:%5m;qr"7!spPmad^l!$d.M=<2)DX_qNaJG2IBN1<VGK`WVA2kd=Y1+P1<&"E_Tc=l)*iLSXP:sQ(^GNI@O1@Fd*g2:9m*%)U<ZBH&%`H>cpA#lS@(d2h[;o)W66I_D^<*Vqol@QC\eXt@Md:V\,EdVoHd(Z=D@p1cU&/XAJd[/!1dEsNmQPX&?lKDlMcFat+%79WZ;re>g%E[rUZQspp&83!h+/'`Kda$LLdUBlq4"`_db-GV*BRNA39Hf:M2;KVi<lP:gA+RXn.Rd=u/J)UbVJdm:dp[E6eHNg9eg7T.X/u*P>%gfP/fiaO15p!%9b?<=3b7R9i$iYlfk7U=%K3h3HtBQaS<rIH"l(?6^k0(K3Cbm0p_3YZU$(5]P&pGq332((%d%,rHh/p3/ZS'<GW%m"*M-l<XkYdT%+ibYZ?[8\f46AG&92*Aj-RUQknR3b^/jCR^GaQb7SPru+jTXC#ocJbal"Pn=<1d3@\`JZI=<\IK/dou:DUCa+?=%4*PCEl2']X+:Q*a@.>A:dmgM@iS4f/f?kml[%c0N-V)mK'3QO4"&&VR8H`W61n4YCrh&jn,`63B&q49u""iXDFQ#L#VJr"*PXVBq%I3HZLiVWeMN5_c+7@)T%!'JOJkZF$<qncYR).F8i+95Bi'1')mR5e1M*#TSB+p,co2dfn7J>gm*UmW>2JZ,Rd3F7\1d/9_R)5g>X%;;K?e@*C),AVUd_3:eaN(f,h*2H#5IF*.a2%%!f9UEU[$CfAM#[9._X0<Kpu63'R&!+8>8[@dqP/)mAt_Ys%?<2GdI(LRl9U/X9D%A.sl]ptS_@9-f:C"Lj22_fCQ],(GRuP60-CN4s_IU7Op!0;Qj&8C8V#;;ENeJU0>b;\5Ra)s-@F[fO@9J72"V\s]ta%,al]\ud;Z%*N6SHYZf$@o=$'C4;.,:OAU*bm4bRWnpl6W>H_NE_0&1drJt!@Y3>&1VgSS7Z<UZM&.dk/+FA[`6'67l"h=%NlP0r0g3R0M?GnhM%Lgdp4f4-Bc54;<$Od2WjO9-FCf5LIIU^mgg)Mc[;fT4m$`fngB.+/4H+EjS(Gu8a6<NiudERKB59SJC`BK71L<WccX&gXeinr,h8%gN;6DBVidDg^1sfJ1.\[XQph0.f/eem'JRIA^3h?\7URT![0_QiR6,BA'pIaY@J*AKh!S+\qZgNZRQSd]h.I8Q2da'8,l?IPNK?C%dKho-5bAPn5c-obj9*V!#W#Mu:WV</'>knPI#shQG65=k&V`h$rZ!-D(4tk@D#^7F7),2*I(L_g6W:)BIQQu;piCc*ZKJ)i.[5-I%#gbm`fp>uKXfrn;h;]Ool@<-2G?eg$fe('@rY)Sp6XL:OF3bqE)Wgh`=`u"skpg>HW.2j%Nm\%LnTWQ,$U]0$DNpS+8@[jX3W!5X%hgMQ2i`]AiHspnJq9^A87/lg=^"GZTblcq_;a2.8?Is,%:p_*"a(D7!>L#GXIJ)N]B>UT)T"+o4ll!$c(Cm^X1iIJ7m\(Os0S-4$%\5e,p<WZci4-1;D:bL5mal`"*"IBP>>nkESc-mVc'(O);OmjjIdBB2RmLbhf',"(U-TZdYbFJ-Z>QdCYO?)F_>?AB6J=(?VG2afQ%"nD]I+=;."0O)4r-tZ)cq4*[pb!Ak0g:QS@L'VHo+QTRF85@;GZa%`SCV7.I)/&Jnn43,m!r8LMU;[5e9erOfl#`NmM-V8Y0ZJJA%S/(h8bd7T_.>h_\eq(V]<2=UBafg=#RKtl/+CR+@s+7GP^^+@PL&%j+I+E3@`m&G!Y&Im,rhTVd[dXS2)ZR`:@a1cF)fT1_6?;@#%ARgg^:&Tc>4[9i(5t'N8N:F;5;A6sY0!QA5SdeRIErp-\7sWXlnT1-O$KJ,!MH:LhXLFR2WV!%OB1W.E@<W%[P=Dd5@d*(LPCZ87%5;\1W<`HTu#I!b!f?OL1(d+E>eLM:BLcaP2O<N9h)nqYgnB/2qe0*?39\r\VnrCk=!7j;(PDF18km]Ps%Ot,8hqi:gnfsHCN-X&1%kT*eS6gNc,!@.c8p!k5958!U]/i/e\DL#r)#[W$R8gl\X;1RPrfnN4<\fu5QGaQ7=a7mi9)qSY<KW1aG")h4tOeFGmf*FUG`o3+0%LoukL?WUk,\rB9/**?ch&$l70We,m1qXT#>/gJ.MI3)SQTiNIU(<7p:`X\Oa3'/))DT,d!DWSeR1Iaf1*Dg%^]_riGX>Gnuad4Eu%3HP+)#uLki4]$.+a$k/HCUc[c-kr;$P%(@2p;P0f/.rq_#ca2U7TjIWfc.I9"g70E@5?bV^J;ufLO_omcd[af'6l!E.iI+&#;=r0%b&:f'bi*ChPQT!1TpNYlf@".U7H&BoOs0fGPW06*O*DdI`s<2L9H\rZ&cMibJ`?U@4>rkUR/5rY1gQ>i##V0O6@'oW&j6_$s+hKr%lAMjiR+fMlBRFQ)MKZ7fAa,P+C%3Ram^@$<6m[Nhq;>g&iO`+[O<pOGPs@a\#l@6Y)X=/hFjs]2-:,e9Zg*N*JK>AoM#jS4P]ao&%pnGpTb;Y>5"(FCp+MN^:L6!)KdNgeRI;Bb'EVg%p<f=[tE_`!N&Z8%m$EQQqJYC':C-Y\[*[?#C8%*Omf%<@N<rLGT;#nTC"'#<,%Zn?c?$j.Ko:Ud#V0<m<o>D]U4CD[e..FcfWKUDk:Hs[`6dN3UicaA7@IoL%=C$"#?U,\1#C;"aK^#h,^8m9Wo0uYT[$um.f0cJtI%%\Co<^9k5oPQXhWiVQf.XGPFPkI+W05:%LUb;m&IJ>N+4>Tg1g"T2rP_nO*H&SWTe8/YS7*q(;a!aHX,=E@pO<':53oE3=n^n#*,%@R.;@@5CLKWOf/KQR-Jm.7EW6:q7C;2q=DK1J.U)P2au1A(Vu5=T@nmr3bq<6"6dmno0j-?+C-`jO,0;o8o'-CI@cQPoF*Hl:nC?%jRhOTRJ!t+Ihs/Z\X**W$kb'+8(&TE8=V=1IX))gqRH^u!V?Jhj!pJY<KHTn%E5+_$n.^i2P@)0hi#f5[q;aFQNU'19F_FUc@LnJ%(bFj_>@l9=5WH[G(Yt-"!53LM$1-[#=2S/c3>#'sY__@>Uh?6]W2=_<d'4oZDlXK9h_]JehApal7C4G-LW+C')<`IND6flu`Fm.A%Z6^IC$dltWp2TbK,R65lbefEFCPsoPAHg[/[$kl+QQckL`J=qn2u(3Zn=,m)GBcEL+YR\BK4%Y*%K&\f)aNj%-1a5;q:qJGLCE5B%k5B6*+n/5Qk^d1)bH<,t$U$ukKq^Hoc_<4neLIObV!'q"!=kuS*cQ,;On\$)dB0/'A"BO&YR9A6^>%XP`th/m(T^qL_?$ee:gufl%^uX!CJ39TF1%8$9,ZTn-&]'_=%#6_@nm=*@`sgS'BlVLi%N\g*c0:9L8;kET![:?4j$M>ed\k(J($SHVHWH[l9dMr+&?&'i'KmS,%ANXK\]lM4VAb7\V;&C`RP.aOFGT[B97is)LE*ni;f7)g^\s!`FmY<aC(jN,+a1Y=pgD;0u"2T-/'7I8T]Q_fAV+!p3T>*.u(iuD*%\K+u=F"CM8K9Y>>]8_n]O=B'hPoO/-nmL3K[".DJm`7@T/k?<#DTC\_]q.qWcm2$!6[;F_q.t(tGS99Fl(2pBg`*^45Lqh:BA_Ok%K0OI'dt-Im<:,a43/fJFn(onq8f6KlO#]=!ZKU^P6g)'8>\n?"e_[dJM/NWRdh<;SY7p6I*5Ga#[oP1OMdcM64oFr[WJA6qQ<=1N%gst+,FfQ)u\A7tNW_]+0&pB&q?@"-IicNh2nk]lN=;?XHR'c5M-FloPdRMN&VOK[[Q:924`j0W'!msSRSB0XO3#%Ep)o^>$B-U@=%R3tk]bg(A+XU(/#?+)ZF8diHH/,fBB-S`nZ+VHoH?uALN6POoFgUL:(62i?;C0:[*gOj`C6uJ<`(&TQ&n^-:2.9\H=K;`^$X"ptU%AKI4Mc[DFV.=lbfHKp,9``"=o*)CRUj7%UmEInfK>,Yc/(mom?L/4BqTMTD@#V/HoO>=go,CR\%(P_kdM*&V7bm6\Sh8oi<cVnHB%&\1BJc_CV3Y'<e^?Y8Tb=2s<lc?6u,/9'j"FArVI7\O%s`;pJne?b8W??`sPCJ@<.Er:h>Go=(an*-!uOn,:Jr)n?hO#B-@]Skao%OaC-`!08k4l!:n0I=p;%!#0io-,_ghii,>\_s`gFh"!XG]R"W!W@tlb8C!AqX=&6)P7t3m'@UNaYD[3Q4gmM"?#6`TT,2?(1&,OZ%4TLAlF\tCt7\IAPC:DrlR69cp4+\gC?/M+5l]5<3<4*9?VO/fEXd61"\"g=&lg,dsL?DFWFn3WngO/RCR=ufIlt)AV##]e*ZRA#*%=:0A5H028P>&QTm@\.BXdEWL]<Pc"37\*Eds-"&+W&E!uk"V0sdItC(;jgqTN3=fM0FH2<5+,Na(S+57EHMm5`>p0qYGVKui)P^^%GdJq`#FiC+]?'%:D(\t6:OH2Y17=M=X;75*TBl&D\?Y*^a\ag]bj[r%OC47aKp\'bU<+</;NX=,N#HH>g`pu:9<`4gf2sEcMBknB%W[f*GalEQITag<_'GlK)HMZSIEloi20!daqE4RSU)2LNFg,V][n!F=Df/d]>qWEXJUY[3)AB%I^e(s/LRBC0jBS*a)#,,A./\.SW%^bAE_"Pq9Dhnt&gW'd=$)[sh-U?960X,<gWf44FsG?4J+A[P]3/``(#)dV@G>V`SCTE9/UcGJ\<!Tr@r^UL^`^<L]#2(EWkNolKB%G+4]N.!*L(@Sgn8'Tn?Us.em2KO")!/1u3XRnGrL<P:R$9kuALank6uDE=2JY@.d7\ja^%*9'CX-b!]1p-C&.e)iUQA0u45Ar^,V%pcqM#5;8?[7jRaa"/3@PLcM<HZRIP:_gu3r'sj;[4rFV>$m0jP^L0(T67%LCA%DAFPp?Y4'.[4K/n#@7m(qWl3Je=(8:C!XqECC?%McLb*6-^n56GC/TKJGrP%Yk?WR>U#1),itilV[qP74:*\SoG\]b(,_>.gT]1o!Q^j+)Cd`PW-#gARaF7DFSpOjCXYP@)9'elO)]6%$"]!Z]8WieABL_d,o_4e&EhCrT+!0N<l3*/2jA,QhNB<4o+b:PpuDZh55Bbl:Hn1\?Yf\urh_6_BS(B7@Q'Ok-Ngp=4<l[)d&51.%"&#l3/gK=E"!#.?@c_"QREP8:F?:s'pgcomF7TYmh*cPR314_8^IcPKGlqM#f4-.UI$';o+1*i3TAd+S%gIPjal\eD`OdPoj@Bm,%,X*)r[^DT#`Y1&ng#A4cG$;S2:ZhO(RVMB7^mJJI&^#3ejD12\5*/2]Dep*0T,k@7-pq2c4puH<q!r>.G$C7*3jC6,$P:_E[u;Xk%G7"FXOVZG'2F.`_Vkd0=mY^-RP\[!hDX18A=`LZ,YhM3(+4M)qG7l'i6,I\B?`-0-gRAm"@fI=%!WaN&Ab*p$83aUg'h4hdF`_(q%H-d&"/+Z_*;"WF:XBIT0Fs3X$h1m4V.M\QrFVn)_gqsLj;uF`UE56STI(!LsN1Mea-c0`,Xts+C_1?es2?<DU'd?hBg_C2'i$h*(%gtqer?(1)3_p(8nUi9%6VS[M4R)'"'F^U/sbu\;Zb5o*l]iAMjC"M9Va.=O/0B3kB)5R2U6k.r`at9+IaX/lNBDn7"qf?u#YGI<e%V`X7heTQf5P[>dQY)-s!CV;S$\i'[jWC&S3@b]6AFTAQ(`>$FF87Kb).S$O!D'eEKc[3qKPdIi[c/CI.KEs@G%+KmJ@:(jY)o4p_%&s/)q07^PG,P5m(P(gp%q1DTk`It%RTgXgN_h0J\!HF1aBuiB(\T8q(D?aqhXf.$(=[phmeCU5Ihe6Kp/D5\Ucb\@3:\W.\F?Y"F%fq5,,j"n4sQpr2J<K75[5MuDK!mu/7WpscA/]r>`P25<)>o!MV-+nR:P$a2CEp)f$,T\'0cBJSBR0THj;5<l!`GfI9!gNCsA>N^_%@,PM(ZnS3VHZH?Z7$u9spm@F7OJ@FVib$?>l>AcuRTsfd`@s:NJKP:*jgQoMeu/UJ,'q1,Jm]d#*Tb45`=JcP(+[2;W'B=u8_MoE%SpgBE!_Be64(8PIWIn?4K(hQU-Ta,mghU&7\SoJ7Xq;uR,,o`dVo[F2]uAaf31k8T&.E4alI,e/8gRmAbTZf+5`g:U>9+%e$ZNEs%C>g@C6gEa.]QZ-L<!CT-3kLX;j$9UOr^h'E/;\AD:j9uIK4Mb#p8Zf@:'I62,cSsTijng;_c8KQA,*="_\?^6Utpq!HH3Nr0#&uk%@m,'9gAYO+P"D#N5Jg<nc^oh>Ujki_c*.0<DdP+5@/[8^q<Mu!]S^M@f%97qiMN/72EQh5k-+g^KuIYLC4Roh38j`."\$WM65A-g%@k7eC!9_tJp=HP/g40/#S19p'r=>sKqY*4&TZ7Q`GPH=QEJL0]/?4%GX^6;aT<I`A^S8L"@r1g9Dau8))0JDfAC4O7R0B@N?D)(*%aIU)u//DkMfVE#Rp7;cYk.u23;;I.%bj3mTP]354e4"TrQ@QQ;%3=OKIeRD`?s'SWD_`nTr=oTleo"N&b0#>bN2[ie3oj3N6ATKq%kP)joHTsT=jZVJW6g5FQ*IHK')XL<m?DJe8jh#<.=USuc6!_5WT_!WK(r/K$Mdgd>/E1sC]5*McLWPU=Qai<a\ZHLEOHdG&M8p##%4SX-tV/_Sidd"6PlW:>ojZ:%/,j[1Mf^ZLA/E\_#=@5<fi<P-['KppDm?\oDqtL%rJ,f,T]mfmoT76U\Dnc/=_a".qLS+S1QQQ8!%O$EU6jUZk:n\9SMqW#mds66^Orq30R^]3lt&&8&7QbWOaQ_2"kjZib:5="(l7.VLLq#*GTh3\-H`$(?9~>%AI9_PrivateDataEnd